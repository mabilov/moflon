/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>User Step Nf To Message Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getUserStepNfToMessageRule()
 * @model
 * @generated
 */
public interface UserStepNfToMessageRule extends AbstractRule,
		NormalStepNFToMessageRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,packageDeclaration,sysActor,actor,flow,useCase,step));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object sysActor is really bound\n            JavaSDM.ensure ( sysActor != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects sysActor and actor \n            JavaSDM.ensure ( !sysActor.equals (actor) );\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object sysActor is really bound\n            JavaSDM.ensure ( sysActor != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects sysActor and actor \n            JavaSDM.ensure ( !sysActor.equals (actor) );\n\n            // create object __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_sysActor\n            __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __packageDeclaration_actors_sysActor\n            __packageDeclaration_actors_sysActor.setName (\"actors\");\n            // assign attribute __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor.setName (\"actors\");\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n            // assign attribute __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,sysActor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_useCases_useCase,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_sysActor,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_actor,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setTrg( actor);\n\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,packageDeclaration,sysActor,actor,flow,useCase,step);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor sysActor, Actor actor,
			NamedFlow flow, UseCase useCase, NormalStep step);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      Actor sysActor = null;\n      ActorToLifeline sysActorToSysLine = null;\n      Lifeline sysLine = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      NormalStepToMessage stepToMessage = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge sysLine__coveredBy__combo = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge combo__covered__line = null;\n      EMoflonEdge line__coveredBy__combo = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge operand__covered__sysLine = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge combo__covered__sysLine = null;\n      EMoflonEdge messageReceive__enclosingOperand__operand = null;\n      EMoflonEdge sysLine__coveredBy__messageSend = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge operand__fragment__messageReceive = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge messageSend__covered__sysLine = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge sysLine__coveredBy__operand = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToOperand\"));\n\n         // ensure correct type and really bound of object flowToOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActorToSysLine\"));\n\n         // ensure correct type and really bound of object sysActorToSysLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         sysActorToSysLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         messageSend.getCovered().add(sysLine);\n\n\n         // create link\n         combo.getCovered().add(sysLine);\n\n\n         // create link\n         operand.getCovered().add(sysLine);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( operand);\n\n\n         // create link\n         line.getCoveredBy().add(operand);\n\n\n         // create link\n         line.getCoveredBy().add(combo);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToOperand is really bound\n         JavaSDM.ensure ( flowToOperand != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object sysActorToSysLine is really bound\n         JavaSDM.ensure ( sysActorToSysLine != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToOperand and actor \n         JavaSDM.ensure ( !flowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actor) );\n\n         // check isomorphic binding between objects sysLine and actor \n         JavaSDM.ensure ( !sysLine.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToOperand and actorToLine \n         JavaSDM.ensure ( !flowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActor and actorToLine \n         JavaSDM.ensure ( !sysActor.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and actorToLine \n         JavaSDM.ensure ( !sysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToOperand and combo \n         JavaSDM.ensure ( !flowToOperand.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects sysActor and combo \n         JavaSDM.ensure ( !sysActor.equals (combo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and combo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and combo \n         JavaSDM.ensure ( !sysLine.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToOperand and flow \n         JavaSDM.ensure ( !flowToOperand.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects sysActor and flow \n         JavaSDM.ensure ( !sysActor.equals (flow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flow) );\n\n         // check isomorphic binding between objects sysLine and flow \n         JavaSDM.ensure ( !sysLine.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flowToOperand \n         JavaSDM.ensure ( !interaction.equals (flowToOperand) );\n\n         // check isomorphic binding between objects line and flowToOperand \n         JavaSDM.ensure ( !line.equals (flowToOperand) );\n\n         // check isomorphic binding between objects message and flowToOperand \n         JavaSDM.ensure ( !message.equals (flowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToOperand) );\n\n         // check isomorphic binding between objects operand and flowToOperand \n         JavaSDM.ensure ( !operand.equals (flowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToOperand) );\n\n         // check isomorphic binding between objects step and flowToOperand \n         JavaSDM.ensure ( !step.equals (flowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysActor and flowToOperand \n         JavaSDM.ensure ( !sysActor.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flowToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysLine and flowToOperand \n         JavaSDM.ensure ( !sysLine.equals (flowToOperand) );\n\n         // check isomorphic binding between objects useCase and flowToOperand \n         JavaSDM.ensure ( !useCase.equals (flowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToOperand) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects sysActor and interaction \n         JavaSDM.ensure ( !sysActor.equals (interaction) );\n\n         // check isomorphic binding between objects sysActorToSysLine and interaction \n         JavaSDM.ensure ( !sysActorToSysLine.equals (interaction) );\n\n         // check isomorphic binding between objects sysLine and interaction \n         JavaSDM.ensure ( !sysLine.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects sysActor and line \n         JavaSDM.ensure ( !sysActor.equals (line) );\n\n         // check isomorphic binding between objects sysActorToSysLine and line \n         JavaSDM.ensure ( !sysActorToSysLine.equals (line) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects sysActor and message \n         JavaSDM.ensure ( !sysActor.equals (message) );\n\n         // check isomorphic binding between objects sysActorToSysLine and message \n         JavaSDM.ensure ( !sysActorToSysLine.equals (message) );\n\n         // check isomorphic binding between objects sysLine and message \n         JavaSDM.ensure ( !sysLine.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActor and messageReceive \n         JavaSDM.ensure ( !sysActor.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageReceive \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysLine and messageReceive \n         JavaSDM.ensure ( !sysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActor and messageSend \n         JavaSDM.ensure ( !sysActor.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageSend \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects sysLine and messageSend \n         JavaSDM.ensure ( !sysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects sysActor and operand \n         JavaSDM.ensure ( !sysActor.equals (operand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and operand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (operand) );\n\n         // check isomorphic binding between objects sysLine and operand \n         JavaSDM.ensure ( !sysLine.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActor and packageDeclaration \n         JavaSDM.ensure ( !sysActor.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActorToSysLine and packageDeclaration \n         JavaSDM.ensure ( !sysActorToSysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysLine and packageDeclaration \n         JavaSDM.ensure ( !sysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects sysActor and step \n         JavaSDM.ensure ( !sysActor.equals (step) );\n\n         // check isomorphic binding between objects sysActorToSysLine and step \n         JavaSDM.ensure ( !sysActorToSysLine.equals (step) );\n\n         // check isomorphic binding between objects sysLine and step \n         JavaSDM.ensure ( !sysLine.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects sysActor and stepToMessage \n         JavaSDM.ensure ( !sysActor.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysActorToSysLine and stepToMessage \n         JavaSDM.ensure ( !sysActorToSysLine.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysLine and stepToMessage \n         JavaSDM.ensure ( !sysLine.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysActorToSysLine and sysActor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActor \n         JavaSDM.ensure ( !sysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects useCase and sysActor \n         JavaSDM.ensure ( !useCase.equals (sysActor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActorToSysLine \n         JavaSDM.ensure ( !sysLine.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysActorToSysLine \n         JavaSDM.ensure ( !useCase.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActorToSysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysLine \n         JavaSDM.ensure ( !useCase.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object sysLine__coveredBy__combo\n         sysLine__coveredBy__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__covered__line\n         combo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__combo\n         line__coveredBy__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__sysLine\n         operand__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__covered__sysLine\n         combo__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__operand\n         messageReceive__enclosingOperand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__messageSend\n         sysLine__coveredBy__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__fragment__messageReceive\n         operand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__covered__sysLine\n         messageSend__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__operand\n         sysLine__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"UserStepNfToMessageRule\");\n         // assign attribute sysLine__coveredBy__messageSend\n         sysLine__coveredBy__messageSend.setName (\"coveredBy\");\n         // assign attribute messageSend__covered__sysLine\n         messageSend__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__operand\n         sysLine__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__sysLine\n         operand__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__combo\n         sysLine__coveredBy__combo.setName (\"coveredBy\");\n         // assign attribute combo__covered__sysLine\n         combo__covered__sysLine.setName (\"covered\");\n         // assign attribute operand__fragment__messageReceive\n         operand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__operand\n         messageReceive__enclosingOperand__operand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute line__coveredBy__combo\n         line__coveredBy__combo.setName (\"coveredBy\");\n         // assign attribute combo__covered__line\n         combo__covered__line.setName (\"covered\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n\n         // create link\n         sysLine__coveredBy__messageSend.setSrc( sysLine);\n\n\n         // create link\n         combo__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         operand__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__combo.setSrc( sysLine);\n\n\n         // create link\n         messageSend__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__operand.setSrc( sysLine);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         sysLine__coveredBy__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         messageSend__covered__sysLine.setSrc( messageSend);\n\n\n         // create link\n         operand__fragment__messageReceive.setSrc( operand);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         sysLine__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         messageReceive__enclosingOperand__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__sysLine.setSrc( operand);\n\n\n         // create link\n         combo__covered__line.setSrc( combo);\n\n\n         // create link\n         sysLine__coveredBy__combo.setTrg( combo);\n\n\n         // create link\n         line__coveredBy__combo.setTrg( combo);\n\n\n         // create link\n         combo__covered__sysLine.setSrc( combo);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         messageReceive__enclosingOperand__operand.setSrc( messageReceive);\n\n\n         // create link\n         operand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         combo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__combo.setSrc( line);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,packageDeclaration,sysActor,actor,sysLine,messageSend,sysActorToSysLine,operand,combo,flow,flowToOperand,messageReceive,line,useCase,useCaseToInteraction,step,message,interaction,stepToMessage,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      Actor sysActor = null;\n      UseCase useCase = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __sysActorToSysLine_source_sysActor = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __sysActorToSysLine_target_sysLine = null;\n      EMoflonEdge __flowToOperand_target_operand = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __flowToOperand_source_flow = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      CSP csp = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Lifeline sysLine = null;\n      Iterator fujaba__IterSysActorToSysActorToSysLine = null;\n      ActorToLifeline sysActorToSysLine = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterFlowToFlowToOperand = null;\n      FlowToInteractionFragment flowToOperand = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"UserStepNfToMessageRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from flow to flowToOperand\n               fujaba__Success = false;\n\n               fujaba__IterFlowToFlowToOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n               while ( fujaba__IterFlowToFlowToOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToOperand.next ();\n\n                     // check object flowToOperand is really bound\n                     JavaSDM.ensure ( flowToOperand != null );\n                     // bind object\n                     _TmpObject = flowToOperand.getTarget ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n\n                     // iterate to-many link source from sysActor to sysActorToSysLine\n                     fujaba__Success = false;\n\n                     fujaba__IterSysActorToSysActorToSysLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysActor,ActorToLifeline.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterSysActorToSysActorToSysLine.hasNext () )\n                     {\n                        try\n                        {\n                           sysActorToSysLine = (ActorToLifeline) fujaba__IterSysActorToSysActorToSysLine.next ();\n\n                           // check object sysActorToSysLine is really bound\n                           JavaSDM.ensure ( sysActorToSysLine != null );\n                           // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                           JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                           // bind object\n                           sysLine = sysActorToSysLine.getTarget ();\n\n                           // check object sysLine is really bound\n                           JavaSDM.ensure ( sysLine != null );\n\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // iterate to-many link source from useCase to useCaseToInteraction\n                           fujaba__Success = false;\n\n                           fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n                           {\n                              try\n                              {\n                                 useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                                 // check object useCaseToInteraction is really bound\n                                 JavaSDM.ensure ( useCaseToInteraction != null );\n                                 // bind object\n                                 interaction = useCaseToInteraction.getTarget ();\n\n                                 // check object interaction is really bound\n                                 JavaSDM.ensure ( interaction != null );\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object actor is really bound\n                                    JavaSDM.ensure ( actor != null );\n                                    // check object actorToLine is really bound\n                                    JavaSDM.ensure ( actorToLine != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object flowToOperand is really bound\n                                    JavaSDM.ensure ( flowToOperand != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object packageDeclaration is really bound\n                                    JavaSDM.ensure ( packageDeclaration != null );\n                                    // check object step is really bound\n                                    JavaSDM.ensure ( step != null );\n                                    // check object sysActor is really bound\n                                    JavaSDM.ensure ( sysActor != null );\n                                    // check object sysActorToSysLine is really bound\n                                    JavaSDM.ensure ( sysActorToSysLine != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check object useCase is really bound\n                                    JavaSDM.ensure ( useCase != null );\n                                    // check object useCaseToInteraction is really bound\n                                    JavaSDM.ensure ( useCaseToInteraction != null );\n                                    // check isomorphic binding between objects sysActor and actor \n                                    JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                                    // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                                    JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check link actor from step to actor\n                                    JavaSDM.ensure (actor.equals (step.getActor ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link actors from actor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                                    ));\n\n                                    // check link actors from sysActor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                                    ));\n\n                                    // check link flows from flow to useCase\n                                    JavaSDM.ensure (useCase.equals (flow.eContainer()\n                                    ));\n\n                                    // bind object\n                                    combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                                    // check link source from actorToLine to actor\n                                    JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                                    ));\n\n                                    // check link source from flowToOperand to flow\n                                    JavaSDM.ensure (flow.equals (flowToOperand.getSource ()\n                                    ));\n\n                                    // check link source from sysActorToSysLine to sysActor\n                                    JavaSDM.ensure (sysActor.equals (sysActorToSysLine.getSource ()\n                                    ));\n\n                                    // check link source from useCaseToInteraction to useCase\n                                    JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                                    ));\n\n                                    // check link steps from step to flow\n                                    JavaSDM.ensure (flow.equals (step.eContainer()\n                                    ));\n\n                                    // check link target from actorToLine to line\n                                    JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                                    ));\n\n                                    // check link target from flowToOperand to operand\n                                    JavaSDM.ensure (operand.equals (flowToOperand.getTarget ()\n                                    ));\n\n                                    // check link target from sysActorToSysLine to sysLine\n                                    JavaSDM.ensure (sysLine.equals (sysActorToSysLine.getTarget ()\n                                    ));\n\n                                    // check link target from useCaseToInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                                    ));\n\n                                    // check link useCases from useCase to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                                    ));\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_source_actor\n                                    __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __step_actor_actor\n                                    __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToOperand_target_operand\n                                    __flowToOperand_target_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_operand_operand\n                                    __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToOperand_source_flow\n                                    __flowToOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCase_flows_flow\n                                    __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flow_steps_step\n                                    __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_interaction_interaction\n                                    __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_lifeline_line\n                                    __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_target_line\n                                    __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor.setName (\"actors\");\n                                    // assign attribute __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor.setName (\"actors\");\n                                    // assign attribute __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor.setName (\"source\");\n                                    // assign attribute __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine.setName (\"target\");\n                                    // assign attribute __combo_operand_operand\n                                    __combo_operand_operand.setName (\"operand\");\n                                    // assign attribute __flowToOperand_source_flow\n                                    __flowToOperand_source_flow.setName (\"source\");\n                                    // assign attribute __flowToOperand_target_operand\n                                    __flowToOperand_target_operand.setName (\"target\");\n                                    // assign attribute __useCase_flows_flow\n                                    __useCase_flows_flow.setName (\"flows\");\n                                    // assign attribute __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase.setName (\"source\");\n                                    // assign attribute __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction.setName (\"target\");\n                                    // assign attribute __flow_steps_step\n                                    __flow_steps_step.setName (\"steps\");\n                                    // assign attribute __step_actor_actor\n                                    __step_actor_actor.setName (\"actor\");\n                                    // assign attribute __line_interaction_interaction\n                                    __line_interaction_interaction.setName (\"interaction\");\n                                    // assign attribute __interaction_lifeline_line\n                                    __interaction_lifeline_line.setName (\"lifeline\");\n                                    // assign attribute __actorToLine_source_actor\n                                    __actorToLine_source_actor.setName (\"source\");\n                                    // assign attribute __actorToLine_target_line\n                                    __actorToLine_target_line.setName (\"target\");\n                                    // assign attribute __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __step_actor_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actor);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    __flowToOperand_target_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __combo_operand_operand.setTrg( operand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(operand);\n\n\n                                    // create link\n                                    __combo_operand_operand.setSrc( combo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(combo);\n\n\n                                    // create link\n                                    __flowToOperand_source_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setTrg( flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    __flow_steps_step.setSrc( flow);\n\n\n                                    // create link\n                                    __flowToOperand_source_flow.setSrc( flowToOperand);\n\n\n                                    // create link\n                                    __flowToOperand_target_operand.setSrc( flowToOperand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flowToOperand);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setSrc( line);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(line);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setTrg( line);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setTrg( line);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setSrc( useCase);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    __flow_steps_step.setTrg( step);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(step);\n\n\n                                    // create link\n                                    __step_actor_actor.setSrc( step);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setSrc( interaction);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setSrc( actorToLine);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_target_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToOperand_source_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_source_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToOperand_target_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,packageDeclaration,sysActor,actor,sysLine,sysActorToSysLine,operand,combo,flow,flowToOperand,line,useCase,useCaseToInteraction,step,interaction,actorToLine));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"UserStepNfToMessageRule\");\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n\n                                          // create link\n                                          ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"packageDeclaration\", packageDeclaration);\nmatch.registerObject(\"sysActor\", sysActor);\nmatch.registerObject(\"actor\", actor);\nmatch.registerObject(\"flow\", flow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"step\", step);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor sysActor, Actor actor,
			NamedFlow flow, UseCase useCase, NormalStep step);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"person\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"system\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_sysActor_description = CSPFactoryHelper.eINSTANCE.createVariable(\"sysActor.description\", true, csp);\r\nvar_sysActor_description.setValue(sysActor.getDescription());\r\nvar_sysActor_description.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();EqActorType eqActorType_0 = new EqActorType();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eqActorType_0);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neqActorType_0.setRuleName(\"\");\r\neqActorType_0.solve(var_sysActor_description,literal1);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor sysActor, Actor actor,
			NamedFlow flow, UseCase useCase, NormalStep step);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nisApplicableMatch.registerObject(\"sysActor\",sysActor);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"sysLine\",sysLine);\r\nisApplicableMatch.registerObject(\"sysActorToSysLine\",sysActorToSysLine);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"flowToOperand\",flowToOperand);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			PackageDeclaration packageDeclaration, Actor sysActor, Actor actor,
			Lifeline sysLine, ActorToLifeline sysActorToSysLine,
			InteractionOperand operand, CombinedFragment combo, NamedFlow flow,
			FlowToInteractionFragment flowToOperand, Lifeline line,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			NormalStep step, Interaction interaction,
			ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"sysActor\", sysActor);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"sysLine\", sysLine);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"sysActorToSysLine\", sysActorToSysLine);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"flowToOperand\", flowToOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult,
			EObject packageDeclaration, EObject sysActor, EObject actor,
			EObject sysLine, EObject messageSend, EObject sysActorToSysLine,
			EObject operand, EObject combo, EObject flow,
			EObject flowToOperand, EObject messageReceive, EObject line,
			EObject useCase, EObject useCaseToInteraction, EObject step,
			EObject message, EObject interaction, EObject stepToMessage,
			EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __messageReceive_enclosingOperand_operand = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __operand_fragment_messageReceive = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object sysLine is really bound\n            JavaSDM.ensure ( sysLine != null );\n            // check isomorphic binding between objects sysLine and line \n            JavaSDM.ensure ( !sysLine.equals (line) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __sysLine_coveredBy_operand\n            __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_combo\n            __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_sysLine\n            __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_messageSend\n            __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingOperand_operand\n            __messageReceive_enclosingOperand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_covered_sysLine\n            __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_covered_sysLine\n            __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_covered_line\n            __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_combo\n            __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_fragment_messageReceive\n            __operand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __sysLine_coveredBy_messageSend\n            __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n            // assign attribute __messageSend_covered_sysLine\n            __messageSend_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_operand\n            __sysLine_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_sysLine\n            __operand_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_combo\n            __sysLine_coveredBy_combo.setName (\"coveredBy\");\n            // assign attribute __combo_covered_sysLine\n            __combo_covered_sysLine.setName (\"covered\");\n            // assign attribute __operand_fragment_messageReceive\n            __operand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_operand\n            __messageReceive_enclosingOperand_operand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __line_coveredBy_combo\n            __line_coveredBy_combo.setName (\"coveredBy\");\n            // assign attribute __combo_covered_line\n            __combo_covered_line.setName (\"covered\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n            // create link\n            __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n            // create link\n            __operand_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n            // create link\n            __combo_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __sysLine_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_covered_sysLine.setSrc( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_fragment_messageReceive.setSrc( operand);\n\n\n            // create link\n            __messageReceive_enclosingOperand_operand.setTrg( operand);\n\n\n            // create link\n            __sysLine_coveredBy_combo.setTrg( combo);\n\n\n            // create link\n            __combo_covered_sysLine.setSrc( combo);\n\n\n            // create link\n            __combo_covered_line.setSrc( combo);\n\n\n            // create link\n            __line_coveredBy_combo.setTrg( combo);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_operand.setSrc( messageReceive);\n\n\n            // create link\n            __operand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_combo.setSrc( line);\n\n\n            // create link\n            __combo_covered_line.setTrg( line);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object sysLine is really bound\n            JavaSDM.ensure ( sysLine != null );\n            // check isomorphic binding between objects sysLine and line \n            JavaSDM.ensure ( !sysLine.equals (line) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,sysLine,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"contextNodes\");\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand operand, CombinedFragment combo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor sysActor = null;\n      ActorToLifeline sysActorToSysLine = null;\n      Lifeline sysLine = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToMessage stepToMessage = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __messageReceive_enclosingOperand_operand = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge __operand_fragment_messageReceive = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge stepToMessage__target__message = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToOperand\"));\n\n         // ensure correct type and really bound of object flowToOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActorToSysLine\"));\n\n         // ensure correct type and really bound of object sysActorToSysLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         sysActorToSysLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         step.setActor( actor);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToOperand is really bound\n         JavaSDM.ensure ( flowToOperand != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object sysActorToSysLine is really bound\n         JavaSDM.ensure ( sysActorToSysLine != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToOperand and actor \n         JavaSDM.ensure ( !flowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actor) );\n\n         // check isomorphic binding between objects sysLine and actor \n         JavaSDM.ensure ( !sysLine.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToOperand and actorToLine \n         JavaSDM.ensure ( !flowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActor and actorToLine \n         JavaSDM.ensure ( !sysActor.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and actorToLine \n         JavaSDM.ensure ( !sysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToOperand and combo \n         JavaSDM.ensure ( !flowToOperand.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects sysActor and combo \n         JavaSDM.ensure ( !sysActor.equals (combo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and combo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and combo \n         JavaSDM.ensure ( !sysLine.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToOperand and flow \n         JavaSDM.ensure ( !flowToOperand.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects sysActor and flow \n         JavaSDM.ensure ( !sysActor.equals (flow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flow) );\n\n         // check isomorphic binding between objects sysLine and flow \n         JavaSDM.ensure ( !sysLine.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flowToOperand \n         JavaSDM.ensure ( !interaction.equals (flowToOperand) );\n\n         // check isomorphic binding between objects line and flowToOperand \n         JavaSDM.ensure ( !line.equals (flowToOperand) );\n\n         // check isomorphic binding between objects message and flowToOperand \n         JavaSDM.ensure ( !message.equals (flowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToOperand) );\n\n         // check isomorphic binding between objects operand and flowToOperand \n         JavaSDM.ensure ( !operand.equals (flowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToOperand) );\n\n         // check isomorphic binding between objects step and flowToOperand \n         JavaSDM.ensure ( !step.equals (flowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysActor and flowToOperand \n         JavaSDM.ensure ( !sysActor.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flowToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flowToOperand) );\n\n         // check isomorphic binding between objects sysLine and flowToOperand \n         JavaSDM.ensure ( !sysLine.equals (flowToOperand) );\n\n         // check isomorphic binding between objects useCase and flowToOperand \n         JavaSDM.ensure ( !useCase.equals (flowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToOperand) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects sysActor and interaction \n         JavaSDM.ensure ( !sysActor.equals (interaction) );\n\n         // check isomorphic binding between objects sysActorToSysLine and interaction \n         JavaSDM.ensure ( !sysActorToSysLine.equals (interaction) );\n\n         // check isomorphic binding between objects sysLine and interaction \n         JavaSDM.ensure ( !sysLine.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects sysActor and line \n         JavaSDM.ensure ( !sysActor.equals (line) );\n\n         // check isomorphic binding between objects sysActorToSysLine and line \n         JavaSDM.ensure ( !sysActorToSysLine.equals (line) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects sysActor and message \n         JavaSDM.ensure ( !sysActor.equals (message) );\n\n         // check isomorphic binding between objects sysActorToSysLine and message \n         JavaSDM.ensure ( !sysActorToSysLine.equals (message) );\n\n         // check isomorphic binding between objects sysLine and message \n         JavaSDM.ensure ( !sysLine.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActor and messageReceive \n         JavaSDM.ensure ( !sysActor.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageReceive \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysLine and messageReceive \n         JavaSDM.ensure ( !sysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActor and messageSend \n         JavaSDM.ensure ( !sysActor.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageSend \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects sysLine and messageSend \n         JavaSDM.ensure ( !sysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects sysActor and operand \n         JavaSDM.ensure ( !sysActor.equals (operand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and operand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (operand) );\n\n         // check isomorphic binding between objects sysLine and operand \n         JavaSDM.ensure ( !sysLine.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActor and packageDeclaration \n         JavaSDM.ensure ( !sysActor.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActorToSysLine and packageDeclaration \n         JavaSDM.ensure ( !sysActorToSysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysLine and packageDeclaration \n         JavaSDM.ensure ( !sysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects sysActor and step \n         JavaSDM.ensure ( !sysActor.equals (step) );\n\n         // check isomorphic binding between objects sysActorToSysLine and step \n         JavaSDM.ensure ( !sysActorToSysLine.equals (step) );\n\n         // check isomorphic binding between objects sysLine and step \n         JavaSDM.ensure ( !sysLine.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects sysActor and stepToMessage \n         JavaSDM.ensure ( !sysActor.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysActorToSysLine and stepToMessage \n         JavaSDM.ensure ( !sysActorToSysLine.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysLine and stepToMessage \n         JavaSDM.ensure ( !sysLine.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects sysActorToSysLine and sysActor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActor \n         JavaSDM.ensure ( !sysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects useCase and sysActor \n         JavaSDM.ensure ( !useCase.equals (sysActor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActorToSysLine \n         JavaSDM.ensure ( !sysLine.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysActorToSysLine \n         JavaSDM.ensure ( !useCase.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActorToSysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysLine \n         JavaSDM.ensure ( !useCase.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object __combo_covered_sysLine\n         __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_combo\n         __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_covered_sysLine\n         __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_messageSend\n         __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_operand\n         __messageReceive_enclosingOperand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_sysLine\n         __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_fragment_messageReceive\n         __operand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_operand\n         __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_covered_line\n         __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_combo\n         __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"UserStepNfToMessageRule\");\n         // assign attribute __sysLine_coveredBy_messageSend\n         __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n         // assign attribute __messageSend_covered_sysLine\n         __messageSend_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_operand\n         __sysLine_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_sysLine\n         __operand_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_combo\n         __sysLine_coveredBy_combo.setName (\"coveredBy\");\n         // assign attribute __combo_covered_sysLine\n         __combo_covered_sysLine.setName (\"covered\");\n         // assign attribute __operand_fragment_messageReceive\n         __operand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_operand\n         __messageReceive_enclosingOperand_operand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute __line_coveredBy_combo\n         __line_coveredBy_combo.setName (\"coveredBy\");\n         // assign attribute __combo_covered_line\n         __combo_covered_line.setName (\"covered\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n\n         // create link\n         __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n         // create link\n         __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n         // create link\n         __combo_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n         // create link\n         __operand_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __operand_fragment_messageReceive.setSrc( operand);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __sysLine_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __operand_covered_sysLine.setSrc( operand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_operand.setTrg( operand);\n\n\n         // create link\n         __sysLine_coveredBy_combo.setTrg( combo);\n\n\n         // create link\n         __line_coveredBy_combo.setTrg( combo);\n\n\n         // create link\n         __combo_covered_line.setSrc( combo);\n\n\n         // create link\n         __combo_covered_sysLine.setSrc( combo);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __operand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingOperand_operand.setSrc( messageReceive);\n\n\n         // create link\n         __combo_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_combo.setSrc( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,packageDeclaration,sysActor,actor,sysLine,messageSend,sysActorToSysLine,operand,combo,flow,flowToOperand,messageReceive,line,useCase,useCaseToInteraction,step,message,interaction,stepToMessage,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __sysActorToSysLine_source_sysActor = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __sysActorToSysLine_target_sysLine = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __messageReceive_enclosingOperand_operand = null;\n      EMoflonEdge __flowToOperand_target_operand = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __operand_fragment_messageReceive = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToOperand_source_flow = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      CSP csp = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n      Actor sysActor = null;\n      Iterator fujaba__IterSysLineToSysActorToSysLine = null;\n      ActorToLifeline sysActorToSysLine = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterOperandToFlowToOperand = null;\n      FlowToInteractionFragment flowToOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"UserStepNfToMessageRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link target from operand to flowToOperand\n         fujaba__Success = false;\n\n         fujaba__IterOperandToFlowToOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n         while ( fujaba__IterOperandToFlowToOperand.hasNext () )\n         {\n            try\n            {\n               flowToOperand = (FlowToInteractionFragment) fujaba__IterOperandToFlowToOperand.next ();\n\n               // check object flowToOperand is really bound\n               JavaSDM.ensure ( flowToOperand != null );\n               // bind object\n               _TmpObject = flowToOperand.getSource ();\n\n               // ensure correct type and really bound of object flow\n               JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n               flow = (NamedFlow) _TmpObject;\n\n               // iterate to-many link target from sysLine to sysActorToSysLine\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToSysActorToSysLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,ActorToLifeline.class,\"target\")).iterator ();\n\n               while ( fujaba__IterSysLineToSysActorToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysActorToSysLine = (ActorToLifeline) fujaba__IterSysLineToSysActorToSysLine.next ();\n\n                     // check object sysActorToSysLine is really bound\n                     JavaSDM.ensure ( sysActorToSysLine != null );\n                     // bind object\n                     sysActor = sysActorToSysLine.getSource ();\n\n                     // check object sysActor is really bound\n                     JavaSDM.ensure ( sysActor != null );\n\n                     // iterate to-many link target from line to actorToLine\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterLineToActorToLine.hasNext () )\n                     {\n                        try\n                        {\n                           actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n                           // check object actorToLine is really bound\n                           JavaSDM.ensure ( actorToLine != null );\n                           // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                           JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                           // bind object\n                           actor = actorToLine.getSource ();\n\n                           // check object actor is really bound\n                           JavaSDM.ensure ( actor != null );\n\n                           // check isomorphic binding between objects sysActor and actor \n                           JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                           // iterate to-many link target from interaction to useCaseToInteraction\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n                           while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n                           {\n                              try\n                              {\n                                 useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                                 // check object useCaseToInteraction is really bound\n                                 JavaSDM.ensure ( useCaseToInteraction != null );\n                                 // bind object\n                                 useCase = useCaseToInteraction.getSource ();\n\n                                 // check object useCase is really bound\n                                 JavaSDM.ensure ( useCase != null );\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object actor is really bound\n                                    JavaSDM.ensure ( actor != null );\n                                    // check object actorToLine is really bound\n                                    JavaSDM.ensure ( actorToLine != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object flowToOperand is really bound\n                                    JavaSDM.ensure ( flowToOperand != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysActor is really bound\n                                    JavaSDM.ensure ( sysActor != null );\n                                    // check object sysActorToSysLine is really bound\n                                    JavaSDM.ensure ( sysActorToSysLine != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check object useCase is really bound\n                                    JavaSDM.ensure ( useCase != null );\n                                    // check object useCaseToInteraction is really bound\n                                    JavaSDM.ensure ( useCaseToInteraction != null );\n                                    // check isomorphic binding between objects sysActor and actor \n                                    JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                                    // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                                    JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // bind object\n                                    packageDeclaration = sysActor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) sysActor.eContainer() : null;\n\n                                    // check object packageDeclaration is really bound\n                                    JavaSDM.ensure ( packageDeclaration != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(packageDeclaration.getActors().contains(sysActor));\n\n                                    // check link actors from actor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                                    ));\n\n                                    // check link flows from flow to useCase\n                                    JavaSDM.ensure (useCase.equals (flow.eContainer()\n                                    ));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link source from actorToLine to actor\n                                    JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                                    ));\n\n                                    // check link source from flowToOperand to flow\n                                    JavaSDM.ensure (flow.equals (flowToOperand.getSource ()\n                                    ));\n\n                                    // check link source from sysActorToSysLine to sysActor\n                                    JavaSDM.ensure (sysActor.equals (sysActorToSysLine.getSource ()\n                                    ));\n\n                                    // check link source from useCaseToInteraction to useCase\n                                    JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                                    ));\n\n                                    // check link target from actorToLine to line\n                                    JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                                    ));\n\n                                    // check link target from flowToOperand to operand\n                                    JavaSDM.ensure (operand.equals (flowToOperand.getTarget ()\n                                    ));\n\n                                    // check link target from sysActorToSysLine to sysLine\n                                    JavaSDM.ensure (sysLine.equals (sysActorToSysLine.getTarget ()\n                                    ));\n\n                                    // check link target from useCaseToInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                                    ));\n\n                                    // check link useCases from useCase to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_source_actor\n                                    __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageSend_covered_sysLine\n                                    __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_messageSend\n                                    __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_combo\n                                    __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_covered_sysLine\n                                    __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_operand\n                                    __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_covered_sysLine\n                                    __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageSend_message_message\n                                    __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __message_sendEvent_messageSend\n                                    __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_coveredBy_operand\n                                    __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageReceive_enclosingOperand_operand\n                                    __messageReceive_enclosingOperand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToOperand_target_operand\n                                    __flowToOperand_target_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_operand_operand\n                                    __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_covered_line\n                                    __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_fragment_messageReceive\n                                    __operand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_coveredBy_combo\n                                    __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_covered_line\n                                    __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCase_flows_flow\n                                    __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToOperand_source_flow\n                                    __flowToOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageReceive_message_message\n                                    __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __message_receiveEvent_messageReceive\n                                    __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_target_line\n                                    __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_lifeline_line\n                                    __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_interaction_interaction\n                                    __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_message_message\n                                    __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __message_interaction_interaction\n                                    __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor.setName (\"actors\");\n                                    // assign attribute __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor.setName (\"actors\");\n                                    // assign attribute __sysLine_coveredBy_messageSend\n                                    __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n                                    // assign attribute __messageSend_covered_sysLine\n                                    __messageSend_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_operand\n                                    __sysLine_coveredBy_operand.setName (\"coveredBy\");\n                                    // assign attribute __operand_covered_sysLine\n                                    __operand_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_combo\n                                    __sysLine_coveredBy_combo.setName (\"coveredBy\");\n                                    // assign attribute __combo_covered_sysLine\n                                    __combo_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor.setName (\"source\");\n                                    // assign attribute __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine.setName (\"target\");\n                                    // assign attribute __combo_operand_operand\n                                    __combo_operand_operand.setName (\"operand\");\n                                    // assign attribute __operand_fragment_messageReceive\n                                    __operand_fragment_messageReceive.setName (\"fragment\");\n                                    // assign attribute __messageReceive_enclosingOperand_operand\n                                    __messageReceive_enclosingOperand_operand.setName (\"enclosingOperand\");\n                                    // assign attribute __flowToOperand_source_flow\n                                    __flowToOperand_source_flow.setName (\"source\");\n                                    // assign attribute __flowToOperand_target_operand\n                                    __flowToOperand_target_operand.setName (\"target\");\n                                    // assign attribute __line_coveredBy_operand\n                                    __line_coveredBy_operand.setName (\"coveredBy\");\n                                    // assign attribute __operand_covered_line\n                                    __operand_covered_line.setName (\"covered\");\n                                    // assign attribute __line_coveredBy_combo\n                                    __line_coveredBy_combo.setName (\"coveredBy\");\n                                    // assign attribute __combo_covered_line\n                                    __combo_covered_line.setName (\"covered\");\n                                    // assign attribute __useCase_flows_flow\n                                    __useCase_flows_flow.setName (\"flows\");\n                                    // assign attribute __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase.setName (\"source\");\n                                    // assign attribute __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction.setName (\"target\");\n                                    // assign attribute __message_sendEvent_messageSend\n                                    __message_sendEvent_messageSend.setName (\"sendEvent\");\n                                    // assign attribute __message_receiveEvent_messageReceive\n                                    __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                                    // assign attribute __message_interaction_interaction\n                                    __message_interaction_interaction.setName (\"interaction\");\n                                    // assign attribute __interaction_message_message\n                                    __interaction_message_message.setName (\"message\");\n                                    // assign attribute __line_interaction_interaction\n                                    __line_interaction_interaction.setName (\"interaction\");\n                                    // assign attribute __interaction_lifeline_line\n                                    __interaction_lifeline_line.setName (\"lifeline\");\n                                    // assign attribute __messageSend_message_message\n                                    __messageSend_message_message.setName (\"message\");\n                                    // assign attribute __messageReceive_message_message\n                                    __messageReceive_message_message.setName (\"message\");\n                                    // assign attribute __actorToLine_source_actor\n                                    __actorToLine_source_actor.setName (\"source\");\n                                    // assign attribute __actorToLine_target_line\n                                    __actorToLine_target_line.setName (\"target\");\n                                    // assign attribute __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actor);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n                                    // create link\n                                    __operand_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __combo_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                                    // create link\n                                    __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n                                    // create link\n                                    __messageSend_message_message.setSrc( messageSend);\n\n\n                                    // create link\n                                    __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    __line_coveredBy_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __operand_covered_sysLine.setSrc( operand);\n\n\n                                    // create link\n                                    __messageReceive_enclosingOperand_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __flowToOperand_target_operand.setTrg( operand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(operand);\n\n\n                                    // create link\n                                    __combo_operand_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __operand_covered_line.setSrc( operand);\n\n\n                                    // create link\n                                    __operand_fragment_messageReceive.setSrc( operand);\n\n\n                                    // create link\n                                    __line_coveredBy_combo.setTrg( combo);\n\n\n                                    // create link\n                                    __combo_covered_sysLine.setSrc( combo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(combo);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_combo.setTrg( combo);\n\n\n                                    // create link\n                                    __combo_covered_line.setSrc( combo);\n\n\n                                    // create link\n                                    __combo_operand_operand.setSrc( combo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __flowToOperand_source_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __flowToOperand_target_operand.setSrc( flowToOperand);\n\n\n                                    // create link\n                                    __flowToOperand_source_flow.setSrc( flowToOperand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flowToOperand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                                    // create link\n                                    __messageReceive_message_message.setSrc( messageReceive);\n\n\n                                    // create link\n                                    __operand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                                    // create link\n                                    __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                                    // create link\n                                    __messageReceive_enclosingOperand_operand.setSrc( messageReceive);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setTrg( line);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setTrg( line);\n\n\n                                    // create link\n                                    __operand_covered_line.setTrg( line);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(line);\n\n\n                                    // create link\n                                    __line_coveredBy_combo.setSrc( line);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setSrc( line);\n\n\n                                    // create link\n                                    __combo_covered_line.setTrg( line);\n\n\n                                    // create link\n                                    __line_coveredBy_operand.setSrc( line);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setSrc( useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                                    // create link\n                                    __messageReceive_message_message.setTrg( message);\n\n\n                                    // create link\n                                    __interaction_message_message.setTrg( message);\n\n\n                                    // create link\n                                    __message_sendEvent_messageSend.setSrc( message);\n\n\n                                    // create link\n                                    __message_interaction_interaction.setSrc( message);\n\n\n                                    // create link\n                                    __messageSend_message_message.setTrg( message);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(message);\n\n\n                                    // create link\n                                    __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                                    // create link\n                                    __message_interaction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __interaction_message_message.setSrc( interaction);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setSrc( interaction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setSrc( actorToLine);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToOperand_source_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_combo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_source_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_combo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_target_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_fragment_messageReceive,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToOperand_target_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_covered_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_messageSend,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,packageDeclaration,sysActor,actor,sysLine,messageSend,sysActorToSysLine,operand,combo,flow,flowToOperand,messageReceive,line,useCase,useCaseToInteraction,message,interaction,actorToLine));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"UserStepNfToMessageRule\");\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n\n                                          // create link\n                                          ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"sysLine\", sysLine);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand operand, CombinedFragment combo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand operand, CombinedFragment combo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"person\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"system\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_sysActor_description = CSPFactoryHelper.eINSTANCE.createVariable(\"sysActor.description\", true, csp);\r\nvar_sysActor_description.setValue(sysActor.getDescription());\r\nvar_sysActor_description.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();EqActorType eqActorType_0 = new EqActorType();Eq eq = new Eq();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eqActorType_0);\r\ncsp.getConstraints().add(eq);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neqActorType_0.setRuleName(\"\");\r\neqActorType_0.solve(var_sysActor_description,literal1);\r\neq.setRuleName(\"\");\r\neq.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nisApplicableMatch.registerObject(\"sysActor\",sysActor);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"sysLine\",sysLine);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"sysActorToSysLine\",sysActorToSysLine);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"flowToOperand\",flowToOperand);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			PackageDeclaration packageDeclaration, Actor sysActor, Actor actor,
			Lifeline sysLine, MessageOccurrenceSpecification messageSend,
			ActorToLifeline sysActorToSysLine, InteractionOperand operand,
			CombinedFragment combo, NamedFlow flow,
			FlowToInteractionFragment flowToOperand,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Message message, Interaction interaction,
			ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"sysActor\", sysActor);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"sysLine\", sysLine);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"sysActorToSysLine\", sysActorToSysLine);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"flowToOperand\", flowToOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult,
			EObject packageDeclaration, EObject sysActor, EObject actor,
			EObject sysLine, EObject messageSend, EObject sysActorToSysLine,
			EObject operand, EObject combo, EObject flow,
			EObject flowToOperand, EObject messageReceive, EObject line,
			EObject useCase, EObject useCaseToInteraction, EObject step,
			EObject message, EObject interaction, EObject stepToMessage,
			EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_168636 = null;\n      InteractionOperand __DEC_messageReceive_fragment_812382 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_595114 = null;\n      InteractionOperand __DEC_messageSend_fragment_284806 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_953817 = null;\n      Message __DEC_messageReceive_receiveEvent_953817 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_473599 = null;\n      Message __DEC_messageSend_receiveEvent_473599 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_297358 = null;\n      Message __DEC_messageReceive_sendEvent_297358 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_171120 = null;\n      Message __DEC_messageSend_sendEvent_171120 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_757952 = null;\n      MessageEnd __DEC_message_message_757952 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // iterate to-many link covered from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from combo to line\n               fujaba__Success = false;\n\n               fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n               while ( fujaba__IterComboToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // bind object\n                     _TmpObject = _edge_coveredBy.getTrg ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link covered from messageSend to sysLine\n                     JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                     // iterate to-many link covered from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check link fragment from messageReceive to operand\n                           JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // check link covered from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_168636 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_168636 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_168636 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_168636 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_168636.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_812382 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_812382 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_812382 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_812382 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_812382.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_595114 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_595114 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_595114 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_595114 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_595114.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_284806 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_284806 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_284806 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_284806 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_284806.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_953817\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_953817 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_953817.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_953817 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_953817.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_953817 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_953817 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_953817 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_953817.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_473599\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_473599 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_473599.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_473599 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_473599.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_473599 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_473599 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_473599 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_473599.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_297358\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_297358 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_297358.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_297358 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_297358.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_297358 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_297358 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_297358 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_297358.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_171120\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_171120 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_171120.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_171120 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_171120.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_171120 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_171120 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_171120 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_171120.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_757952\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_757952 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_757952.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_757952 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_757952.next ();\n\n                                       // check object __DEC_message_message_757952 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_757952 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_757952 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_757952.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_757952 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_757952.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to sysLine\n                              JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_160(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_817850 = null;\n      InteractionOperand __DEC_messageReceive_fragment_641447 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_704078 = null;\n      InteractionOperand __DEC_messageSend_fragment_487971 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_738245 = null;\n      Message __DEC_messageReceive_receiveEvent_738245 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_740559 = null;\n      Message __DEC_messageSend_receiveEvent_740559 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_666388 = null;\n      Message __DEC_messageReceive_sendEvent_666388 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_122327 = null;\n      Message __DEC_messageSend_sendEvent_122327 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_713134 = null;\n      MessageEnd __DEC_message_message_713134 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link covered from messageSend to sysLine\n         JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n         // iterate to-many link covered from sysLine to operand\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // check link fragment from messageReceive to operand\n               JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // iterate to-many link covered from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from combo to line\n                     fujaba__Success = false;\n\n                     fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                     while ( fujaba__IterComboToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // iterate to-many link src from sysLine to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to messageSend\n                                 JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_817850 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_817850 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_817850 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_817850 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_817850.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_641447 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_641447 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_641447 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_641447 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_641447.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_704078 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_704078 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_704078 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_704078 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_704078.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_487971 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_487971 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_487971 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_487971 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_487971.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_738245\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_738245 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_738245.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_738245 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_738245.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_738245 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_738245 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_738245 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_738245.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_740559\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_740559 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_740559.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_740559 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_740559.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_740559 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_740559 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_740559 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_740559.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_666388\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_666388 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_666388.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_666388 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_666388.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_666388 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_666388 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_666388 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_666388.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_122327\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_122327 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_122327.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_122327 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_122327.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_122327 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_122327 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_122327 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_122327.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_713134\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_713134 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_713134.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_713134 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_713134.next ();\n\n                                             // check object __DEC_message_message_713134 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_713134 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_713134 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_713134.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_713134 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_713134.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_161(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_833636 = null;\n      InteractionOperand __DEC_messageReceive_fragment_284448 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_925681 = null;\n      InteractionOperand __DEC_messageSend_fragment_49277 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_201911 = null;\n      Message __DEC_messageReceive_receiveEvent_201911 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_639536 = null;\n      Message __DEC_messageSend_receiveEvent_639536 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_314644 = null;\n      Message __DEC_messageReceive_sendEvent_314644 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_560007 = null;\n      Message __DEC_messageSend_sendEvent_560007 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_755977 = null;\n      MessageEnd __DEC_message_message_755977 = null;\n      Match match = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // check link covered from operand to sysLine\n         JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n         // iterate to-many link covered from sysLine to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to operand\n               JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // check link covered from combo to sysLine\n               JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n               // iterate to-many link covered from operand to line\n               fujaba__Success = false;\n\n               fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n               while ( fujaba__IterOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_833636 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_833636 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_833636 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_833636 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_833636.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_284448 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_284448 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_284448 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_284448 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_284448.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_925681 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_925681 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_925681 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_925681 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_925681.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_49277 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_49277 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_49277 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_49277 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_49277.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_201911\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_201911 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_201911.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_201911 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_201911.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_201911 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_201911 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_201911 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_201911.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_639536\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_639536 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_639536.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_639536 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_639536.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_639536 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_639536 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_639536 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_639536.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_314644\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_314644 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_314644.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_314644 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_314644.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_314644 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_314644 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_314644 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_314644.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_560007\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_560007 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_560007.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_560007 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_560007.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_560007 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_560007 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_560007 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_560007.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_755977\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_755977 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_755977.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_755977 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_755977.next ();\n\n                                 // check object __DEC_message_message_755977 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_755977 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_755977 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_755977.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_755977 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_755977.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object sysLine is really bound\n                        JavaSDM.ensure ( sysLine != null );\n                        // check isomorphic binding between objects sysLine and line \n                        JavaSDM.ensure ( !sysLine.equals (line) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to sysLine\n                        JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to operand\n                        JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from combo to sysLine\n                        JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                        // check link covered from messageSend to sysLine\n                        JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                        // check link covered from line to operand\n                        JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                        // check link covered from operand to sysLine\n                        JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_162(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_420291 = null;\n      InteractionOperand __DEC_messageReceive_fragment_510383 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_292983 = null;\n      InteractionOperand __DEC_messageSend_fragment_622120 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77738 = null;\n      Message __DEC_messageReceive_receiveEvent_77738 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_635704 = null;\n      Message __DEC_messageSend_receiveEvent_635704 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_812543 = null;\n      Message __DEC_messageReceive_sendEvent_812543 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_779088 = null;\n      Message __DEC_messageSend_sendEvent_779088 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_407640 = null;\n      MessageEnd __DEC_message_message_407640 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link covered from operand to sysLine\n         JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n         // iterate to-many link covered from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // iterate to-many link covered from combo to line\n               fujaba__Success = false;\n\n               fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n               while ( fujaba__IterComboToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link covered from line to operand\n                     JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                     // iterate to-many link covered from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to operand\n                           JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link src from sysLine to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to operand\n                                 JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_420291 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_420291 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_420291 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_420291 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_420291.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_510383 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_510383 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_510383 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_510383 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_510383.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_292983 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_292983 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_292983 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_292983 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_292983.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_622120 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_622120 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_622120 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_622120 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_622120.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_77738\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77738 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77738.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_77738 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77738.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_77738 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_77738 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_77738 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_77738.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_635704\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_635704 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_635704.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_635704 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_635704.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_635704 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_635704 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_635704 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_635704.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_812543\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_812543 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_812543.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_812543 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_812543.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_812543 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_812543 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_812543 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_812543.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_779088\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_779088 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_779088.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_779088 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_779088.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_779088 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_779088 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_779088 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_779088.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_407640\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_407640 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_407640.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_407640 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_407640.next ();\n\n                                             // check object __DEC_message_message_407640 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_407640 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_407640 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_407640.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_407640 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_407640.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to operand\n                                    JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to operand\n                                    JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_163(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_280765 = null;\n      InteractionOperand __DEC_messageReceive_fragment_658978 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_161194 = null;\n      InteractionOperand __DEC_messageSend_fragment_721450 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_107359 = null;\n      Message __DEC_messageReceive_receiveEvent_107359 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_873261 = null;\n      Message __DEC_messageSend_receiveEvent_873261 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_886695 = null;\n      Message __DEC_messageReceive_sendEvent_886695 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_220449 = null;\n      Message __DEC_messageSend_sendEvent_220449 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_499337 = null;\n      MessageEnd __DEC_message_message_499337 = null;\n      Match match = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link covered from combo to sysLine\n         JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n         // iterate to-many link covered from sysLine to operand\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // iterate to-many link covered from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_280765 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_280765 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_280765 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_280765 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_280765.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_658978 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_658978 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_658978 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_658978 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_658978.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_161194 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_161194 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_161194 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_161194 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_161194.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_721450 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_721450 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_721450 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_721450 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_721450.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_107359\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_107359 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_107359.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_107359 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_107359.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_107359 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_107359 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_107359 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_107359.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_873261\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_873261 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_873261.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_873261 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_873261.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_873261 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_873261 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_873261 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_873261.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_886695\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_886695 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_886695.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_886695 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_886695.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_886695 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_886695 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_886695 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_886695.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_220449\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_220449 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_220449.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_220449 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_220449.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_220449 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_220449 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_220449 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_220449.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_499337\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_499337 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_499337.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_499337 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_499337.next ();\n\n                                       // check object __DEC_message_message_499337 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_499337 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_499337 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_499337.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_499337 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_499337.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to sysLine\n                              JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to combo\n                              JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_164(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_879050 = null;\n      InteractionOperand __DEC_messageReceive_fragment_514612 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_866015 = null;\n      InteractionOperand __DEC_messageSend_fragment_956801 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_2092 = null;\n      Message __DEC_messageReceive_receiveEvent_2092 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_958801 = null;\n      Message __DEC_messageSend_receiveEvent_958801 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478435 = null;\n      Message __DEC_messageReceive_sendEvent_478435 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_378417 = null;\n      Message __DEC_messageSend_sendEvent_378417 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_700262 = null;\n      MessageEnd __DEC_message_message_700262 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link covered from combo to sysLine\n         JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n         // iterate to-many link covered from sysLine to operand\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // iterate to-many link covered from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // iterate to-many link src from sysLine to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to combo\n                                 JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_879050 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_879050 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_879050 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_879050 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_879050.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_514612 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_514612 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_514612 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_514612 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_514612.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_866015 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_866015 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_866015 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_866015 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_866015.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_956801 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_956801 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_956801 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_956801 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_956801.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_2092\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_2092 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_2092.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_2092 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_2092.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_2092 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_2092 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_2092 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_2092.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_958801\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_958801 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_958801.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_958801 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_958801.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_958801 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_958801 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_958801 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_958801.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_478435\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478435 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478435.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_478435 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478435.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_478435 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_478435 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_478435 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_478435.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_378417\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_378417 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_378417.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_378417 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_378417.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_378417 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_378417 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_378417 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_378417.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_700262\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_700262 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_700262.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_700262 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_700262.next ();\n\n                                             // check object __DEC_message_message_700262 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_700262 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_700262 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_700262.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_700262 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_700262.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to combo\n                                    JavaSDM.ensure (combo.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to sysLine\n                                    JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to combo\n                                    JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_165(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_947440 = null;\n      InteractionOperand __DEC_messageReceive_fragment_216653 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_677235 = null;\n      InteractionOperand __DEC_messageSend_fragment_719432 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_261199 = null;\n      Message __DEC_messageReceive_receiveEvent_261199 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_593472 = null;\n      Message __DEC_messageSend_receiveEvent_593472 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306510 = null;\n      Message __DEC_messageReceive_sendEvent_306510 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_429838 = null;\n      Message __DEC_messageSend_sendEvent_429838 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_31000 = null;\n      MessageEnd __DEC_message_message_31000 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link covered from operand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n               while ( fujaba__IterOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // check link covered from combo to sysLine\n                     JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                     // iterate to-many link covered from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to operand\n                           JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link trg from _edge_fragment to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_947440 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_947440 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_947440 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_947440 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_947440.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_216653 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_216653 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_216653 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_216653 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_216653.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_677235 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_677235 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_677235 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_677235 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_677235.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_719432 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_719432 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_719432 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_719432 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_719432.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_261199\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_261199 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_261199.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_261199 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_261199.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_261199 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_261199 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_261199 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_261199.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_593472\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_593472 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_593472.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_593472 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_593472.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_593472 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_593472 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_593472 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_593472.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_306510\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306510 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306510.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_306510 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306510.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_306510 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_306510 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_306510 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_306510.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_429838\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_429838 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_429838.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_429838 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_429838.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_429838 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_429838 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_429838 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_429838.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_31000\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_31000 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_31000.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_31000 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_31000.next ();\n\n                                       // check object __DEC_message_message_31000 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_31000 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_31000 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_31000.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_31000 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_31000.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to operand\n                              JavaSDM.ensure (operand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_166(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_505202 = null;\n      InteractionOperand __DEC_messageReceive_fragment_902345 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_139789 = null;\n      InteractionOperand __DEC_messageSend_fragment_868016 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_626576 = null;\n      Message __DEC_messageReceive_receiveEvent_626576 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307483 = null;\n      Message __DEC_messageSend_receiveEvent_307483 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_582624 = null;\n      Message __DEC_messageReceive_sendEvent_582624 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_646480 = null;\n      Message __DEC_messageSend_sendEvent_646480 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_842505 = null;\n      MessageEnd __DEC_message_message_842505 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link src from operand to _edge_fragment\n         fujaba__Success = false;\n\n         fujaba__IterOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,EMoflonEdge.class,\"src\")).iterator ();\n\n         while ( fujaba__IterOperandTo_edge_fragment.hasNext () )\n         {\n            try\n            {\n               _edge_fragment = (EMoflonEdge) fujaba__IterOperandTo_edge_fragment.next ();\n\n               // check object _edge_fragment is really bound\n               JavaSDM.ensure ( _edge_fragment != null );\n               // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n               JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // iterate to-many link covered from operand to line\n               fujaba__Success = false;\n\n               fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n               while ( fujaba__IterOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // iterate to-many link covered from operand to sysLine\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToSysLine.hasNext () )\n                     {\n                        try\n                        {\n                           sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n                           // check object sysLine is really bound\n                           JavaSDM.ensure ( sysLine != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link covered from combo to sysLine\n                           JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                           // iterate to-many link covered from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = message.getReceiveEvent ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link fragment from messageReceive to operand\n                                 JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link src from _edge_enclosingOperand to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                 ));\n\n                                 // check link trg from _edge_fragment to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_505202 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_505202 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_505202 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_505202 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_505202.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_902345 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_902345 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_902345 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_902345 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_902345.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_139789 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_139789 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_139789 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_139789 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_139789.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_868016 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_868016 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_868016 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_868016 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_868016.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_626576\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_626576 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_626576.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_626576 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_626576.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_626576 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_626576 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_626576 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_626576.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_307483\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307483 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307483.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_307483 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307483.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_307483 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_307483 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_307483 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_307483.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_582624\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_582624 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_582624.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_582624 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_582624.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_582624 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_582624 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_582624 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_582624.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_646480\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_646480 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_646480.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_646480 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_646480.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_646480 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_646480 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_646480 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_646480.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_842505\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_842505 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_842505.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_842505 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_842505.next ();\n\n                                             // check object __DEC_message_message_842505 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_842505 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_842505 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_842505.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_842505 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_842505.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to operand\n                                    JavaSDM.ensure (operand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to operand\n                                    JavaSDM.ensure (operand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_167(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_764273 = null;\n      InteractionOperand __DEC_messageReceive_fragment_403106 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_518638 = null;\n      InteractionOperand __DEC_messageSend_fragment_260228 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_102853 = null;\n      Message __DEC_messageReceive_receiveEvent_102853 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_528277 = null;\n      Message __DEC_messageSend_receiveEvent_528277 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_266497 = null;\n      Message __DEC_messageReceive_sendEvent_266497 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_793322 = null;\n      Message __DEC_messageSend_sendEvent_793322 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_306325 = null;\n      MessageEnd __DEC_message_message_306325 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // check link covered from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link covered from operand to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // check link covered from combo to sysLine\n               JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n               // iterate to-many link covered from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_764273 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_764273 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_764273 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_764273 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_764273.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_403106 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_403106 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_403106 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_403106 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_403106.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_518638 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_518638 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_518638 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_518638 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_518638.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_260228 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_260228 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_260228 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_260228 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_260228.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_102853\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_102853 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_102853.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_102853 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_102853.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_102853 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_102853 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_102853 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_102853.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_528277\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_528277 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_528277.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_528277 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_528277.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_528277 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_528277 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_528277 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_528277.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_266497\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_266497 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_266497.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_266497 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_266497.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_266497 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_266497 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_266497 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_266497.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_793322\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_793322 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_793322.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_793322 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_793322.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_793322 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_793322 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_793322 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_793322.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_306325\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_306325 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_306325.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_306325 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_306325.next ();\n\n                                 // check object __DEC_message_message_306325 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_306325 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_306325 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_306325.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_306325 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_306325.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object sysLine is really bound\n                        JavaSDM.ensure ( sysLine != null );\n                        // check isomorphic binding between objects sysLine and line \n                        JavaSDM.ensure ( !sysLine.equals (line) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to operand\n                        JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from combo to sysLine\n                        JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                        // check link covered from messageSend to sysLine\n                        JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                        // check link covered from line to operand\n                        JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                        // check link covered from operand to sysLine\n                        JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_168(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_102529 = null;\n      InteractionOperand __DEC_messageReceive_fragment_335803 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_952828 = null;\n      InteractionOperand __DEC_messageSend_fragment_936804 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_109451 = null;\n      Message __DEC_messageReceive_receiveEvent_109451 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688637 = null;\n      Message __DEC_messageSend_receiveEvent_688637 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_321045 = null;\n      Message __DEC_messageReceive_sendEvent_321045 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_516057 = null;\n      Message __DEC_messageSend_sendEvent_516057 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_360141 = null;\n      MessageEnd __DEC_message_message_360141 = null;\n      Match match = null;\n      Iterator fujaba__IterOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // check link covered from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link covered from operand to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // check link covered from combo to sysLine\n               JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n               // iterate to-many link covered from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link trg from operand to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                     while ( fujaba__IterOperandTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterOperandTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link src from _edge_coveredBy to line\n                           JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_102529 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_102529 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_102529 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_102529 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_102529.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_335803 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_335803 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_335803 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_335803 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_335803.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_952828 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_952828 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_952828 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_952828 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_952828.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_936804 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_936804 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_936804 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_936804 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_936804.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_109451\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_109451 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_109451.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_109451 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_109451.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_109451 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_109451 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_109451 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_109451.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_688637\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688637 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688637.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_688637 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688637.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_688637 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_688637 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_688637 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_688637.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_321045\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_321045 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_321045.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_321045 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_321045.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_321045 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_321045 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_321045 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_321045.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_516057\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_516057 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_516057.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_516057 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_516057.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_516057 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_516057 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_516057 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_516057.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_360141\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_360141 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_360141.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_360141 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_360141.next ();\n\n                                       // check object __DEC_message_message_360141 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_360141 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_360141 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_360141.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_360141 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_360141.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to operand\n                              JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_169(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_245246 = null;\n      InteractionOperand __DEC_messageReceive_fragment_502984 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_450968 = null;\n      InteractionOperand __DEC_messageSend_fragment_824850 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_916490 = null;\n      Message __DEC_messageReceive_receiveEvent_916490 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408534 = null;\n      Message __DEC_messageSend_receiveEvent_408534 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_328132 = null;\n      Message __DEC_messageReceive_sendEvent_328132 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_468057 = null;\n      Message __DEC_messageSend_sendEvent_468057 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_822049 = null;\n      MessageEnd __DEC_message_message_822049 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterComboToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from combo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterComboToSysLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link covered from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check link fragment from messageReceive to operand\n                           JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // check link covered from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_245246 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_245246 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_245246 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_245246 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_245246.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_502984 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_502984 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_502984 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_502984 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_502984.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_450968 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_450968 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_450968 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_450968 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_450968.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_824850 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_824850 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_824850 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_824850 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_824850.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_916490\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_916490 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_916490.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_916490 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_916490.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_916490 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_916490 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_916490 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_916490.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_408534\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408534 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408534.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_408534 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408534.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_408534 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_408534 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_408534 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_408534.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_328132\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_328132 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_328132.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_328132 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_328132.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_328132 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_328132 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_328132 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_328132.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_468057\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_468057 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_468057.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_468057 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_468057.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_468057 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_468057 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_468057 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_468057.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_822049\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_822049 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_822049.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_822049 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_822049.next ();\n\n                                       // check object __DEC_message_message_822049 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_822049 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_822049 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_822049.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_822049 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_822049.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to combo\n                              JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_170(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_708122 = null;\n      InteractionOperand __DEC_messageReceive_fragment_441060 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_372477 = null;\n      InteractionOperand __DEC_messageSend_fragment_130358 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_879356 = null;\n      Message __DEC_messageReceive_receiveEvent_879356 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_291841 = null;\n      Message __DEC_messageSend_receiveEvent_291841 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_552716 = null;\n      Message __DEC_messageReceive_sendEvent_552716 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_534136 = null;\n      Message __DEC_messageSend_sendEvent_534136 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_620332 = null;\n      MessageEnd __DEC_message_message_620332 = null;\n      Match match = null;\n      Iterator fujaba__IterComboTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterComboToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from combo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterComboToSysLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // check link covered from line to operand\n                     JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                     // iterate to-many link covered from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to operand\n                           JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link trg from combo to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterComboTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(combo,EMoflonEdge.class,\"trg\")).iterator ();\n\n                           while ( fujaba__IterComboTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterComboTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link src from _edge_coveredBy to line\n                                 JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_708122 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_708122 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_708122 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_708122 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_708122.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_441060 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_441060 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_441060 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_441060 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_441060.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_372477 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_372477 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_372477 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_372477 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_372477.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_130358 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_130358 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_130358 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_130358 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_130358.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_879356\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_879356 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_879356.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_879356 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_879356.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_879356 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_879356 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_879356 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_879356.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_291841\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_291841 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_291841.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_291841 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_291841.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_291841 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_291841 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_291841 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_291841.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_552716\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_552716 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_552716.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_552716 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_552716.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_552716 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_552716 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_552716 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_552716.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_534136\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_534136 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_534136.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_534136 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_534136.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_534136 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_534136 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_534136 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_534136.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_620332\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_620332 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_620332.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_620332 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_620332.next ();\n\n                                             // check object __DEC_message_message_620332 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_620332 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_620332 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_620332.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_620332 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_620332.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to combo\n                                    JavaSDM.ensure (combo.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to combo\n                                    JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_171(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Flow __DEC_step_steps_564542 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link useCases from packageDeclaration to useCase\n               fujaba__Success = false;\n\n               fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n               while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n               {\n                  try\n                  {\n                     useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n                     // check link flows from flow to useCase\n                     JavaSDM.ensure (useCase.equals (flow.eContainer()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_step_steps_564542 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                           // check object __DEC_step_steps_564542 is really bound\n                           JavaSDM.ensure ( __DEC_step_steps_564542 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_step_steps_564542.getSteps().contains(step));\n\n                           // check isomorphic binding between objects __DEC_step_steps_564542 and flow \n                           JavaSDM.ensure ( !__DEC_step_steps_564542.equals (flow) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_steps is really bound\n                        JavaSDM.ensure ( _edge_steps != null );\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object sysActor is really bound\n                        JavaSDM.ensure ( sysActor != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check isomorphic binding between objects sysActor and actor \n                        JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link actors from actor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                        ));\n\n                        // check link actors from sysActor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link src from _edge_steps to flow\n                        JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link trg from _edge_steps to step\n                        JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                        ));\n\n                        // check link useCases from useCase to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                        ));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,sysActor,actor,flow,useCase,step);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_FWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_37(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Flow __DEC_step_steps_265988 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         _TmpObject = _edge_actor.getTrg ();\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n\n         // check link actor from step to actor\n         JavaSDM.ensure (actor.equals (step.getActor ()\n         ));\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link useCases from packageDeclaration to useCase\n               fujaba__Success = false;\n\n               fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n               while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n               {\n                  try\n                  {\n                     useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n                     // check link flows from flow to useCase\n                     JavaSDM.ensure (useCase.equals (flow.eContainer()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_step_steps_265988 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                           // check object __DEC_step_steps_265988 is really bound\n                           JavaSDM.ensure ( __DEC_step_steps_265988 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_step_steps_265988.getSteps().contains(step));\n\n                           // check isomorphic binding between objects __DEC_step_steps_265988 and flow \n                           JavaSDM.ensure ( !__DEC_step_steps_265988.equals (flow) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_actor is really bound\n                        JavaSDM.ensure ( _edge_actor != null );\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object sysActor is really bound\n                        JavaSDM.ensure ( sysActor != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check isomorphic binding between objects sysActor and actor \n                        JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link actors from actor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                        ));\n\n                        // check link actors from sysActor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link src from _edge_actor to step\n                        JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link trg from _edge_actor to actor\n                        JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                        ));\n\n                        // check link useCases from useCase to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                        ));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,sysActor,actor,flow,useCase,step);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_FWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_38(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_509700 = null;\n      InteractionOperand __DEC_messageReceive_fragment_915877 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_22895 = null;\n      InteractionOperand __DEC_messageSend_fragment_416617 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_575481 = null;\n      Message __DEC_messageReceive_receiveEvent_575481 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_649871 = null;\n      Message __DEC_messageSend_receiveEvent_649871 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_422385 = null;\n      Message __DEC_messageReceive_sendEvent_422385 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_375440 = null;\n      Message __DEC_messageSend_sendEvent_375440 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_84225 = null;\n      MessageEnd __DEC_message_message_84225 = null;\n      Match match = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // iterate to-many link covered from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link covered from combo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                           while ( fujaba__IterComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // bind object\n                                 interaction = line.getInteraction ();\n\n                                 // check object interaction is really bound\n                                 JavaSDM.ensure ( interaction != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_509700 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_509700 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_509700 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_509700 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_509700.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_915877 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_915877 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_915877 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_915877 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_915877.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_22895 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_22895 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_22895 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_22895 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_22895.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_416617 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_416617 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_416617 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_416617 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_416617.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_575481\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_575481 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_575481.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_575481 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_575481.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_575481 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_575481 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_575481 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_575481.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_649871\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_649871 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_649871.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_649871 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_649871.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_649871 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_649871 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_649871 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_649871.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_422385\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_422385 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_422385.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_422385 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_422385.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_422385 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_422385 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_422385 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_422385.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_375440\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_375440 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_375440.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_375440 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_375440.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_375440 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_375440 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_375440 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_375440.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_84225\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_84225 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_84225.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_84225 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_84225.next ();\n\n                                             // check object __DEC_message_message_84225 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_84225 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_84225 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_84225.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_84225 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_84225.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_sendEvent is really bound\n                                    JavaSDM.ensure ( _edge_sendEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_sendEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sendEvent to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_172(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_139096 = null;\n      InteractionOperand __DEC_messageReceive_fragment_270710 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_980517 = null;\n      InteractionOperand __DEC_messageSend_fragment_792287 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_168437 = null;\n      Message __DEC_messageReceive_receiveEvent_168437 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_163133 = null;\n      Message __DEC_messageSend_receiveEvent_163133 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607587 = null;\n      Message __DEC_messageReceive_sendEvent_607587 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_83096 = null;\n      Message __DEC_messageSend_sendEvent_83096 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_690041 = null;\n      MessageEnd __DEC_message_message_690041 = null;\n      Match match = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_receiveEvent to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // iterate to-many link covered from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link covered from combo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                           while ( fujaba__IterComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_139096 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_139096 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_139096 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_139096 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_139096.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_270710 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_270710 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_270710 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_270710 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_270710.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_980517 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_980517 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_980517 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_980517 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_980517.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_792287 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_792287 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_792287 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_792287 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_792287.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_168437\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_168437 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_168437.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_168437 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_168437.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_168437 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_168437 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_168437 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_168437.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_163133\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_163133 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_163133.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_163133 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_163133.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_163133 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_163133 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_163133 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_163133.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_607587\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607587 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607587.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_607587 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607587.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_607587 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_607587 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_607587 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_607587.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_83096\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_83096 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_83096.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_83096 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_83096.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_83096 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_83096 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_83096 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_83096.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_690041\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_690041 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_690041.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_690041 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_690041.next ();\n\n                                             // check object __DEC_message_message_690041 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_690041 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_690041 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_690041.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_690041 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_690041.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_receiveEvent is really bound\n                                    JavaSDM.ensure ( _edge_receiveEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_receiveEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_receiveEvent to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_173(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_424516 = null;\n      InteractionOperand __DEC_messageReceive_fragment_856648 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_386903 = null;\n      InteractionOperand __DEC_messageSend_fragment_919473 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_532907 = null;\n      Message __DEC_messageReceive_receiveEvent_532907 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_61212 = null;\n      Message __DEC_messageSend_receiveEvent_61212 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_113192 = null;\n      Message __DEC_messageReceive_sendEvent_113192 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_923540 = null;\n      Message __DEC_messageSend_sendEvent_923540 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_152114 = null;\n      MessageEnd __DEC_message_message_152114 = null;\n      Match match = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_interaction to interaction\n         JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check link covered from combo to sysLine\n                     JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                     // iterate to-many link covered from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_424516 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_424516 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_424516 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_424516 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_424516.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_856648 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_856648 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_856648 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_856648 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_856648.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_386903 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_386903 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_386903 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_386903 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_386903.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_919473 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_919473 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_919473 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_919473 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_919473.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_532907\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_532907 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_532907.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_532907 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_532907.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_532907 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_532907 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_532907 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_532907.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_61212\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_61212 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_61212.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_61212 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_61212.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_61212 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_61212 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_61212 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_61212.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_113192\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_113192 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_113192.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_113192 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_113192.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_113192 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_113192 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_113192 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_113192.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_923540\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_923540 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_923540.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_923540 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_923540.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_923540 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_923540 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_923540 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_923540.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_152114\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_152114 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_152114.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_152114 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_152114.next ();\n\n                                       // check object __DEC_message_message_152114 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_152114 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_152114 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_152114.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_152114 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_152114.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_interaction is really bound\n                              JavaSDM.ensure ( _edge_interaction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object sysLine is really bound\n                              JavaSDM.ensure ( sysLine != null );\n                              // check isomorphic binding between objects sysLine and line \n                              JavaSDM.ensure ( !sysLine.equals (line) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link src from _edge_interaction to message\n                              JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_interaction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from combo to sysLine\n                              JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                              // check link covered from messageSend to sysLine\n                              JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // check link covered from operand to sysLine\n                              JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_174(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_703980 = null;\n      InteractionOperand __DEC_messageReceive_fragment_924578 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_230893 = null;\n      InteractionOperand __DEC_messageSend_fragment_33166 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_731898 = null;\n      Message __DEC_messageReceive_receiveEvent_731898 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_246690 = null;\n      Message __DEC_messageSend_receiveEvent_246690 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_358361 = null;\n      Message __DEC_messageReceive_sendEvent_358361 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_802721 = null;\n      Message __DEC_messageSend_sendEvent_802721 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_670266 = null;\n      MessageEnd __DEC_message_message_670266 = null;\n      Match match = null;\n      Iterator fujaba__IterMessageTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link src from _edge_message to interaction\n         JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from combo to line\n                     fujaba__Success = false;\n\n                     fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                     while ( fujaba__IterComboToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link covered from sysLine to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check link fragment from messageReceive to operand\n                                 JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // iterate to-many link src from message to _edge_interaction\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterMessageTo_edge_interaction.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_interaction = (EMoflonEdge) fujaba__IterMessageTo_edge_interaction.next ();\n\n                                       // check object _edge_interaction is really bound\n                                       JavaSDM.ensure ( _edge_interaction != null );\n                                       // check isomorphic binding between objects _edge_message and _edge_interaction \n                                       JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                       // check link trg from _edge_interaction to interaction\n                                       JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_703980 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_703980 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_703980 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_703980 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_703980.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_924578 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_924578 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_924578 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_924578 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_924578.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_230893 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_230893 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_230893 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_230893 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_230893.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_33166 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_33166 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_33166 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_33166 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_33166.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_731898\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_731898 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_731898.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_731898 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_731898.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_731898 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_731898 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_731898 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_731898.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_246690\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_246690 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_246690.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_246690 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_246690.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_246690 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_246690 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_246690 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_246690.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_358361\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_358361 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_358361.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_358361 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_358361.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_358361 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_358361 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_358361 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_358361.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_802721\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_802721 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_802721.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_802721 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_802721.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_802721 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_802721 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_802721 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_802721.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_670266\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_670266 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_670266.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_670266 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_670266.next ();\n\n                                                   // check object __DEC_message_message_670266 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_670266 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_670266 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_670266.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_670266 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_670266.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_interaction is really bound\n                                          JavaSDM.ensure ( _edge_interaction != null );\n                                          // check object _edge_message is really bound\n                                          JavaSDM.ensure ( _edge_message != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects _edge_message and _edge_interaction \n                                          JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link src from _edge_interaction to message\n                                          JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_message to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_interaction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_message to message\n                                          JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                          ));\n\n                                          // check link covered from line to combo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                          // check link covered from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link covered from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link covered from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link covered from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_175(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_684409 = null;\n      InteractionOperand __DEC_messageReceive_fragment_276512 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_654583 = null;\n      InteractionOperand __DEC_messageSend_fragment_309718 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_713097 = null;\n      Message __DEC_messageReceive_receiveEvent_713097 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_493734 = null;\n      Message __DEC_messageSend_receiveEvent_493734 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_326666 = null;\n      Message __DEC_messageReceive_sendEvent_326666 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_744837 = null;\n      Message __DEC_messageSend_sendEvent_744837 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_156429 = null;\n      MessageEnd __DEC_message_message_156429 = null;\n      Match match = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // iterate to-many link covered from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link covered from combo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                           while ( fujaba__IterComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // bind object\n                                 interaction = line.getInteraction ();\n\n                                 // check object interaction is really bound\n                                 JavaSDM.ensure ( interaction != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_684409 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_684409 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_684409 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_684409 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_684409.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_276512 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_276512 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_276512 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_276512 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_276512.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_654583 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_654583 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_654583 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_654583 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_654583.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_309718 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_309718 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_309718 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_309718 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_309718.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_713097\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_713097 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_713097.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_713097 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_713097.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_713097 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_713097 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_713097 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_713097.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_493734\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_493734 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_493734.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_493734 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_493734.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_493734 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_493734 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_493734 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_493734.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_326666\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_326666 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_326666.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_326666 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_326666.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_326666 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_326666 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_326666 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_326666.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_744837\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_744837 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_744837.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_744837 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_744837.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_744837 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_744837 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_744837 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_744837.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_156429\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_156429 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_156429.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_156429 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_156429.next ();\n\n                                             // check object __DEC_message_message_156429 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_156429 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_156429 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_156429.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_156429 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_156429.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_176(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_51122 = null;\n      InteractionOperand __DEC_messageReceive_fragment_142861 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_906348 = null;\n      InteractionOperand __DEC_messageSend_fragment_494352 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_740113 = null;\n      Message __DEC_messageReceive_receiveEvent_740113 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_975457 = null;\n      Message __DEC_messageSend_receiveEvent_975457 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_246636 = null;\n      Message __DEC_messageReceive_sendEvent_246636 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_617694 = null;\n      Message __DEC_messageSend_sendEvent_617694 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_531576 = null;\n      MessageEnd __DEC_message_message_531576 = null;\n      Match match = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterMessageSendToSysLine = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link src from _edge_message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToSysLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterMessageSendToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link covered from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check link fragment from messageReceive to operand\n                     JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // iterate to-many link covered from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link covered from combo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n                           while ( fujaba__IterComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_51122 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_51122 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_51122 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_51122 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_51122.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_142861 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_142861 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_142861 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_142861 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_142861.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_906348 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_906348 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_906348 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_906348 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_906348.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_494352 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_494352 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_494352 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_494352 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_494352.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_740113\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_740113 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_740113.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_740113 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_740113.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_740113 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_740113 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_740113 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_740113.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_975457\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_975457 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_975457.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_975457 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_975457.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_975457 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_975457 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_975457 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_975457.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_246636\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_246636 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_246636.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_246636 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_246636.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_246636 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_246636 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_246636 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_246636.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_617694\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_617694 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_617694.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_617694 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_617694.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_617694 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_617694 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_617694 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_617694.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_531576\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_531576 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_531576.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_531576 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_531576.next ();\n\n                                             // check object __DEC_message_message_531576 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_531576 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_531576 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_531576.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_531576 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_531576.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (operand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link covered from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link covered from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,operand,combo,messageReceive,line,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_177(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // UserStepNfToMessageRule
