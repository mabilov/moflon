/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Step To Combined Fragment Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getStepToCombinedFragmentRule()
 * @model
 * @generated
 */
public interface StepToCombinedFragmentRule extends AbstractRule,
		NormalStepToMessageRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __useCase_flows_flow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,step,alt,altFlow,useCase,flow,actor));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,step,alt,altFlow,useCase,flow,actor);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Flow flow, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      Flow flow = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      CSP csp = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"StepToCombinedFragmentRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from useCase to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n               while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     interaction = useCaseToInteraction.getTarget ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object actorToLine is really bound\n                        JavaSDM.ensure ( actorToLine != null );\n                        // check object alt is really bound\n                        JavaSDM.ensure ( alt != null );\n                        // check object altFlow is really bound\n                        JavaSDM.ensure ( altFlow != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects flow and altFlow \n                        JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link ref from alt to altFlow\n                        JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link source from actorToLine to actor\n                        JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link stepAlternative from alt to step\n                        JavaSDM.ensure (step.equals (alt.eContainer()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link target from actorToLine to line\n                        JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // create object isApplicableMatch\n                        isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                        // create object __step_stepAlternative_alt\n                        __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __flow_steps_step\n                        __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __step_actor_actor\n                        __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __alt_ref_altFlow\n                        __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __interaction_lifeline_line\n                        __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_interaction_interaction\n                        __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __actorToLine_target_line\n                        __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCaseToInteraction_source_useCase\n                        __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCase_flows_flow\n                        __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCaseToInteraction_target_interaction\n                        __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __actorToLine_source_actor\n                        __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // assign attribute __step_stepAlternative_alt\n                        __step_stepAlternative_alt.setName (\"stepAlternative\");\n                        // assign attribute __alt_ref_altFlow\n                        __alt_ref_altFlow.setName (\"ref\");\n                        // assign attribute __useCase_flows_flow\n                        __useCase_flows_flow.setName (\"flows\");\n                        // assign attribute __useCaseToInteraction_source_useCase\n                        __useCaseToInteraction_source_useCase.setName (\"source\");\n                        // assign attribute __useCaseToInteraction_target_interaction\n                        __useCaseToInteraction_target_interaction.setName (\"target\");\n                        // assign attribute __flow_steps_step\n                        __flow_steps_step.setName (\"steps\");\n                        // assign attribute __step_actor_actor\n                        __step_actor_actor.setName (\"actor\");\n                        // assign attribute __line_interaction_interaction\n                        __line_interaction_interaction.setName (\"interaction\");\n                        // assign attribute __interaction_lifeline_line\n                        __interaction_lifeline_line.setName (\"lifeline\");\n                        // assign attribute __actorToLine_source_actor\n                        __actorToLine_source_actor.setName (\"source\");\n                        // assign attribute __actorToLine_target_line\n                        __actorToLine_target_line.setName (\"target\");\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(step);\n\n\n                        // create link\n                        __step_stepAlternative_alt.setSrc( step);\n\n\n                        // create link\n                        __flow_steps_step.setTrg( step);\n\n\n                        // create link\n                        __step_actor_actor.setSrc( step);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(alt);\n\n\n                        // create link\n                        __alt_ref_altFlow.setSrc( alt);\n\n\n                        // create link\n                        __step_stepAlternative_alt.setTrg( alt);\n\n\n                        // create link\n                        __alt_ref_altFlow.setTrg( altFlow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                        // create link\n                        __interaction_lifeline_line.setTrg( line);\n\n\n                        // create link\n                        __line_interaction_interaction.setSrc( line);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(line);\n\n\n                        // create link\n                        __actorToLine_target_line.setTrg( line);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                        // create link\n                        __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                        // create link\n                        __useCase_flows_flow.setSrc( useCase);\n\n\n                        // create link\n                        __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                        // create link\n                        __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(flow);\n\n\n                        // create link\n                        __useCase_flows_flow.setTrg( flow);\n\n\n                        // create link\n                        __flow_steps_step.setSrc( flow);\n\n\n                        // create link\n                        __interaction_lifeline_line.setSrc( interaction);\n\n\n                        // create link\n                        __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                        // create link\n                        __line_interaction_interaction.setTrg( interaction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(actor);\n\n\n                        // create link\n                        __actorToLine_source_actor.setTrg( actor);\n\n\n                        // create link\n                        __step_actor_actor.setTrg( actor);\n\n\n                        // create link\n                        __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                        // create link\n                        __actorToLine_target_line.setSrc( actorToLine);\n\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n                        // story node \'solve CSP\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,step,alt,altFlow,line,useCase,useCaseToInteraction,flow,interaction,actor,actorToLine));\n\n                           // ensure correct type and really bound of object csp\n                           JavaSDM.ensure ( _TmpObject instanceof CSP );\n                           csp = (CSP) _TmpObject;\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        // statement node \'check CSP\'\n                        fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                        if (fujaba__Success)\n                        {\n                           // story node \'add match to rule result\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object isApplicableMatch is really bound\n                              JavaSDM.ensure ( isApplicableMatch != null );\n                              // check object ruleresult is really bound\n                              JavaSDM.ensure ( ruleresult != null );\n                              // assign attribute ruleresult\n                              ruleresult.setSuccess (true);\n                              // assign attribute isApplicableMatch\n                              isApplicableMatch.setRuleName (\"StepToCombinedFragmentRule\");\n\n                              // create link\n                              isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      Flow flow = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n      LiteralString spec = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge line__coveredBy__messageSend = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge line__coveredBy__combo = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge line__coveredBy__messageReceive = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge messageReceive__covered__line = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge combo__covered__line = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge messageSend__covered__line = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge stepToMessage__target__message = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getAttributeVariable(\"combo\",\"interactionOperator\").getValue());\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getAttributeVariable(\"guard\",\"name\").getValue());\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getAttributeVariable(\"spec\",\"value\").getValue());\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getAttributeVariable(\"message\",\"name\").getValue());\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         line.getCoveredBy().add(combo);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         line.getCoveredBy().add(operand);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         messageSend.getCovered().add(line);\n\n\n         // create link\n         messageReceive.getCovered().add(line);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(message,messageReceive,\"receiveEvent\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(message,messageSend,\"sendEvent\");\n\n         // create link\n         messageReceive.setMessage( message);\n\n\n         // create link\n         messageSend.setMessage( message);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__messageSend\n         line__coveredBy__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__combo\n         line__coveredBy__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__messageReceive\n         line__coveredBy__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__covered__line\n         messageReceive__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__covered__line\n         combo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__covered__line\n         messageSend__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"StepToCombinedFragmentRule\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__combo\n         line__coveredBy__combo.setName (\"coveredBy\");\n         // assign attribute combo__covered__line\n         combo__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute line__coveredBy__messageSend\n         line__coveredBy__messageSend.setName (\"coveredBy\");\n         // assign attribute messageSend__covered__line\n         messageSend__covered__line.setName (\"covered\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n         // assign attribute line__coveredBy__messageReceive\n         line__coveredBy__messageReceive.setName (\"coveredBy\");\n         // assign attribute messageReceive__covered__line\n         messageReceive__covered__line.setName (\"covered\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         combo__covered__line.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         line__coveredBy__combo.setTrg( combo);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         messageSend__covered__line.setTrg( line);\n\n\n         // create link\n         combo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__combo.setSrc( line);\n\n\n         // create link\n         messageReceive__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         line__coveredBy__messageReceive.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__messageSend.setSrc( line);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         line__coveredBy__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__covered__line.setSrc( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         line__coveredBy__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__covered__line.setSrc( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,step,alt,combo,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,line,useCase,useCaseToInteraction,flow,message,interaction,stepToMessage,messageSend,messageReceive,actor,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"flow\", flow);\nmatch.registerObject(\"actor\", actor);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Flow flow, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Flow flow, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, Lifeline line, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Flow flow,
			Interaction interaction, Actor actor, ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject step,
			EObject alt, EObject combo, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject line, EObject useCase,
			EObject useCaseToInteraction, EObject flow, EObject message,
			EObject interaction, EObject stepToMessage, EObject messageSend,
			EObject messageReceive, EObject actor, EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __line_coveredBy_messageSend\n            __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_covered_line\n            __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_messageReceive\n            __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_covered_line\n            __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_covered_line\n            __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_combo\n            __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_combo\n            __line_coveredBy_combo.setName (\"coveredBy\");\n            // assign attribute __combo_covered_line\n            __combo_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __line_coveredBy_messageSend\n            __line_coveredBy_messageSend.setName (\"coveredBy\");\n            // assign attribute __messageSend_covered_line\n            __messageSend_covered_line.setName (\"covered\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n            // assign attribute __line_coveredBy_messageReceive\n            __line_coveredBy_messageReceive.setName (\"coveredBy\");\n            // assign attribute __messageReceive_covered_line\n            __messageReceive_covered_line.setName (\"covered\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            __combo_covered_line.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __line_coveredBy_combo.setTrg( combo);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __line_coveredBy_messageReceive.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_messageSend.setSrc( line);\n\n\n            // create link\n            __combo_covered_line.setTrg( line);\n\n\n            // create link\n            __messageReceive_covered_line.setTrg( line);\n\n\n            // create link\n            __messageSend_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_combo.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_covered_line.setSrc( messageSend);\n\n\n            // create link\n            __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_covered_line.setSrc( messageReceive);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, CombinedFragment combo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Lifeline line, Message message,
			Interaction interaction,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      LiteralString spec = null;\n      EMoflonEdge __combo_covered_line = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      CSP csp = null;\n      Iterator fujaba__IterUseCaseToFlow = null;\n      Flow flow = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"StepToCombinedFragmentRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link target from line to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n         while ( fujaba__IterLineToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               actor = actorToLine.getSource ();\n\n               // check object actor is really bound\n               JavaSDM.ensure ( actor != null );\n\n               // iterate to-many link target from interaction to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n               while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     useCase = useCaseToInteraction.getSource ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object actorToLine is really bound\n                        JavaSDM.ensure ( actorToLine != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link source from actorToLine to actor\n                        JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link target from actorToLine to line\n                        JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from messageReceive to line\n                        JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from line to operand\n                        JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                        // iterate to-many link flows from useCase to flow\n                        fujaba__Success = false;\n\n                        fujaba__IterUseCaseToFlow = new ArrayList(useCase.getFlows()).iterator ();\n\n                        while ( fujaba__IterUseCaseToFlow.hasNext () )\n                        {\n                           try\n                           {\n                              flow = (Flow) fujaba__IterUseCaseToFlow.next ();\n\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // create object __combo_covered_line\n                              __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __combo_operand_operand\n                              __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_combo\n                              __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_guard_guard\n                              __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_covered_line\n                              __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_operand\n                              __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __guard_specification_spec\n                              __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_messageSend\n                              __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_covered_line\n                              __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_messageReceive\n                              __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_covered_line\n                              __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_interaction_interaction\n                              __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_message_message\n                              __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_message_message\n                              __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_message_message\n                              __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __combo_operand_operand\n                              __combo_operand_operand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_combo\n                              __line_coveredBy_combo.setName (\"coveredBy\");\n                              // assign attribute __combo_covered_line\n                              __combo_covered_line.setName (\"covered\");\n                              // assign attribute __operand_guard_guard\n                              __operand_guard_guard.setName (\"guard\");\n                              // assign attribute __line_coveredBy_operand\n                              __line_coveredBy_operand.setName (\"coveredBy\");\n                              // assign attribute __operand_covered_line\n                              __operand_covered_line.setName (\"covered\");\n                              // assign attribute __guard_specification_spec\n                              __guard_specification_spec.setName (\"specification\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend.setName (\"sendEvent\");\n                              // assign attribute __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                              // assign attribute __message_interaction_interaction\n                              __message_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_message_message\n                              __interaction_message_message.setName (\"message\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __messageSend_message_message\n                              __messageSend_message_message.setName (\"message\");\n                              // assign attribute __line_coveredBy_messageSend\n                              __line_coveredBy_messageSend.setName (\"coveredBy\");\n                              // assign attribute __messageSend_covered_line\n                              __messageSend_covered_line.setName (\"covered\");\n                              // assign attribute __messageReceive_message_message\n                              __messageReceive_message_message.setName (\"message\");\n                              // assign attribute __line_coveredBy_messageReceive\n                              __line_coveredBy_messageReceive.setName (\"coveredBy\");\n                              // assign attribute __messageReceive_covered_line\n                              __messageReceive_covered_line.setName (\"covered\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n\n                              // create link\n                              __combo_covered_line.setSrc( combo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(combo);\n\n\n                              // create link\n                              __combo_operand_operand.setSrc( combo);\n\n\n                              // create link\n                              __line_coveredBy_combo.setTrg( combo);\n\n\n                              // create link\n                              __operand_guard_guard.setSrc( operand);\n\n\n                              // create link\n                              __operand_covered_line.setSrc( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(operand);\n\n\n                              // create link\n                              __combo_operand_operand.setTrg( operand);\n\n\n                              // create link\n                              __line_coveredBy_operand.setTrg( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(guard);\n\n\n                              // create link\n                              __guard_specification_spec.setSrc( guard);\n\n\n                              // create link\n                              __operand_guard_guard.setTrg( guard);\n\n\n                              // create link\n                              __guard_specification_spec.setTrg( spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(spec);\n\n\n                              // create link\n                              __operand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_messageSend.setSrc( line);\n\n\n                              // create link\n                              __messageReceive_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_operand.setSrc( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __combo_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_combo.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_messageReceive.setSrc( line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              __messageSend_covered_line.setTrg( line);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __message_interaction_interaction.setSrc( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(message);\n\n\n                              // create link\n                              __messageReceive_message_message.setTrg( message);\n\n\n                              // create link\n                              __messageSend_message_message.setTrg( message);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setSrc( message);\n\n\n                              // create link\n                              __interaction_message_message.setTrg( message);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                              // create link\n                              __message_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_message_message.setSrc( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __messageSend_message_message.setSrc( messageSend);\n\n\n                              // create link\n                              __messageSend_covered_line.setSrc( messageSend);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __messageReceive_covered_line.setSrc( messageReceive);\n\n\n                              // create link\n                              __messageReceive_message_message.setSrc( messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,combo,operand,guard,spec,line,useCase,useCaseToInteraction,flow,message,interaction,messageSend,messageReceive,actor,actorToLine));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"StepToCombinedFragmentRule\");\n\n                                    // create link\n                                    isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n                        }\n                        JavaSDM.ensure (fujaba__Success);\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      Flow flow = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getAttributeVariable(\"step\",\"name\").getValue());\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getAttributeVariable(\"alt\",\"condition\").getValue());\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getAttributeVariable(\"altFlow\",\"name\").getValue());\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(step,actor,\"actor\");\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         flow.getSteps().add(step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_covered_line\n         __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_combo\n         __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_covered_line\n         __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_messageSend\n         __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_messageReceive\n         __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_covered_line\n         __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"StepToCombinedFragmentRule\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_combo\n         __line_coveredBy_combo.setName (\"coveredBy\");\n         // assign attribute __combo_covered_line\n         __combo_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __line_coveredBy_messageSend\n         __line_coveredBy_messageSend.setName (\"coveredBy\");\n         // assign attribute __messageSend_covered_line\n         __messageSend_covered_line.setName (\"covered\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n         // assign attribute __line_coveredBy_messageReceive\n         __line_coveredBy_messageReceive.setName (\"coveredBy\");\n         // assign attribute __messageReceive_covered_line\n         __messageReceive_covered_line.setName (\"covered\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __combo_covered_line.setSrc( combo);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         __line_coveredBy_combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         __messageSend_covered_line.setTrg( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_messageSend.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_messageReceive.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_combo.setSrc( line);\n\n\n         // create link\n         __messageReceive_covered_line.setTrg( line);\n\n\n         // create link\n         __combo_covered_line.setTrg( line);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         __messageSend_covered_line.setSrc( messageSend);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_covered_line.setSrc( messageReceive);\n\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,step,alt,combo,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,line,useCase,useCaseToInteraction,flow,message,interaction,stepToMessage,messageSend,messageReceive,actor,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"combo\", combo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"messageReceive\", messageReceive);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, CombinedFragment combo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Lifeline line, Message message,
			Interaction interaction,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, CombinedFragment combo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Lifeline line, Message message,
			Interaction interaction,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			CombinedFragment combo, InteractionOperand operand,
			InteractionConstraint guard, LiteralString spec, Lifeline line,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Flow flow, Message message, Interaction interaction,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Actor actor,
			ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject step,
			EObject alt, EObject combo, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject line, EObject useCase,
			EObject useCaseToInteraction, EObject flow, EObject message,
			EObject interaction, EObject stepToMessage, EObject messageSend,
			EObject messageReceive, EObject actor, EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage()) && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_303996 = null;\n      NormalStep __DEC_alt_stepAlternative_363159 = null;\n      Flow __DEC_step_steps_210968 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_310165 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_310165 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      Flow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         flow = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_303996 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_303996 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_303996 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_303996.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_303996 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_303996.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_363159 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_363159 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_363159 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_363159.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_363159 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_363159.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_210968 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_210968 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_210968 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_210968.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_210968 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_210968.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_210968 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_210968.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_310165\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_310165 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_310165.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_310165 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_310165.next ();\n\n                     // check object __DEC_altFlow_ref_310165 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_310165 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_310165 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_310165.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,step,alt,altFlow,useCase,flow,actor);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_10(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_226224 = null;\n      NormalStep __DEC_alt_stepAlternative_528005 = null;\n      Flow __DEC_step_steps_984445 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_387215 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_387215 = null;\n      Match match = null;\n      UseCase useCase = null;\n      Flow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         flow = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_ref to altFlow\n         JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_226224 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_226224 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_226224 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_226224.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_226224 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_226224.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_528005 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_528005 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_528005 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_528005.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_528005 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_528005.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_984445 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_984445 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_984445 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_984445.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_984445 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_984445.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_984445 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_984445.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_387215\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_387215 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_387215.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_387215 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_387215.next ();\n\n                     // check object __DEC_altFlow_ref_387215 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_387215 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_387215 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_387215.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,step,alt,altFlow,useCase,flow,actor);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_11(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_676942 = null;\n      InteractionOperand __DEC_combo_fragment_961194 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_91065 = null;\n      InteractionOperand __DEC_messageReceive_fragment_131336 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_187226 = null;\n      InteractionOperand __DEC_messageSend_fragment_300839 = null;\n      Interaction __DEC_operand_enclosingInteraction_244356 = null;\n      InteractionOperand __DEC_operand_fragment_630114 = null;\n      InteractionOperand __DEC_guard_guard_336881 = null;\n      CombinedFragment __DEC_operand_operand_732815 = null;\n      Constraint __DEC_spec_specification_621327 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_329917 = null;\n      Lifeline __DEC_combo_coveredBy_329917 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_209667 = null;\n      Lifeline __DEC_messageReceive_coveredBy_209667 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_467706 = null;\n      Lifeline __DEC_messageSend_coveredBy_467706 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_327492 = null;\n      Lifeline __DEC_operand_coveredBy_327492 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_550779 = null;\n      Message __DEC_messageReceive_receiveEvent_550779 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_692897 = null;\n      Message __DEC_messageSend_receiveEvent_692897 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_989838 = null;\n      Message __DEC_messageReceive_sendEvent_989838 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_94491 = null;\n      Message __DEC_messageSend_sendEvent_94491 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_788659 = null;\n      MessageEnd __DEC_message_message_788659 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // iterate to-many link covered from combo to line\n         fujaba__Success = false;\n\n         fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterComboToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from line to operand\n               JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_676942 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_676942 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_676942 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_676942 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_676942.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_961194 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_961194 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_961194 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_961194 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_961194.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_91065 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_91065 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_91065 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_91065 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_91065.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_131336 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_131336 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_131336 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_131336 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_131336.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_187226 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_187226 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_187226 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_187226 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_187226.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_300839 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_300839 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_300839 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_300839 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_300839.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_244356 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_244356 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_244356 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_244356 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_244356.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_630114 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_630114 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_630114 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_630114 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_630114.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_336881 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_336881 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_336881 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_336881.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_336881 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_336881.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_732815 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_732815 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_732815 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_732815.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_732815 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_732815.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_621327 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_621327 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_621327 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_621327.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_621327 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_621327.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_329917\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_329917 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_329917.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_329917 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_329917.next ();\n\n                                       // check object __DEC_combo_coveredBy_329917 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_329917 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_329917 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_329917.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_209667\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_209667 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_209667.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_209667 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_209667.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_209667 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_209667 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_209667 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_209667.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_467706\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_467706 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_467706.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_467706 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_467706.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_467706 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_467706 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_467706 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_467706.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_327492\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_327492 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_327492.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_327492 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_327492.next ();\n\n                                       // check object __DEC_operand_coveredBy_327492 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_327492 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_327492 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_327492.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_550779\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_550779 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_550779.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_550779 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_550779.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_550779 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_550779 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_550779 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_550779.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_692897\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_692897 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_692897.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_692897 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_692897.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_692897 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_692897 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_692897 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_692897.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_989838\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_989838 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_989838.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_989838 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_989838.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_989838 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_989838 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_989838 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_989838.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_94491\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_94491 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_94491.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_94491 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_94491.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_94491 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_94491 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_94491 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_94491.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_788659\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_788659 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_788659.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_788659 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_788659.next ();\n\n                                       // check object __DEC_message_message_788659 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_788659 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_788659 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_788659.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_788659 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_788659.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_operand is really bound\n                              JavaSDM.ensure ( _edge_operand != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_operand to combo\n                              JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                              ));\n\n                              // check link trg from _edge_operand to operand\n                              JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_42(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_189689 = null;\n      InteractionOperand __DEC_combo_fragment_232294 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_805089 = null;\n      InteractionOperand __DEC_messageReceive_fragment_119650 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_680701 = null;\n      InteractionOperand __DEC_messageSend_fragment_324987 = null;\n      Interaction __DEC_operand_enclosingInteraction_466477 = null;\n      InteractionOperand __DEC_operand_fragment_359384 = null;\n      InteractionOperand __DEC_guard_guard_811436 = null;\n      CombinedFragment __DEC_operand_operand_606116 = null;\n      Constraint __DEC_spec_specification_637519 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_80244 = null;\n      Lifeline __DEC_combo_coveredBy_80244 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_655534 = null;\n      Lifeline __DEC_messageReceive_coveredBy_655534 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_63928 = null;\n      Lifeline __DEC_messageSend_coveredBy_63928 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_688645 = null;\n      Lifeline __DEC_operand_coveredBy_688645 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_710049 = null;\n      Message __DEC_messageReceive_receiveEvent_710049 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_767174 = null;\n      Message __DEC_messageSend_receiveEvent_767174 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_603231 = null;\n      Message __DEC_messageReceive_sendEvent_603231 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79937 = null;\n      Message __DEC_messageSend_sendEvent_79937 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_302992 = null;\n      MessageEnd __DEC_message_message_302992 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterComboToOperand = null;\n      InteractionOperand operand = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link operand from combo to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterComboToOperand = new ArrayList(combo.getOperand()).iterator ();\n\n                     while ( fujaba__IterComboToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           operand = (InteractionOperand) fujaba__IterComboToOperand.next ();\n\n                           // check object operand is really bound\n                           JavaSDM.ensure ( operand != null );\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // check link covered from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_189689 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_189689 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_189689 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_189689 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_189689.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_232294 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_232294 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_232294 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_232294 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_232294.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_805089 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_805089 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_805089 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_805089 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_805089.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_119650 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_119650 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_119650 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_119650 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_119650.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_680701 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_680701 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_680701 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_680701 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_680701.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_324987 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_324987 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_324987 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_324987 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_324987.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_466477 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_466477 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_466477 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_466477 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_466477.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_359384 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_359384 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_359384 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_359384 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_359384.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_811436 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_811436 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_811436 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_811436.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_811436 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_811436.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_606116 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_606116 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_606116 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_606116.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_606116 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_606116.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_637519 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_637519 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_637519 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_637519.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_637519 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_637519.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_80244\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_80244 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_80244.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_80244 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_80244.next ();\n\n                                       // check object __DEC_combo_coveredBy_80244 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_80244 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_80244 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_80244.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_655534\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_655534 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_655534.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_655534 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_655534.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_655534 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_655534 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_655534 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_655534.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_63928\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_63928 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_63928.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_63928 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_63928.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_63928 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_63928 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_63928 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_63928.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_688645\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_688645 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_688645.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_688645 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_688645.next ();\n\n                                       // check object __DEC_operand_coveredBy_688645 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_688645 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_688645 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_688645.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_710049\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_710049 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_710049.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_710049 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_710049.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_710049 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_710049 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_710049 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_710049.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_767174\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_767174 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_767174.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_767174 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_767174.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_767174 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_767174 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_767174 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_767174.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_603231\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_603231 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_603231.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_603231 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_603231.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_603231 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_603231 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_603231 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_603231.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_79937\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79937 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79937.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_79937 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79937.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_79937 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_79937 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_79937 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_79937.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_302992\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_302992 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_302992.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_302992 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_302992.next ();\n\n                                       // check object __DEC_message_message_302992 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_302992 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_302992 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_302992.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_302992 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_302992.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to combo\n                              JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_43(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_879720 = null;\n      InteractionOperand __DEC_combo_fragment_633606 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_588073 = null;\n      InteractionOperand __DEC_messageReceive_fragment_119320 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_530719 = null;\n      InteractionOperand __DEC_messageSend_fragment_268424 = null;\n      Interaction __DEC_operand_enclosingInteraction_88094 = null;\n      InteractionOperand __DEC_operand_fragment_280071 = null;\n      InteractionOperand __DEC_guard_guard_53720 = null;\n      CombinedFragment __DEC_operand_operand_446704 = null;\n      Constraint __DEC_spec_specification_540679 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_477768 = null;\n      Lifeline __DEC_combo_coveredBy_477768 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_147794 = null;\n      Lifeline __DEC_messageReceive_coveredBy_147794 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_79241 = null;\n      Lifeline __DEC_messageSend_coveredBy_79241 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_591070 = null;\n      Lifeline __DEC_operand_coveredBy_591070 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_387746 = null;\n      Message __DEC_messageReceive_receiveEvent_387746 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_253291 = null;\n      Message __DEC_messageSend_receiveEvent_253291 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_158549 = null;\n      Message __DEC_messageReceive_sendEvent_158549 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_658828 = null;\n      Message __DEC_messageSend_sendEvent_658828 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_736027 = null;\n      MessageEnd __DEC_message_message_736027 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterComboToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterComboTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from line to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageReceive.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link trg from combo to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterComboTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(combo,EMoflonEdge.class,\"trg\")).iterator ();\n\n                     while ( fujaba__IterComboTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterComboTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link src from _edge_coveredBy to line\n                           JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                           ));\n\n                           // iterate to-many link operand from combo to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterComboToOperand = new ArrayList(combo.getOperand()).iterator ();\n\n                           while ( fujaba__IterComboToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 operand = (InteractionOperand) fujaba__IterComboToOperand.next ();\n\n                                 // check object operand is really bound\n                                 JavaSDM.ensure ( operand != null );\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // check link covered from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_879720 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_879720 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_879720 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_879720 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_879720.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_633606 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_633606 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_633606 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_633606 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_633606.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_588073 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_588073 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_588073 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_588073 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_588073.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_119320 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_119320 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_119320 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_119320 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_119320.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_530719 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_530719 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_530719 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_530719 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_530719.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_268424 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_268424 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_268424 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_268424 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_268424.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_88094 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_88094 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_88094 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_88094 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_88094.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_280071 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_280071 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_280071 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_280071 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_280071.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_53720 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_53720 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_53720 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_53720.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_53720 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_53720.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_446704 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_446704 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_446704 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_446704.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_446704 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_446704.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_540679 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_540679 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_540679 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_540679.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_540679 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_540679.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_477768\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_477768 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_477768.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_477768 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_477768.next ();\n\n                                             // check object __DEC_combo_coveredBy_477768 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_477768 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_477768 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_477768.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_147794\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_147794 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_147794.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_147794 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_147794.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_147794 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_147794 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_147794 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_147794.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_79241\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_79241 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_79241.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_79241 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_79241.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_79241 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_79241 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_79241 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_79241.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_591070\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_591070 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_591070.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_591070 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_591070.next ();\n\n                                             // check object __DEC_operand_coveredBy_591070 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_591070 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_591070 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_591070.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_387746\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_387746 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_387746.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_387746 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_387746.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_387746 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_387746 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_387746 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_387746.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_253291\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_253291 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_253291.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_253291 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_253291.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_253291 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_253291 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_253291 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_253291.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_158549\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_158549 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_158549.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_158549 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_158549.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_158549 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_158549 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_158549 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_158549.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_658828\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_658828 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_658828.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_658828 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_658828.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_658828 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_658828 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_658828 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_658828.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_736027\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_736027 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_736027.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_736027 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_736027.next ();\n\n                                             // check object __DEC_message_message_736027 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_736027 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_736027 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_736027.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_736027 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_736027.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to combo\n                                    JavaSDM.ensure (combo.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to combo\n                                    JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_44(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_269539 = null;\n      InteractionOperand __DEC_combo_fragment_247227 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_954340 = null;\n      InteractionOperand __DEC_messageReceive_fragment_471713 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_648616 = null;\n      InteractionOperand __DEC_messageSend_fragment_449884 = null;\n      Interaction __DEC_operand_enclosingInteraction_96571 = null;\n      InteractionOperand __DEC_operand_fragment_98354 = null;\n      InteractionOperand __DEC_guard_guard_423605 = null;\n      CombinedFragment __DEC_operand_operand_510325 = null;\n      Constraint __DEC_spec_specification_712861 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_291616 = null;\n      Lifeline __DEC_combo_coveredBy_291616 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_172961 = null;\n      Lifeline __DEC_messageReceive_coveredBy_172961 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_45149 = null;\n      Lifeline __DEC_messageSend_coveredBy_45149 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_687610 = null;\n      Lifeline __DEC_operand_coveredBy_687610 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656873 = null;\n      Message __DEC_messageReceive_receiveEvent_656873 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_100156 = null;\n      Message __DEC_messageSend_receiveEvent_100156 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_522231 = null;\n      Message __DEC_messageReceive_sendEvent_522231 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_819286 = null;\n      Message __DEC_messageSend_sendEvent_819286 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_563864 = null;\n      MessageEnd __DEC_message_message_563864 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_269539 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_269539 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_269539 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_269539 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_269539.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_247227 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_247227 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_247227 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_247227 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_247227.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_954340 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_954340 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_954340 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_954340 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_954340.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_471713 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_471713 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_471713 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_471713 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_471713.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_648616 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_648616 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_648616 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_648616 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_648616.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_449884 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_449884 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_449884 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_449884 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_449884.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_96571 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_96571 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_96571 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_96571 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_96571.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_98354 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_98354 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_98354 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_98354 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_98354.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_423605 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_423605 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_423605 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_423605.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_423605 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_423605.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_510325 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_510325 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_510325 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_510325.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_510325 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_510325.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_712861 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_712861 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_712861 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_712861.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_712861 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_712861.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_291616\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_291616 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_291616.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_291616 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_291616.next ();\n\n                                       // check object __DEC_combo_coveredBy_291616 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_291616 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_291616 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_291616.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_172961\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_172961 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_172961.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_172961 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_172961.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_172961 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_172961 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_172961 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_172961.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_45149\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_45149 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_45149.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_45149 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_45149.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_45149 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_45149 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_45149 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_45149.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_687610\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_687610 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_687610.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_687610 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_687610.next ();\n\n                                       // check object __DEC_operand_coveredBy_687610 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_687610 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_687610 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_687610.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_656873\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656873 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656873.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_656873 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656873.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_656873 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_656873 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_656873 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_656873.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_100156\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_100156 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_100156.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_100156 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_100156.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_100156 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_100156 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_100156 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_100156.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_522231\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_522231 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_522231.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_522231 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_522231.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_522231 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_522231 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_522231 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_522231.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_819286\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_819286 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_819286.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_819286 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_819286.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_819286 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_819286 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_819286 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_819286.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_563864\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_563864 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_563864.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_563864 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_563864.next ();\n\n                                       // check object __DEC_message_message_563864 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_563864 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_563864 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_563864.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_563864 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_563864.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_guard is really bound\n                              JavaSDM.ensure ( _edge_guard != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_guard to operand\n                              JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                              ));\n\n                              // check link trg from _edge_guard to guard\n                              JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_45(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_178448 = null;\n      InteractionOperand __DEC_combo_fragment_711848 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_215522 = null;\n      InteractionOperand __DEC_messageReceive_fragment_307370 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_25824 = null;\n      InteractionOperand __DEC_messageSend_fragment_770404 = null;\n      Interaction __DEC_operand_enclosingInteraction_187486 = null;\n      InteractionOperand __DEC_operand_fragment_424847 = null;\n      InteractionOperand __DEC_guard_guard_942868 = null;\n      CombinedFragment __DEC_operand_operand_925395 = null;\n      Constraint __DEC_spec_specification_660119 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_868735 = null;\n      Lifeline __DEC_combo_coveredBy_868735 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_833230 = null;\n      Lifeline __DEC_messageReceive_coveredBy_833230 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_230691 = null;\n      Lifeline __DEC_messageSend_coveredBy_230691 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_438565 = null;\n      Lifeline __DEC_operand_coveredBy_438565 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_819947 = null;\n      Message __DEC_messageReceive_receiveEvent_819947 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_526011 = null;\n      Message __DEC_messageSend_receiveEvent_526011 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_708426 = null;\n      Message __DEC_messageReceive_sendEvent_708426 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_724224 = null;\n      Message __DEC_messageSend_sendEvent_724224 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_914053 = null;\n      MessageEnd __DEC_message_message_914053 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // check link covered from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link covered from line to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageReceive.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_178448 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_178448 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_178448 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_178448 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_178448.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_711848 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_711848 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_711848 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_711848 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_711848.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_215522 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_215522 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_215522 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_215522 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_215522.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_307370 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_307370 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_307370 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_307370 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_307370.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_25824 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_25824 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_25824 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_25824 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_25824.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_770404 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_770404 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_770404 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_770404 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_770404.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_187486 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_187486 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_187486 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_187486 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_187486.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_424847 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_424847 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_424847 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_424847 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_424847.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_942868 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_942868 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_942868 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_942868.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_942868 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_942868.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_925395 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_925395 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_925395 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_925395.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_925395 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_925395.equals (combo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_660119 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_660119 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_660119 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_660119.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_660119 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_660119.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link covered from combo to __DEC_combo_coveredBy_868735\n                           fujaba__Success = false;\n\n                           fujaba__IterComboTo__DEC_combo_coveredBy_868735 = new ArrayList(combo.getCovered()).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_868735.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_combo_coveredBy_868735 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_868735.next ();\n\n                                 // check object __DEC_combo_coveredBy_868735 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_coveredBy_868735 != null );\n                                 // check isomorphic binding between objects __DEC_combo_coveredBy_868735 and line \n                                 JavaSDM.ensure ( !__DEC_combo_coveredBy_868735.equals (line) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_833230\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_833230 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_833230.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_coveredBy_833230 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_833230.next ();\n\n                                 // check object __DEC_messageReceive_coveredBy_833230 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_coveredBy_833230 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_coveredBy_833230 and line \n                                 JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_833230.equals (line) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_230691\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_230691 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_230691.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_coveredBy_230691 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_230691.next ();\n\n                                 // check object __DEC_messageSend_coveredBy_230691 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_coveredBy_230691 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_coveredBy_230691 and line \n                                 JavaSDM.ensure ( !__DEC_messageSend_coveredBy_230691.equals (line) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link covered from operand to __DEC_operand_coveredBy_438565\n                           fujaba__Success = false;\n\n                           fujaba__IterOperandTo__DEC_operand_coveredBy_438565 = new ArrayList(operand.getCovered()).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_438565.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_operand_coveredBy_438565 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_438565.next ();\n\n                                 // check object __DEC_operand_coveredBy_438565 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_coveredBy_438565 != null );\n                                 // check isomorphic binding between objects __DEC_operand_coveredBy_438565 and line \n                                 JavaSDM.ensure ( !__DEC_operand_coveredBy_438565.equals (line) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_819947\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_819947 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_819947.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_819947 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_819947.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_819947 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_819947 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_819947 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_819947.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_526011\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_526011 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_526011.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_526011 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_526011.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_526011 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_526011 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_526011 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_526011.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_708426\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_708426 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_708426.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_708426 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_708426.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_708426 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_708426 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_708426 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_708426.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_724224\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_724224 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_724224.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_724224 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_724224.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_724224 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_724224 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_724224 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_724224.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_914053\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_914053 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_914053.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_914053 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_914053.next ();\n\n                                 // check object __DEC_message_message_914053 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_914053 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_914053 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_914053.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_914053 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_914053.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to operand\n                        JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from messageReceive to line\n                        JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from line to operand\n                        JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_46(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_843928 = null;\n      InteractionOperand __DEC_combo_fragment_878682 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_613146 = null;\n      InteractionOperand __DEC_messageReceive_fragment_515996 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_478957 = null;\n      InteractionOperand __DEC_messageSend_fragment_672616 = null;\n      Interaction __DEC_operand_enclosingInteraction_332541 = null;\n      InteractionOperand __DEC_operand_fragment_434756 = null;\n      InteractionOperand __DEC_guard_guard_949807 = null;\n      CombinedFragment __DEC_operand_operand_705135 = null;\n      Constraint __DEC_spec_specification_687036 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_967116 = null;\n      Lifeline __DEC_combo_coveredBy_967116 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_552877 = null;\n      Lifeline __DEC_messageReceive_coveredBy_552877 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_640386 = null;\n      Lifeline __DEC_messageSend_coveredBy_640386 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_609715 = null;\n      Lifeline __DEC_operand_coveredBy_609715 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112283 = null;\n      Message __DEC_messageReceive_receiveEvent_112283 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_463772 = null;\n      Message __DEC_messageSend_receiveEvent_463772 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_904482 = null;\n      Message __DEC_messageReceive_sendEvent_904482 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_600301 = null;\n      Message __DEC_messageSend_sendEvent_600301 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_326033 = null;\n      MessageEnd __DEC_message_message_326033 = null;\n      Match match = null;\n      Iterator fujaba__IterOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // check link covered from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link covered from line to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link trg from operand to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                     while ( fujaba__IterOperandTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterOperandTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link src from _edge_coveredBy to line\n                           JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_843928 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_843928 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_843928 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_843928 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_843928.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_878682 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_878682 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_878682 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_878682 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_878682.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_613146 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_613146 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_613146 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_613146 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_613146.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_515996 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_515996 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_515996 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_515996 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_515996.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_478957 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_478957 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_478957 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_478957 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_478957.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_672616 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_672616 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_672616 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_672616 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_672616.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_332541 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_332541 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_332541 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_332541 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_332541.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_434756 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_434756 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_434756 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_434756 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_434756.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_949807 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_949807 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_949807 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_949807.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_949807 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_949807.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_705135 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_705135 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_705135 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_705135.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_705135 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_705135.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_687036 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_687036 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_687036 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_687036.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_687036 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_687036.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_967116\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_967116 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_967116.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_967116 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_967116.next ();\n\n                                       // check object __DEC_combo_coveredBy_967116 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_967116 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_967116 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_967116.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_552877\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_552877 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_552877.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_552877 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_552877.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_552877 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_552877 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_552877 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_552877.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_640386\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_640386 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_640386.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_640386 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_640386.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_640386 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_640386 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_640386 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_640386.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_609715\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_609715 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_609715.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_609715 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_609715.next ();\n\n                                       // check object __DEC_operand_coveredBy_609715 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_609715 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_609715 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_609715.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_112283\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112283 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112283.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_112283 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112283.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_112283 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_112283 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_112283 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_112283.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_463772\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_463772 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_463772.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_463772 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_463772.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_463772 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_463772 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_463772 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_463772.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_904482\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_904482 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_904482.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_904482 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_904482.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_904482 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_904482 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_904482 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_904482.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_600301\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_600301 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_600301.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_600301 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_600301.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_600301 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_600301 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_600301 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_600301.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_326033\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_326033 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_326033.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_326033 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_326033.next ();\n\n                                       // check object __DEC_message_message_326033 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_326033 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_326033 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_326033.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_326033 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_326033.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to operand\n                              JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_47(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_617772 = null;\n      InteractionOperand __DEC_combo_fragment_766579 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_152908 = null;\n      InteractionOperand __DEC_messageReceive_fragment_308261 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_205738 = null;\n      InteractionOperand __DEC_messageSend_fragment_669836 = null;\n      Interaction __DEC_operand_enclosingInteraction_374537 = null;\n      InteractionOperand __DEC_operand_fragment_298861 = null;\n      InteractionOperand __DEC_guard_guard_711971 = null;\n      CombinedFragment __DEC_operand_operand_341095 = null;\n      Constraint __DEC_spec_specification_981890 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_521978 = null;\n      Lifeline __DEC_combo_coveredBy_521978 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_238834 = null;\n      Lifeline __DEC_messageReceive_coveredBy_238834 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_412951 = null;\n      Lifeline __DEC_messageSend_coveredBy_412951 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_398787 = null;\n      Lifeline __DEC_operand_coveredBy_398787 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_375437 = null;\n      Message __DEC_messageReceive_receiveEvent_375437 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_122210 = null;\n      Message __DEC_messageSend_receiveEvent_122210 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_655906 = null;\n      Message __DEC_messageReceive_sendEvent_655906 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_301048 = null;\n      Message __DEC_messageSend_sendEvent_301048 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_566128 = null;\n      MessageEnd __DEC_message_message_566128 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_617772 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_617772 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_617772 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_617772 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_617772.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_766579 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_766579 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_766579 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_766579 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_766579.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_152908 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_152908 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_152908 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_152908 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_152908.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_308261 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_308261 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_308261 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_308261 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_308261.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_205738 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_205738 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_205738 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_205738 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_205738.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_669836 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_669836 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_669836 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_669836 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_669836.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_374537 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_374537 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_374537 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_374537 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_374537.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_298861 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_298861 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_298861 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_298861 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_298861.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_711971 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_711971 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_711971 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_711971.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_711971 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_711971.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_341095 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_341095 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_341095 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_341095.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_341095 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_341095.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_981890 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_981890 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_981890 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_981890.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_981890 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_981890.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_521978\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_521978 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_521978.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_521978 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_521978.next ();\n\n                                       // check object __DEC_combo_coveredBy_521978 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_521978 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_521978 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_521978.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_238834\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_238834 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_238834.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_238834 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_238834.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_238834 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_238834 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_238834 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_238834.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_412951\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_412951 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_412951.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_412951 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_412951.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_412951 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_412951 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_412951 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_412951.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_398787\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_398787 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_398787.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_398787 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_398787.next ();\n\n                                       // check object __DEC_operand_coveredBy_398787 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_398787 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_398787 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_398787.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_375437\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_375437 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_375437.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_375437 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_375437.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_375437 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_375437 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_375437 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_375437.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_122210\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_122210 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_122210.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_122210 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_122210.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_122210 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_122210 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_122210 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_122210.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_655906\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_655906 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_655906.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_655906 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_655906.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_655906 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_655906 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_655906 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_655906.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_301048\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_301048 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_301048.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_301048 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_301048.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_301048 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_301048 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_301048 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_301048.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_566128\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_566128 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_566128.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_566128 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_566128.next ();\n\n                                       // check object __DEC_message_message_566128 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_566128 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_566128 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_566128.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_566128 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_566128.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_specification is really bound\n                              JavaSDM.ensure ( _edge_specification != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_specification to guard\n                              JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                              ));\n\n                              // check link trg from _edge_specification to spec\n                              JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_48(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_7012 = null;\n      NormalStep __DEC_alt_stepAlternative_483240 = null;\n      Flow __DEC_step_steps_822578 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_375847 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_375847 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Actor actor = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      Flow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_7012 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_7012 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_7012 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_7012.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_7012 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_7012.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_483240 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_483240 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_483240 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_483240.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_483240 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_483240.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_822578 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_822578 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_822578 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_822578.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_822578 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_822578.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_822578 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_822578.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_375847\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_375847 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_375847.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_375847 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_375847.next ();\n\n                           // check object __DEC_altFlow_ref_375847 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_375847 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_375847 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_375847.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,step,alt,altFlow,useCase,flow,actor);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_12(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_520422 = null;\n      NormalStep __DEC_alt_stepAlternative_517051 = null;\n      Flow __DEC_step_steps_456428 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_521057 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_521057 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      Flow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         flow = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_actor to actor\n         JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_520422 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_520422 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_520422 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_520422.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_520422 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_520422.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_517051 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_517051 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_517051 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_517051.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_517051 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_517051.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_456428 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_456428 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_456428 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_456428.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_456428 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_456428.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_456428 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_456428.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_521057\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_521057 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_521057.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_521057 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_521057.next ();\n\n                           // check object __DEC_altFlow_ref_521057 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_521057 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_521057 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_521057.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,step,alt,altFlow,useCase,flow,actor);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_13(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_413345 = null;\n      InteractionOperand __DEC_combo_fragment_336221 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_49619 = null;\n      InteractionOperand __DEC_messageReceive_fragment_157164 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_848614 = null;\n      InteractionOperand __DEC_messageSend_fragment_725228 = null;\n      Interaction __DEC_operand_enclosingInteraction_343851 = null;\n      InteractionOperand __DEC_operand_fragment_680594 = null;\n      InteractionOperand __DEC_guard_guard_682683 = null;\n      CombinedFragment __DEC_operand_operand_352406 = null;\n      Constraint __DEC_spec_specification_3515 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_956488 = null;\n      Lifeline __DEC_combo_coveredBy_956488 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_351489 = null;\n      Lifeline __DEC_messageReceive_coveredBy_351489 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_112100 = null;\n      Lifeline __DEC_messageSend_coveredBy_112100 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_851944 = null;\n      Lifeline __DEC_operand_coveredBy_851944 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384012 = null;\n      Message __DEC_messageReceive_receiveEvent_384012 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_99404 = null;\n      Message __DEC_messageSend_receiveEvent_99404 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_209055 = null;\n      Message __DEC_messageReceive_sendEvent_209055 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_670988 = null;\n      Message __DEC_messageSend_sendEvent_670988 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_497268 = null;\n      MessageEnd __DEC_message_message_497268 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_413345 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_413345 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_413345 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_413345 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_413345.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_336221 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_336221 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_336221 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_336221 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_336221.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_49619 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_49619 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_49619 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_49619 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_49619.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_157164 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_157164 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_157164 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_157164 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_157164.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_848614 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_848614 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_848614 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_848614 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_848614.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_725228 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_725228 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_725228 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_725228 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_725228.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_343851 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_343851 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_343851 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_343851 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_343851.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_680594 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_680594 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_680594 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_680594 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_680594.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_682683 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_682683 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_682683 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_682683.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_682683 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_682683.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_352406 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_352406 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_352406 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_352406.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_352406 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_352406.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_3515 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_3515 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_3515 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_3515.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_3515 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_3515.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_956488\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_956488 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_956488.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_956488 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_956488.next ();\n\n                                             // check object __DEC_combo_coveredBy_956488 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_956488 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_956488 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_956488.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_351489\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_351489 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_351489.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_351489 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_351489.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_351489 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_351489 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_351489 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_351489.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_112100\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_112100 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_112100.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_112100 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_112100.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_112100 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_112100 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_112100 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_112100.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_851944\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_851944 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_851944.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_851944 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_851944.next ();\n\n                                             // check object __DEC_operand_coveredBy_851944 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_851944 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_851944 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_851944.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_384012\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384012 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384012.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_384012 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384012.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_384012 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_384012 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_384012 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_384012.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_99404\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_99404 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_99404.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_99404 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_99404.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_99404 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_99404 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_99404 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_99404.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_209055\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_209055 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_209055.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_209055 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_209055.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_209055 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_209055 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_209055 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_209055.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_670988\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_670988 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_670988.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_670988 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_670988.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_670988 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_670988 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_670988 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_670988.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_497268\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_497268 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_497268.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_497268 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_497268.next ();\n\n                                             // check object __DEC_message_message_497268 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_497268 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_497268 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_497268.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_497268 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_497268.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_sendEvent is really bound\n                                    JavaSDM.ensure ( _edge_sendEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_sendEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sendEvent to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_49(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_168432 = null;\n      InteractionOperand __DEC_combo_fragment_688345 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_742731 = null;\n      InteractionOperand __DEC_messageReceive_fragment_710967 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_555617 = null;\n      InteractionOperand __DEC_messageSend_fragment_20777 = null;\n      Interaction __DEC_operand_enclosingInteraction_575656 = null;\n      InteractionOperand __DEC_operand_fragment_77082 = null;\n      InteractionOperand __DEC_guard_guard_501627 = null;\n      CombinedFragment __DEC_operand_operand_940960 = null;\n      Constraint __DEC_spec_specification_719219 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_220101 = null;\n      Lifeline __DEC_combo_coveredBy_220101 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_116219 = null;\n      Lifeline __DEC_messageReceive_coveredBy_116219 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_536932 = null;\n      Lifeline __DEC_messageSend_coveredBy_536932 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_190101 = null;\n      Lifeline __DEC_operand_coveredBy_190101 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_155082 = null;\n      Message __DEC_messageReceive_receiveEvent_155082 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_611168 = null;\n      Message __DEC_messageSend_receiveEvent_611168 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_995217 = null;\n      Message __DEC_messageReceive_sendEvent_995217 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_15159 = null;\n      Message __DEC_messageSend_sendEvent_15159 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_514480 = null;\n      MessageEnd __DEC_message_message_514480 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageReceiveToLine = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // check link src from _edge_receiveEvent to message\n         JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageReceive to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageReceiveToLine = new ArrayList(messageReceive.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageReceiveToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageReceiveToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_168432 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_168432 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_168432 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_168432 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_168432.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_688345 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_688345 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_688345 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_688345 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_688345.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_742731 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_742731 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_742731 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_742731 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_742731.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_710967 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_710967 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_710967 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_710967 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_710967.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_555617 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_555617 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_555617 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_555617 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_555617.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_20777 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_20777 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_20777 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_20777 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_20777.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_575656 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_575656 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_575656 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_575656 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_575656.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_77082 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_77082 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_77082 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_77082 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_77082.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_501627 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_501627 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_501627 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_501627.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_501627 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_501627.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_940960 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_940960 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_940960 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_940960.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_940960 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_940960.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_719219 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_719219 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_719219 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_719219.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_719219 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_719219.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_220101\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_220101 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_220101.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_220101 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_220101.next ();\n\n                                             // check object __DEC_combo_coveredBy_220101 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_220101 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_220101 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_220101.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_116219\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_116219 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_116219.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_116219 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_116219.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_116219 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_116219 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_116219 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_116219.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_536932\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_536932 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_536932.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_536932 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_536932.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_536932 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_536932 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_536932 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_536932.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_190101\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_190101 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_190101.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_190101 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_190101.next ();\n\n                                             // check object __DEC_operand_coveredBy_190101 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_190101 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_190101 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_190101.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_155082\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_155082 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_155082.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_155082 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_155082.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_155082 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_155082 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_155082 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_155082.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_611168\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_611168 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_611168.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_611168 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_611168.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_611168 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_611168 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_611168 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_611168.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_995217\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_995217 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_995217.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_995217 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_995217.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_995217 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_995217 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_995217 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_995217.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_15159\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_15159 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_15159.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_15159 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_15159.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_15159 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_15159 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_15159 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_15159.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_514480\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_514480 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_514480.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_514480 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_514480.next ();\n\n                                             // check object __DEC_message_message_514480 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_514480 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_514480 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_514480.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_514480 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_514480.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_receiveEvent is really bound\n                                    JavaSDM.ensure ( _edge_receiveEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_receiveEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_receiveEvent to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_50(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_469790 = null;\n      InteractionOperand __DEC_combo_fragment_853607 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_699432 = null;\n      InteractionOperand __DEC_messageReceive_fragment_581216 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_289669 = null;\n      InteractionOperand __DEC_messageSend_fragment_651619 = null;\n      Interaction __DEC_operand_enclosingInteraction_518391 = null;\n      InteractionOperand __DEC_operand_fragment_604328 = null;\n      InteractionOperand __DEC_guard_guard_909927 = null;\n      CombinedFragment __DEC_operand_operand_569730 = null;\n      Constraint __DEC_spec_specification_694110 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_255355 = null;\n      Lifeline __DEC_combo_coveredBy_255355 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_457430 = null;\n      Lifeline __DEC_messageReceive_coveredBy_457430 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_699151 = null;\n      Lifeline __DEC_messageSend_coveredBy_699151 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_565145 = null;\n      Lifeline __DEC_operand_coveredBy_565145 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_954241 = null;\n      Message __DEC_messageReceive_receiveEvent_954241 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_705295 = null;\n      Message __DEC_messageSend_receiveEvent_705295 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_530351 = null;\n      Message __DEC_messageReceive_sendEvent_530351 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_166834 = null;\n      Message __DEC_messageSend_sendEvent_166834 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_489598 = null;\n      MessageEnd __DEC_message_message_489598 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageReceive.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link src from _edge_interaction to message\n                           JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                           ));\n\n                           // iterate to-many link covered from line to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // iterate to-many link covered from line to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // check link operand from operand to combo\n                                       JavaSDM.ensure (combo.equals (operand.eContainer()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_469790 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_469790 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_469790 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_469790 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_469790.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_853607 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_853607 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_853607 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_853607 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_853607.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_699432 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_699432 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_699432 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_699432 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_699432.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_581216 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_581216 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_581216 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_581216 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_581216.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_289669 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_289669 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_289669 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_289669 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_289669.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_651619 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_651619 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_651619 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_651619 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_651619.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_518391 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_518391 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_518391 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_518391 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_518391.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_604328 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_604328 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_604328 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_604328 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_604328.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_909927 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_909927 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_909927 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_909927.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_909927 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_909927.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_569730 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_569730 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_569730 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_569730.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_569730 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_569730.equals (combo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_694110 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_694110 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_694110 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_694110.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_694110 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_694110.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link covered from combo to __DEC_combo_coveredBy_255355\n                                             fujaba__Success = false;\n\n                                             fujaba__IterComboTo__DEC_combo_coveredBy_255355 = new ArrayList(combo.getCovered()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_255355.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_combo_coveredBy_255355 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_255355.next ();\n\n                                                   // check object __DEC_combo_coveredBy_255355 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_coveredBy_255355 != null );\n                                                   // check isomorphic binding between objects __DEC_combo_coveredBy_255355 and line \n                                                   JavaSDM.ensure ( !__DEC_combo_coveredBy_255355.equals (line) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_457430\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_457430 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_457430.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_coveredBy_457430 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_457430.next ();\n\n                                                   // check object __DEC_messageReceive_coveredBy_457430 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_coveredBy_457430 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_coveredBy_457430 and line \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_457430.equals (line) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_699151\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_699151 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_699151.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_coveredBy_699151 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_699151.next ();\n\n                                                   // check object __DEC_messageSend_coveredBy_699151 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_coveredBy_699151 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_coveredBy_699151 and line \n                                                   JavaSDM.ensure ( !__DEC_messageSend_coveredBy_699151.equals (line) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link covered from operand to __DEC_operand_coveredBy_565145\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOperandTo__DEC_operand_coveredBy_565145 = new ArrayList(operand.getCovered()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_565145.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_operand_coveredBy_565145 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_565145.next ();\n\n                                                   // check object __DEC_operand_coveredBy_565145 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_coveredBy_565145 != null );\n                                                   // check isomorphic binding between objects __DEC_operand_coveredBy_565145 and line \n                                                   JavaSDM.ensure ( !__DEC_operand_coveredBy_565145.equals (line) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_954241\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_954241 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_954241.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_954241 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_954241.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_954241 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_954241 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_954241 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_954241.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_705295\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_705295 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_705295.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_705295 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_705295.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_705295 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_705295 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_705295 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_705295.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_530351\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_530351 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_530351.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_530351 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_530351.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_530351 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_530351 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_530351 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_530351.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_166834\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_166834 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_166834.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_166834 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_166834.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_166834 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_166834 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_166834 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_166834.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_489598\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_489598 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_489598.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_489598 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_489598.next ();\n\n                                                   // check object __DEC_message_message_489598 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_489598 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_489598 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_489598.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_489598 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_489598.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_interaction is really bound\n                                          JavaSDM.ensure ( _edge_interaction != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_interaction to message\n                                          JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_interaction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                          ));\n\n                                          // check link covered from line to combo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                          // check link covered from messageReceive to line\n                                          JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                          // check link covered from messageSend to line\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                          // check link covered from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_51(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_911900 = null;\n      InteractionOperand __DEC_combo_fragment_260051 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_906874 = null;\n      InteractionOperand __DEC_messageReceive_fragment_119923 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_710351 = null;\n      InteractionOperand __DEC_messageSend_fragment_188170 = null;\n      Interaction __DEC_operand_enclosingInteraction_43377 = null;\n      InteractionOperand __DEC_operand_fragment_817857 = null;\n      InteractionOperand __DEC_guard_guard_485941 = null;\n      CombinedFragment __DEC_operand_operand_311684 = null;\n      Constraint __DEC_spec_specification_576513 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_824128 = null;\n      Lifeline __DEC_combo_coveredBy_824128 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_899274 = null;\n      Lifeline __DEC_messageReceive_coveredBy_899274 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_682190 = null;\n      Lifeline __DEC_messageSend_coveredBy_682190 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_147443 = null;\n      Lifeline __DEC_operand_coveredBy_147443 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316764 = null;\n      Message __DEC_messageReceive_receiveEvent_316764 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_814762 = null;\n      Message __DEC_messageSend_receiveEvent_814762 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406605 = null;\n      Message __DEC_messageReceive_sendEvent_406605 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_653130 = null;\n      Message __DEC_messageSend_sendEvent_653130 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_619717 = null;\n      MessageEnd __DEC_message_message_619717 = null;\n      Match match = null;\n      Iterator fujaba__IterInteractionTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link covered from line to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link trg from _edge_message to message\n                                 JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                 ));\n\n                                 // iterate to-many link covered from line to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // check link operand from operand to combo\n                                       JavaSDM.ensure (combo.equals (operand.eContainer()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // iterate to-many link trg from interaction to _edge_interaction\n                                       fujaba__Success = false;\n\n                                       fujaba__IterInteractionTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterInteractionTo_edge_interaction.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_interaction = (EMoflonEdge) fujaba__IterInteractionTo_edge_interaction.next ();\n\n                                             // check object _edge_interaction is really bound\n                                             JavaSDM.ensure ( _edge_interaction != null );\n                                             // check isomorphic binding between objects _edge_message and _edge_interaction \n                                             JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                             // check link src from _edge_interaction to message\n                                             JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_enclosingInteraction_911900 = combo.getEnclosingInteraction ();\n\n                                                   // check object __DEC_combo_enclosingInteraction_911900 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_enclosingInteraction_911900 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_enclosingInteraction_911900 and interaction \n                                                   JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_911900.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_260051 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_260051 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_260051 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_260051 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_260051.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_906874 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_906874 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_906874 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_906874 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_906874.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_119923 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_119923 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_119923 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_119923 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_119923.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_710351 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_710351 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_710351 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_710351 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_710351.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_188170 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_188170 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_188170 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_188170 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_188170.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_43377 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_43377 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_43377 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_43377 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_43377.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_817857 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_817857 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_817857 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_817857 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_817857.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_485941 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_485941 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_485941 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_485941.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_485941 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_485941.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_311684 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_311684 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_311684 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_311684.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_311684 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_311684.equals (combo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_576513 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_576513 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_576513 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_576513.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_576513 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_576513.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link covered from combo to __DEC_combo_coveredBy_824128\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterComboTo__DEC_combo_coveredBy_824128 = new ArrayList(combo.getCovered()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_824128.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_combo_coveredBy_824128 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_824128.next ();\n\n                                                         // check object __DEC_combo_coveredBy_824128 is really bound\n                                                         JavaSDM.ensure ( __DEC_combo_coveredBy_824128 != null );\n                                                         // check isomorphic binding between objects __DEC_combo_coveredBy_824128 and line \n                                                         JavaSDM.ensure ( !__DEC_combo_coveredBy_824128.equals (line) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_899274\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_899274 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_899274.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_coveredBy_899274 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_899274.next ();\n\n                                                         // check object __DEC_messageReceive_coveredBy_899274 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_coveredBy_899274 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_coveredBy_899274 and line \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_899274.equals (line) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_682190\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_682190 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_682190.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_coveredBy_682190 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_682190.next ();\n\n                                                         // check object __DEC_messageSend_coveredBy_682190 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_coveredBy_682190 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_coveredBy_682190 and line \n                                                         JavaSDM.ensure ( !__DEC_messageSend_coveredBy_682190.equals (line) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link covered from operand to __DEC_operand_coveredBy_147443\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterOperandTo__DEC_operand_coveredBy_147443 = new ArrayList(operand.getCovered()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_147443.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_operand_coveredBy_147443 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_147443.next ();\n\n                                                         // check object __DEC_operand_coveredBy_147443 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_coveredBy_147443 != null );\n                                                         // check isomorphic binding between objects __DEC_operand_coveredBy_147443 and line \n                                                         JavaSDM.ensure ( !__DEC_operand_coveredBy_147443.equals (line) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_316764\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316764 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316764.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_receiveEvent_316764 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316764.next ();\n\n                                                         // check object __DEC_messageReceive_receiveEvent_316764 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_316764 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_316764 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_316764.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_814762\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_814762 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_814762.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_receiveEvent_814762 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_814762.next ();\n\n                                                         // check object __DEC_messageSend_receiveEvent_814762 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_receiveEvent_814762 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_receiveEvent_814762 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_814762.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_406605\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406605 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406605.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_sendEvent_406605 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406605.next ();\n\n                                                         // check object __DEC_messageReceive_sendEvent_406605 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_sendEvent_406605 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_sendEvent_406605 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_406605.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_653130\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_653130 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_653130.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_sendEvent_653130 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_653130.next ();\n\n                                                         // check object __DEC_messageSend_sendEvent_653130 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_sendEvent_653130 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_sendEvent_653130 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_sendEvent_653130.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link message from message to __DEC_message_message_619717\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageTo__DEC_message_message_619717 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_619717.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_message_message_619717 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_619717.next ();\n\n                                                         // check object __DEC_message_message_619717 is really bound\n                                                         JavaSDM.ensure ( __DEC_message_message_619717 != null );\n                                                         // check isomorphic binding between objects __DEC_message_message_619717 and messageReceive \n                                                         JavaSDM.ensure ( !__DEC_message_message_619717.equals (messageReceive) );\n\n                                                         // check isomorphic binding between objects __DEC_message_message_619717 and messageSend \n                                                         JavaSDM.ensure ( !__DEC_message_message_619717.equals (messageSend) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_interaction is really bound\n                                                JavaSDM.ensure ( _edge_interaction != null );\n                                                // check object _edge_message is really bound\n                                                JavaSDM.ensure ( _edge_message != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object message is really bound\n                                                JavaSDM.ensure ( message != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check isomorphic binding between objects _edge_message and _edge_interaction \n                                                JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link message from message to interaction\n                                                JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                                ));\n\n                                                // check link message from messageReceive to message\n                                                JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                                ));\n\n                                                // check link message from messageSend to message\n                                                JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageSend\n                                                JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                                )));\n\n                                                // check link sendEvent from message to messageSend\n                                                JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                                ));\n\n                                                // check link sendEvent from message to messageReceive\n                                                JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                                )));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (combo.equals (operand.eContainer()\n                                                ));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_interaction to message\n                                                JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_message to interaction\n                                                JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_interaction to interaction\n                                                JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_message to message\n                                                JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                                ));\n\n                                                // check link covered from line to combo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                                // check link covered from messageReceive to line\n                                                JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                                // check link covered from messageSend to line\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                                // check link covered from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_52(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_542315 = null;\n      InteractionOperand __DEC_combo_fragment_556277 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_760300 = null;\n      InteractionOperand __DEC_messageReceive_fragment_336686 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_967376 = null;\n      InteractionOperand __DEC_messageSend_fragment_268317 = null;\n      Interaction __DEC_operand_enclosingInteraction_547858 = null;\n      InteractionOperand __DEC_operand_fragment_623170 = null;\n      InteractionOperand __DEC_guard_guard_617741 = null;\n      CombinedFragment __DEC_operand_operand_204143 = null;\n      Constraint __DEC_spec_specification_752700 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_600828 = null;\n      Lifeline __DEC_combo_coveredBy_600828 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_321102 = null;\n      Lifeline __DEC_messageReceive_coveredBy_321102 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_535084 = null;\n      Lifeline __DEC_messageSend_coveredBy_535084 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_564664 = null;\n      Lifeline __DEC_operand_coveredBy_564664 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_148588 = null;\n      Message __DEC_messageReceive_receiveEvent_148588 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_573646 = null;\n      Message __DEC_messageSend_receiveEvent_573646 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_621656 = null;\n      Message __DEC_messageReceive_sendEvent_621656 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_827955 = null;\n      Message __DEC_messageSend_sendEvent_827955 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_134107 = null;\n      MessageEnd __DEC_message_message_134107 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_542315 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_542315 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_542315 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_542315 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_542315.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_556277 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_556277 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_556277 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_556277 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_556277.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_760300 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_760300 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_760300 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_760300 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_760300.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_336686 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_336686 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_336686 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_336686 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_336686.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_967376 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_967376 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_967376 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_967376 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_967376.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_268317 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_268317 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_268317 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_268317 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_268317.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_547858 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_547858 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_547858 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_547858 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_547858.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_623170 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_623170 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_623170 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_623170 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_623170.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_617741 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_617741 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_617741 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_617741.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_617741 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_617741.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_204143 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_204143 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_204143 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_204143.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_204143 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_204143.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_752700 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_752700 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_752700 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_752700.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_752700 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_752700.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_600828\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_600828 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_600828.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_600828 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_600828.next ();\n\n                                             // check object __DEC_combo_coveredBy_600828 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_600828 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_600828 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_600828.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_321102\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_321102 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_321102.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_321102 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_321102.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_321102 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_321102 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_321102 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_321102.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_535084\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_535084 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_535084.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_535084 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_535084.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_535084 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_535084 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_535084 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_535084.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_564664\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_564664 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_564664.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_564664 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_564664.next ();\n\n                                             // check object __DEC_operand_coveredBy_564664 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_564664 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_564664 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_564664.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_148588\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_148588 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_148588.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_148588 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_148588.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_148588 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_148588 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_148588 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_148588.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_573646\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_573646 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_573646.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_573646 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_573646.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_573646 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_573646 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_573646 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_573646.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_621656\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_621656 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_621656.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_621656 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_621656.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_621656 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_621656 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_621656 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_621656.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_827955\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_827955 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_827955.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_827955 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_827955.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_827955 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_827955 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_827955 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_827955.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_134107\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_134107 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_134107.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_134107 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_134107.next ();\n\n                                             // check object __DEC_message_message_134107 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_134107 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_134107 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_134107.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_134107 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_134107.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_53(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_494504 = null;\n      InteractionOperand __DEC_combo_fragment_392594 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_247453 = null;\n      InteractionOperand __DEC_messageReceive_fragment_364158 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_475579 = null;\n      InteractionOperand __DEC_messageSend_fragment_867565 = null;\n      Interaction __DEC_operand_enclosingInteraction_368031 = null;\n      InteractionOperand __DEC_operand_fragment_979904 = null;\n      InteractionOperand __DEC_guard_guard_584179 = null;\n      CombinedFragment __DEC_operand_operand_898460 = null;\n      Constraint __DEC_spec_specification_748967 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_721642 = null;\n      Lifeline __DEC_combo_coveredBy_721642 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_837531 = null;\n      Lifeline __DEC_messageReceive_coveredBy_837531 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_159301 = null;\n      Lifeline __DEC_messageSend_coveredBy_159301 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_106421 = null;\n      Lifeline __DEC_operand_coveredBy_106421 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_457188 = null;\n      Message __DEC_messageReceive_receiveEvent_457188 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_617949 = null;\n      Message __DEC_messageSend_receiveEvent_617949 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_271663 = null;\n      Message __DEC_messageReceive_sendEvent_271663 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_6639 = null;\n      Message __DEC_messageSend_sendEvent_6639 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_135197 = null;\n      MessageEnd __DEC_message_message_135197 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link covered from messageSend to line\n         JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_494504 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_494504 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_494504 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_494504 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_494504.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_392594 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_392594 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_392594 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_392594 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_392594.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_247453 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_247453 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_247453 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_247453 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_247453.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_364158 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_364158 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_364158 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_364158 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_364158.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_475579 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_475579 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_475579 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_475579 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_475579.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_867565 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_867565 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_867565 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_867565 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_867565.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_368031 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_368031 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_368031 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_368031 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_368031.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_979904 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_979904 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_979904 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_979904 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_979904.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_584179 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_584179 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_584179 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_584179.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_584179 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_584179.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_898460 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_898460 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_898460 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_898460.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_898460 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_898460.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_748967 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_748967 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_748967 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_748967.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_748967 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_748967.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_721642\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_721642 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_721642.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_721642 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_721642.next ();\n\n                                       // check object __DEC_combo_coveredBy_721642 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_721642 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_721642 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_721642.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_837531\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_837531 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_837531.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_837531 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_837531.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_837531 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_837531 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_837531 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_837531.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_159301\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_159301 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_159301.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_159301 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_159301.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_159301 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_159301 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_159301 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_159301.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_106421\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_106421 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_106421.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_106421 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_106421.next ();\n\n                                       // check object __DEC_operand_coveredBy_106421 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_106421 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_106421 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_106421.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_457188\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_457188 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_457188.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_457188 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_457188.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_457188 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_457188 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_457188 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_457188.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_617949\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_617949 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_617949.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_617949 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_617949.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_617949 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_617949 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_617949 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_617949.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_271663\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_271663 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_271663.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_271663 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_271663.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_271663 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_271663 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_271663 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_271663.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_6639\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_6639 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_6639.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_6639 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_6639.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_6639 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_6639 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_6639 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_6639.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_135197\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_135197 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_135197.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_135197 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_135197.next ();\n\n                                       // check object __DEC_message_message_135197 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_135197 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_135197 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_135197.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_135197 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_135197.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_54(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_45830 = null;\n      InteractionOperand __DEC_combo_fragment_25282 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_859475 = null;\n      InteractionOperand __DEC_messageReceive_fragment_955507 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_425950 = null;\n      InteractionOperand __DEC_messageSend_fragment_900129 = null;\n      Interaction __DEC_operand_enclosingInteraction_40430 = null;\n      InteractionOperand __DEC_operand_fragment_210258 = null;\n      InteractionOperand __DEC_guard_guard_196602 = null;\n      CombinedFragment __DEC_operand_operand_149946 = null;\n      Constraint __DEC_spec_specification_924823 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_17227 = null;\n      Lifeline __DEC_combo_coveredBy_17227 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_533800 = null;\n      Lifeline __DEC_messageReceive_coveredBy_533800 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_315779 = null;\n      Lifeline __DEC_messageSend_coveredBy_315779 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_921458 = null;\n      Lifeline __DEC_operand_coveredBy_921458 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_646029 = null;\n      Message __DEC_messageReceive_receiveEvent_646029 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_651944 = null;\n      Message __DEC_messageSend_receiveEvent_651944 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_411895 = null;\n      Message __DEC_messageReceive_sendEvent_411895 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_728852 = null;\n      Message __DEC_messageSend_sendEvent_728852 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_445474 = null;\n      MessageEnd __DEC_message_message_445474 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from messageSend to line\n         JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link src from line to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to messageSend\n                                 JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_45830 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_45830 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_45830 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_45830 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_45830.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_25282 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_25282 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_25282 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_25282 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_25282.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_859475 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_859475 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_859475 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_859475 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_859475.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_955507 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_955507 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_955507 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_955507 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_955507.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_425950 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_425950 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_425950 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_425950 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_425950.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_900129 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_900129 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_900129 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_900129 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_900129.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_40430 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_40430 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_40430 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_40430 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_40430.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_210258 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_210258 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_210258 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_210258 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_210258.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_196602 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_196602 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_196602 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_196602.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_196602 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_196602.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_149946 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_149946 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_149946 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_149946.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_149946 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_149946.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_924823 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_924823 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_924823 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_924823.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_924823 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_924823.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_17227\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_17227 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_17227.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_17227 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_17227.next ();\n\n                                             // check object __DEC_combo_coveredBy_17227 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_17227 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_17227 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_17227.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_533800\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_533800 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_533800.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_533800 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_533800.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_533800 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_533800 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_533800 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_533800.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_315779\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_315779 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_315779.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_315779 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_315779.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_315779 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_315779 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_315779 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_315779.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_921458\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_921458 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_921458.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_921458 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_921458.next ();\n\n                                             // check object __DEC_operand_coveredBy_921458 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_921458 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_921458 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_921458.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_646029\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_646029 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_646029.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_646029 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_646029.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_646029 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_646029 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_646029 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_646029.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_651944\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_651944 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_651944.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_651944 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_651944.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_651944 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_651944 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_651944 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_651944.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_411895\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_411895 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_411895.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_411895 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_411895.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_411895 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_411895 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_411895 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_411895.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_728852\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_728852 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_728852.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_728852 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_728852.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_728852 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_728852 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_728852 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_728852.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_445474\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_445474 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_445474.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_445474 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_445474.next ();\n\n                                             // check object __DEC_message_message_445474 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_445474 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_445474 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_445474.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_445474 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_445474.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_55(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_423372 = null;\n      InteractionOperand __DEC_combo_fragment_169797 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_118961 = null;\n      InteractionOperand __DEC_messageReceive_fragment_167971 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_646849 = null;\n      InteractionOperand __DEC_messageSend_fragment_421692 = null;\n      Interaction __DEC_operand_enclosingInteraction_689229 = null;\n      InteractionOperand __DEC_operand_fragment_212409 = null;\n      InteractionOperand __DEC_guard_guard_970776 = null;\n      CombinedFragment __DEC_operand_operand_342898 = null;\n      Constraint __DEC_spec_specification_335826 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_486025 = null;\n      Lifeline __DEC_combo_coveredBy_486025 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_604482 = null;\n      Lifeline __DEC_messageReceive_coveredBy_604482 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_880427 = null;\n      Lifeline __DEC_messageSend_coveredBy_880427 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_974282 = null;\n      Lifeline __DEC_operand_coveredBy_974282 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_484177 = null;\n      Message __DEC_messageReceive_receiveEvent_484177 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_971523 = null;\n      Message __DEC_messageSend_receiveEvent_971523 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_914335 = null;\n      Message __DEC_messageReceive_sendEvent_914335 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_863754 = null;\n      Message __DEC_messageSend_sendEvent_863754 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_299364 = null;\n      MessageEnd __DEC_message_message_299364 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageReceiveToLine = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageReceive to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageReceiveToLine = new ArrayList(messageReceive.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageReceiveToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageReceiveToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_423372 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_423372 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_423372 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_423372 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_423372.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_169797 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_169797 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_169797 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_169797 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_169797.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_118961 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_118961 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_118961 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_118961 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_118961.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_167971 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_167971 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_167971 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_167971 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_167971.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_646849 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_646849 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_646849 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_646849 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_646849.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_421692 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_421692 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_421692 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_421692 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_421692.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_689229 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_689229 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_689229 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_689229 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_689229.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_212409 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_212409 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_212409 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_212409 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_212409.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_970776 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_970776 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_970776 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_970776.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_970776 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_970776.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_342898 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_342898 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_342898 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_342898.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_342898 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_342898.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_335826 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_335826 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_335826 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_335826.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_335826 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_335826.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_486025\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_486025 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_486025.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_486025 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_486025.next ();\n\n                                             // check object __DEC_combo_coveredBy_486025 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_486025 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_486025 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_486025.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_604482\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_604482 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_604482.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_604482 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_604482.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_604482 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_604482 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_604482 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_604482.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_880427\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_880427 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_880427.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_880427 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_880427.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_880427 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_880427 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_880427 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_880427.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_974282\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_974282 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_974282.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_974282 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_974282.next ();\n\n                                             // check object __DEC_operand_coveredBy_974282 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_974282 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_974282 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_974282.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_484177\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_484177 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_484177.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_484177 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_484177.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_484177 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_484177 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_484177 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_484177.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_971523\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_971523 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_971523.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_971523 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_971523.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_971523 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_971523 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_971523 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_971523.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_914335\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_914335 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_914335.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_914335 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_914335.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_914335 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_914335 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_914335 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_914335.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_863754\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_863754 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_863754.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_863754 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_863754.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_863754 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_863754 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_863754 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_863754.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_299364\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_299364 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_299364.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_299364 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_299364.next ();\n\n                                             // check object __DEC_message_message_299364 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_299364 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_299364 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_299364.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_299364 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_299364.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_56(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_483756 = null;\n      InteractionOperand __DEC_combo_fragment_478928 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_464200 = null;\n      InteractionOperand __DEC_messageReceive_fragment_979689 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_483829 = null;\n      InteractionOperand __DEC_messageSend_fragment_131453 = null;\n      Interaction __DEC_operand_enclosingInteraction_138350 = null;\n      InteractionOperand __DEC_operand_fragment_13102 = null;\n      InteractionOperand __DEC_guard_guard_421315 = null;\n      CombinedFragment __DEC_operand_operand_613084 = null;\n      Constraint __DEC_spec_specification_918330 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_692592 = null;\n      Lifeline __DEC_combo_coveredBy_692592 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_762822 = null;\n      Lifeline __DEC_messageReceive_coveredBy_762822 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_791673 = null;\n      Lifeline __DEC_messageSend_coveredBy_791673 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_946976 = null;\n      Lifeline __DEC_operand_coveredBy_946976 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_787934 = null;\n      Message __DEC_messageReceive_receiveEvent_787934 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_290376 = null;\n      Message __DEC_messageSend_receiveEvent_290376 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_108145 = null;\n      Message __DEC_messageReceive_sendEvent_108145 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_267286 = null;\n      Message __DEC_messageSend_sendEvent_267286 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_131570 = null;\n      MessageEnd __DEC_message_message_131570 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link covered from messageReceive to line\n         JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_483756 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_483756 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_483756 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_483756 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_483756.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_478928 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_478928 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_478928 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_478928 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_478928.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_464200 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_464200 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_464200 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_464200 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_464200.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_979689 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_979689 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_979689 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_979689 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_979689.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_483829 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_483829 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_483829 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_483829 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_483829.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_131453 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_131453 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_131453 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_131453 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_131453.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_138350 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_138350 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_138350 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_138350 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_138350.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_13102 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_13102 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_13102 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_13102 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_13102.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_421315 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_421315 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_421315 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_421315.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_421315 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_421315.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_613084 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_613084 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_613084 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_613084.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_613084 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_613084.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_918330 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_918330 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_918330 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_918330.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_918330 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_918330.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from combo to __DEC_combo_coveredBy_692592\n                                 fujaba__Success = false;\n\n                                 fujaba__IterComboTo__DEC_combo_coveredBy_692592 = new ArrayList(combo.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_692592.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_combo_coveredBy_692592 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_692592.next ();\n\n                                       // check object __DEC_combo_coveredBy_692592 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_coveredBy_692592 != null );\n                                       // check isomorphic binding between objects __DEC_combo_coveredBy_692592 and line \n                                       JavaSDM.ensure ( !__DEC_combo_coveredBy_692592.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_762822\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_762822 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_762822.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_coveredBy_762822 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_762822.next ();\n\n                                       // check object __DEC_messageReceive_coveredBy_762822 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_coveredBy_762822 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_coveredBy_762822 and line \n                                       JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_762822.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_791673\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_791673 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_791673.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_coveredBy_791673 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_791673.next ();\n\n                                       // check object __DEC_messageSend_coveredBy_791673 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_coveredBy_791673 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_coveredBy_791673 and line \n                                       JavaSDM.ensure ( !__DEC_messageSend_coveredBy_791673.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link covered from operand to __DEC_operand_coveredBy_946976\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOperandTo__DEC_operand_coveredBy_946976 = new ArrayList(operand.getCovered()).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_946976.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_operand_coveredBy_946976 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_946976.next ();\n\n                                       // check object __DEC_operand_coveredBy_946976 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_coveredBy_946976 != null );\n                                       // check isomorphic binding between objects __DEC_operand_coveredBy_946976 and line \n                                       JavaSDM.ensure ( !__DEC_operand_coveredBy_946976.equals (line) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_787934\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_787934 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_787934.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_787934 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_787934.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_787934 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_787934 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_787934 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_787934.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_290376\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_290376 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_290376.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_290376 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_290376.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_290376 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_290376 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_290376 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_290376.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_108145\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_108145 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_108145.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_108145 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_108145.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_108145 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_108145 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_108145 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_108145.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_267286\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_267286 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_267286.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_267286 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_267286.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_267286 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_267286 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_267286 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_267286.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_131570\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_131570 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_131570.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_131570 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_131570.next ();\n\n                                       // check object __DEC_message_message_131570 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_131570 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_131570 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_131570.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_131570 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_131570.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from messageReceive to line\n                              JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from line to operand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_57(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_79783 = null;\n      InteractionOperand __DEC_combo_fragment_377847 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_340627 = null;\n      InteractionOperand __DEC_messageReceive_fragment_894955 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_579391 = null;\n      InteractionOperand __DEC_messageSend_fragment_423517 = null;\n      Interaction __DEC_operand_enclosingInteraction_860954 = null;\n      InteractionOperand __DEC_operand_fragment_255794 = null;\n      InteractionOperand __DEC_guard_guard_305904 = null;\n      CombinedFragment __DEC_operand_operand_35092 = null;\n      Constraint __DEC_spec_specification_511374 = null;\n      Iterator fujaba__IterComboTo__DEC_combo_coveredBy_736429 = null;\n      Lifeline __DEC_combo_coveredBy_736429 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_636857 = null;\n      Lifeline __DEC_messageReceive_coveredBy_636857 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_713621 = null;\n      Lifeline __DEC_messageSend_coveredBy_713621 = null;\n      Iterator fujaba__IterOperandTo__DEC_operand_coveredBy_225785 = null;\n      Lifeline __DEC_operand_coveredBy_225785 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_299594 = null;\n      Message __DEC_messageReceive_receiveEvent_299594 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_119235 = null;\n      Message __DEC_messageSend_receiveEvent_119235 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_442451 = null;\n      Message __DEC_messageReceive_sendEvent_442451 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_284867 = null;\n      Message __DEC_messageSend_sendEvent_284867 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_95401 = null;\n      MessageEnd __DEC_message_message_95401 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // check link covered from messageReceive to line\n         JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link src from line to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_79783 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_79783 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_79783 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_79783 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_79783.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_377847 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_377847 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_377847 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_377847 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_377847.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_340627 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_340627 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_340627 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_340627 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_340627.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_894955 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_894955 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_894955 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_894955 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_894955.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_579391 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_579391 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_579391 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_579391 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_579391.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_423517 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_423517 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_423517 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_423517 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_423517.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_860954 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_860954 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_860954 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_860954 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_860954.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_255794 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_255794 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_255794 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_255794 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_255794.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_305904 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_305904 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_305904 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_305904.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_305904 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_305904.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_35092 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_35092 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_35092 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_35092.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_35092 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_35092.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_511374 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_511374 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_511374 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_511374.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_511374 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_511374.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from combo to __DEC_combo_coveredBy_736429\n                                       fujaba__Success = false;\n\n                                       fujaba__IterComboTo__DEC_combo_coveredBy_736429 = new ArrayList(combo.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterComboTo__DEC_combo_coveredBy_736429.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_combo_coveredBy_736429 = (Lifeline) fujaba__IterComboTo__DEC_combo_coveredBy_736429.next ();\n\n                                             // check object __DEC_combo_coveredBy_736429 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_coveredBy_736429 != null );\n                                             // check isomorphic binding between objects __DEC_combo_coveredBy_736429 and line \n                                             JavaSDM.ensure ( !__DEC_combo_coveredBy_736429.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageReceive to __DEC_messageReceive_coveredBy_636857\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_636857 = new ArrayList(messageReceive.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_636857.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_coveredBy_636857 = (Lifeline) fujaba__IterMessageReceiveTo__DEC_messageReceive_coveredBy_636857.next ();\n\n                                             // check object __DEC_messageReceive_coveredBy_636857 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_coveredBy_636857 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_coveredBy_636857 and line \n                                             JavaSDM.ensure ( !__DEC_messageReceive_coveredBy_636857.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from messageSend to __DEC_messageSend_coveredBy_713621\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_713621 = new ArrayList(messageSend.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_713621.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_coveredBy_713621 = (Lifeline) fujaba__IterMessageSendTo__DEC_messageSend_coveredBy_713621.next ();\n\n                                             // check object __DEC_messageSend_coveredBy_713621 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_coveredBy_713621 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_coveredBy_713621 and line \n                                             JavaSDM.ensure ( !__DEC_messageSend_coveredBy_713621.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link covered from operand to __DEC_operand_coveredBy_225785\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo__DEC_operand_coveredBy_225785 = new ArrayList(operand.getCovered()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOperandTo__DEC_operand_coveredBy_225785.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_operand_coveredBy_225785 = (Lifeline) fujaba__IterOperandTo__DEC_operand_coveredBy_225785.next ();\n\n                                             // check object __DEC_operand_coveredBy_225785 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_coveredBy_225785 != null );\n                                             // check isomorphic binding between objects __DEC_operand_coveredBy_225785 and line \n                                             JavaSDM.ensure ( !__DEC_operand_coveredBy_225785.equals (line) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_299594\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_299594 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_299594.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_299594 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_299594.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_299594 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_299594 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_299594 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_299594.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_119235\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_119235 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_119235.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_119235 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_119235.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_119235 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_119235 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_119235 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_119235.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_442451\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_442451 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_442451.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_442451 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_442451.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_442451 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_442451 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_442451 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_442451.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_284867\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_284867 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_284867.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_284867 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_284867.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_284867 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_284867 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_284867 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_284867.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_95401\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_95401 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_95401.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_95401 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_95401.next ();\n\n                                             // check object __DEC_message_message_95401 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_95401 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_95401 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_95401.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_95401 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_95401.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from messageReceive to line\n                                    JavaSDM.ensure (messageReceive.getCovered ().contains (line));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,combo,operand,guard,spec,line,message,interaction,messageSend,messageReceive);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_58(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n      LiteralString spec = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterUseCaseToFlow = null;\n      Flow flow = null;\n      Interaction interaction = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterUseCaseToInteractionListToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterRuleEntryContainerToUseCaseToInteractionList = null;\n      RuleEntryList useCaseToInteractionList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to useCaseToInteractionList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToUseCaseToInteractionList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToUseCaseToInteractionList.hasNext () )\n         {\n            try\n            {\n               useCaseToInteractionList = (RuleEntryList) fujaba__IterRuleEntryContainerToUseCaseToInteractionList.next ();\n\n               // check object useCaseToInteractionList is really bound\n               JavaSDM.ensure ( useCaseToInteractionList != null );\n               // iterate to-many link entryObjects from useCaseToInteractionList to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterUseCaseToInteractionListToUseCaseToInteraction = new ArrayList(useCaseToInteractionList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterUseCaseToInteractionListToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterUseCaseToInteractionListToUseCaseToInteraction.next ();\n\n                     // ensure correct type and really bound of object useCaseToInteraction\n                     JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n                     useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n                     // bind object\n                     useCase = useCaseToInteraction.getSource ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n\n                     // bind object\n                     interaction = useCaseToInteraction.getTarget ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // iterate to-many link flows from useCase to flow\n                     fujaba__Success = false;\n\n                     fujaba__IterUseCaseToFlow = new ArrayList(useCase.getFlows()).iterator ();\n\n                     while ( fujaba__IterUseCaseToFlow.hasNext () )\n                     {\n                        try\n                        {\n                           flow = (Flow) fujaba__IterUseCaseToFlow.next ();\n\n                           // check object flow is really bound\n                           JavaSDM.ensure ( flow != null );\n                           // iterate to-many link lifeline from interaction to line\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                           while ( fujaba__IterInteractionToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // iterate to-many link target from line to actorToLine\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n                                 while ( fujaba__IterLineToActorToLine.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n                                       // check object actorToLine is really bound\n                                       JavaSDM.ensure ( actorToLine != null );\n                                       // bind object\n                                       actor = actorToLine.getSource ();\n\n                                       // check object actor is really bound\n                                       JavaSDM.ensure ( actor != null );\n\n                                       // story node \'solve CSP\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,step,alt,combo,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,line,useCase,useCaseToInteraction,flow,message,interaction,stepToMessage,messageSend,messageReceive,actor,actorToLine,ruleResult));\n\n                                          // ensure correct type and really bound of object csp\n                                          JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                          csp = (CSP) _TmpObject;\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n                                       // statement node \'check CSP\'\n                                       fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'perform\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object actor is really bound\n                                             JavaSDM.ensure ( actor != null );\n                                             // check object actorToLine is really bound\n                                             JavaSDM.ensure ( actorToLine != null );\n                                             // check object flow is really bound\n                                             JavaSDM.ensure ( flow != null );\n                                             // check object interaction is really bound\n                                             JavaSDM.ensure ( interaction != null );\n                                             // check object line is really bound\n                                             JavaSDM.ensure ( line != null );\n                                             // check object ruleResult is really bound\n                                             JavaSDM.ensure ( ruleResult != null );\n                                             // check object useCase is really bound\n                                             JavaSDM.ensure ( useCase != null );\n                                             // check object useCaseToInteraction is really bound\n                                             JavaSDM.ensure ( useCaseToInteraction != null );\n                                             // create object step\n                                             step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n                                             // create object alt\n                                             alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n                                             // create object stepToMessage\n                                             stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n                                             // create object stepToCombo\n                                             stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n                                             // create object altFlow\n                                             altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n                                             // create object alternative1ToOperand\n                                             alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n                                             // create object combo\n                                             combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n                                             // create object operand\n                                             operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n                                             // create object guard\n                                             guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n                                             // create object spec\n                                             spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n                                             // create object messageReceive\n                                             messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n                                             // create object messageSend\n                                             messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n                                             // create object message\n                                             message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n                                             // assign attribute step\n                                             step.setName ((java.lang.String)csp.getAttributeVariable(\"step\",\"name\").getValue());\n                                             // assign attribute alt\n                                             alt.setCondition ((java.lang.String)csp.getAttributeVariable(\"alt\",\"condition\").getValue());\n                                             // assign attribute combo\n                                             combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getAttributeVariable(\"combo\",\"interactionOperator\").getValue());\n                                             // assign attribute guard\n                                             guard.setName ((java.lang.String)csp.getAttributeVariable(\"guard\",\"name\").getValue());\n                                             // assign attribute spec\n                                             spec.setValue ((java.lang.String)csp.getAttributeVariable(\"spec\",\"value\").getValue());\n                                             // assign attribute altFlow\n                                             altFlow.setName ((java.lang.String)csp.getAttributeVariable(\"altFlow\",\"name\").getValue());\n                                             // assign attribute message\n                                             message.setName ((java.lang.String)csp.getAttributeVariable(\"message\",\"name\").getValue());\n                                             // assign attribute ruleResult\n                                             ruleResult.setSuccess (true);\n\n                                             // create link\n                                             \tstep.getStepAlternative().add(alt); // add link\n\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(step,actor,\"actor\");\n\n                                             // create link\n                                             stepToMessage.setSource( step);\n\n\n                                             // create link\n                                             ruleResult.getSourceObjects().add(step);\n\n\n                                             // create link\n                                             stepToCombo.setSource( step);\n\n\n                                             // create link\n                                             flow.getSteps().add(step);\n\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n                                             // create link\n                                             alternative1ToOperand.setSource( alt);\n\n\n                                             // create link\n                                             ruleResult.getSourceObjects().add(alt);\n\n\n                                             // create link\n                                             \tcombo.getOperand().add(operand); // add link\n\n\n                                             // create link\n                                             line.getCoveredBy().add(combo);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(combo);\n\n\n                                             // create link\n                                             stepToCombo.setTarget( combo);\n\n\n                                             // create link\n                                             ruleResult.getCorrObjects().add(stepToCombo);\n\n\n                                             // create link\n                                             \toperand.setGuard(guard); // add link to one\n\n\n                                             // create link\n                                             line.getCoveredBy().add(operand);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(operand);\n\n\n                                             // create link\n                                             alternative1ToOperand.setTarget( operand);\n\n\n                                             // create link\n                                             ruleResult.getCorrObjects().add(alternative1ToOperand);\n\n\n                                             // create link\n                                             \tguard.setSpecification(spec); // add link to one\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(guard);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(spec);\n\n\n                                             // create link\n                                             ruleResult.getSourceObjects().add(altFlow);\n\n\n                                             // create link\n                                             messageReceive.getCovered().add(line);\n\n\n                                             // create link\n                                             messageSend.getCovered().add(line);\n\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(message,messageSend,\"sendEvent\");\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(message,messageReceive,\"receiveEvent\");\n\n                                             // create link\n                                             stepToMessage.setTarget( message);\n\n\n                                             // create link\n                                             messageSend.setMessage( message);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(message);\n\n\n                                             // create link\n                                             messageReceive.setMessage( message);\n\n\n                                             // create link\n                                             interaction.getMessage().add(message);\n\n\n                                             // create link\n                                             ruleResult.getCorrObjects().add(stepToMessage);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(messageSend);\n\n\n                                             // create link\n                                             ruleResult.getTargetObjects().add(messageReceive);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          return ruleResult;\n\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			UseCaseToInteraction useCaseToInteractionDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			NormalStep step, AlternativeFlowAlternative alt,
			CombinedFragment combo, NormalStepToCombinedFragment stepToCombo,
			InteractionOperand operand,
			StepAlternativeToInteractionOperand alternative1ToOperand,
			InteractionConstraint guard, LiteralString spec,
			AlternativeFlow altFlow, Lifeline line, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Flow flow,
			Message message, Interaction interaction,
			NormalStepToMessage stepToMessage,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Actor actor,
			ActorToLifeline actorToLine, ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // StepToCombinedFragmentRule
