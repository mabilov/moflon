/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackage;
import BpmnToUseCaseIntegration.DocRootToUCModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.ICEToAltFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SeqFlowToAltFlowAlt;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.Event;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.FlowNode;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;

import bpmn2.Task;
import bpmn2.UserTask;
import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Definitions To Package Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getDefinitionsToPackageRule()
 * @model
 * @generated
 */
public interface DefinitionsToPackageRule extends EObject, AbstractRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __documentRoot_definitions_definitions = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object definitions is really bound\n         JavaSDM.ensure ( definitions != null );\n         // check object documentRoot is really bound\n         JavaSDM.ensure ( documentRoot != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,definitions,documentRoot));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object definitions is really bound\n            JavaSDM.ensure ( definitions != null );\n            // check object documentRoot is really bound\n            JavaSDM.ensure ( documentRoot != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // create object __documentRoot_definitions_definitions\n            __documentRoot_definitions_definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __documentRoot_definitions_definitions\n            __documentRoot_definitions_definitions.setName (\"definitions\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__documentRoot_definitions_definitions,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,definitions,\"toBeTranslatedNodes\");\n\n            // create link\n            __documentRoot_definitions_definitions.setTrg( definitions);\n\n\n            // create link\n            __documentRoot_definitions_definitions.setSrc( documentRoot);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object definitions is really bound\n            JavaSDM.ensure ( definitions != null );\n            // check object documentRoot is really bound\n            JavaSDM.ensure ( documentRoot != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,documentRoot,\"contextNodes\");\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,definitions,documentRoot);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, Definitions definitions,
			DocumentRoot documentRoot);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Definitions definitions = null;\n      DocumentRoot documentRoot = null;\n      DocRootToUCModel documentRootToUseCasesModel = null;\n      UseCasesModel useCasesModel = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      DefinitionsToPackage definitionsToPackage = null;\n      PackageDeclaration packageDeclaration = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge definitionsToPackage__target__packageDeclaration = null;\n      EMoflonEdge definitionsToPackage__source__definitions = null;\n      EMoflonEdge useCasesModel__packages__packageDeclaration = null;\n      EMoflonEdge __documentRoot_definitions_definitions = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"definitions\"));\n\n         // ensure correct type and really bound of object definitions\n         JavaSDM.ensure ( _TmpObject instanceof Definitions );\n         definitions = (Definitions) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"documentRoot\"));\n\n         // ensure correct type and really bound of object documentRoot\n         JavaSDM.ensure ( _TmpObject instanceof DocumentRoot );\n         documentRoot = (DocumentRoot) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"documentRootToUseCasesModel\"));\n\n         // ensure correct type and really bound of object documentRootToUseCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof DocRootToUCModel );\n         documentRootToUseCasesModel = (DocRootToUCModel) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCasesModel\"));\n\n         // ensure correct type and really bound of object useCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof UseCasesModel );\n         useCasesModel = (UseCasesModel) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object definitionsToPackage\n         definitionsToPackage = BpmnToUseCaseIntegrationFactory.eINSTANCE.createDefinitionsToPackage();\n\n         // create object packageDeclaration\n         packageDeclaration = UseCaseDSLFactory.eINSTANCE.createPackageDeclaration();\n\n         // assign attribute packageDeclaration\n         packageDeclaration.setName ((java.lang.String)csp.getAttributeVariable(\"packageDeclaration\",\"name\").getValue());\n\n         // create link\n         definitionsToPackage.setSource( definitions);\n\n\n         // create link\n         useCasesModel.getPackages().add(packageDeclaration);\n\n\n         // create link\n         definitionsToPackage.setTarget( packageDeclaration);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object definitions is really bound\n         JavaSDM.ensure ( definitions != null );\n         // check object definitionsToPackage is really bound\n         JavaSDM.ensure ( definitionsToPackage != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitions,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,packageDeclaration,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object definitions is really bound\n         JavaSDM.ensure ( definitions != null );\n         // check object definitionsToPackage is really bound\n         JavaSDM.ensure ( definitionsToPackage != null );\n         // check object documentRoot is really bound\n         JavaSDM.ensure ( documentRoot != null );\n         // check object documentRootToUseCasesModel is really bound\n         JavaSDM.ensure ( documentRootToUseCasesModel != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object useCasesModel is really bound\n         JavaSDM.ensure ( useCasesModel != null );\n         // check isomorphic binding between objects definitionsToPackage and definitions \n         JavaSDM.ensure ( !definitionsToPackage.equals (definitions) );\n\n         // check isomorphic binding between objects documentRoot and definitions \n         JavaSDM.ensure ( !documentRoot.equals (definitions) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and definitions \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (definitions) );\n\n         // check isomorphic binding between objects packageDeclaration and definitions \n         JavaSDM.ensure ( !packageDeclaration.equals (definitions) );\n\n         // check isomorphic binding between objects useCasesModel and definitions \n         JavaSDM.ensure ( !useCasesModel.equals (definitions) );\n\n         // check isomorphic binding between objects documentRoot and definitionsToPackage \n         JavaSDM.ensure ( !documentRoot.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and definitionsToPackage \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects packageDeclaration and definitionsToPackage \n         JavaSDM.ensure ( !packageDeclaration.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects useCasesModel and definitionsToPackage \n         JavaSDM.ensure ( !useCasesModel.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and documentRoot \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (documentRoot) );\n\n         // check isomorphic binding between objects packageDeclaration and documentRoot \n         JavaSDM.ensure ( !packageDeclaration.equals (documentRoot) );\n\n         // check isomorphic binding between objects useCasesModel and documentRoot \n         JavaSDM.ensure ( !useCasesModel.equals (documentRoot) );\n\n         // check isomorphic binding between objects packageDeclaration and documentRootToUseCasesModel \n         JavaSDM.ensure ( !packageDeclaration.equals (documentRootToUseCasesModel) );\n\n         // check isomorphic binding between objects useCasesModel and documentRootToUseCasesModel \n         JavaSDM.ensure ( !useCasesModel.equals (documentRootToUseCasesModel) );\n\n         // check isomorphic binding between objects useCasesModel and packageDeclaration \n         JavaSDM.ensure ( !useCasesModel.equals (packageDeclaration) );\n\n         // create object definitionsToPackage__target__packageDeclaration\n         definitionsToPackage__target__packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object definitionsToPackage__source__definitions\n         definitionsToPackage__source__definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object useCasesModel__packages__packageDeclaration\n         useCasesModel__packages__packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __documentRoot_definitions_definitions\n         __documentRoot_definitions_definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"DefinitionsToPackageRule\");\n         // assign attribute definitionsToPackage__source__definitions\n         definitionsToPackage__source__definitions.setName (\"source\");\n         // assign attribute definitionsToPackage__target__packageDeclaration\n         definitionsToPackage__target__packageDeclaration.setName (\"target\");\n         // assign attribute __documentRoot_definitions_definitions\n         __documentRoot_definitions_definitions.setName (\"definitions\");\n         // assign attribute useCasesModel__packages__packageDeclaration\n         useCasesModel__packages__packageDeclaration.setName (\"packages\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage__target__packageDeclaration,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage__source__definitions,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,useCasesModel__packages__packageDeclaration,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__documentRoot_definitions_definitions,\"translatedEdges\");\n\n         // create link\n         definitionsToPackage__source__definitions.setTrg( definitions);\n\n\n         // create link\n         __documentRoot_definitions_definitions.setTrg( definitions);\n\n\n         // create link\n         definitionsToPackage__target__packageDeclaration.setTrg( packageDeclaration);\n\n\n         // create link\n         useCasesModel__packages__packageDeclaration.setTrg( packageDeclaration);\n\n\n         // create link\n         definitionsToPackage__source__definitions.setSrc( definitionsToPackage);\n\n\n         // create link\n         definitionsToPackage__target__packageDeclaration.setSrc( definitionsToPackage);\n\n\n         // create link\n         __documentRoot_definitions_definitions.setSrc( documentRoot);\n\n\n         // create link\n         useCasesModel__packages__packageDeclaration.setSrc( useCasesModel);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,definitions,packageDeclaration,definitionsToPackage,documentRoot,useCasesModel,documentRootToUseCasesModel);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Definitions definitions = null;\n      DocumentRoot documentRoot = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __documentRoot_definitions_definitions = null;\n      EMoflonEdge __documentRootToUseCasesModel_source_documentRoot = null;\n      EMoflonEdge __documentRootToUseCasesModel_target_useCasesModel = null;\n      CSP csp = null;\n      UseCasesModel useCasesModel = null;\n      Iterator fujaba__IterDocumentRootToDocumentRootToUseCasesModel = null;\n      DocRootToUCModel documentRootToUseCasesModel = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"DefinitionsToPackageRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"definitions\"));\n\n         // ensure correct type and really bound of object definitions\n         JavaSDM.ensure ( _TmpObject instanceof Definitions );\n         definitions = (Definitions) _TmpObject;\n         _TmpObject = (match.getObject(\"documentRoot\"));\n\n         // ensure correct type and really bound of object documentRoot\n         JavaSDM.ensure ( _TmpObject instanceof DocumentRoot );\n         documentRoot = (DocumentRoot) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // iterate to-many link source from documentRoot to documentRootToUseCasesModel\n         fujaba__Success = false;\n\n         fujaba__IterDocumentRootToDocumentRootToUseCasesModel = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(documentRoot,DocRootToUCModel.class,\"source\")).iterator ();\n\n         while ( fujaba__IterDocumentRootToDocumentRootToUseCasesModel.hasNext () )\n         {\n            try\n            {\n               documentRootToUseCasesModel = (DocRootToUCModel) fujaba__IterDocumentRootToDocumentRootToUseCasesModel.next ();\n\n               // check object documentRootToUseCasesModel is really bound\n               JavaSDM.ensure ( documentRootToUseCasesModel != null );\n               // bind object\n               useCasesModel = documentRootToUseCasesModel.getTarget ();\n\n               // check object useCasesModel is really bound\n               JavaSDM.ensure ( useCasesModel != null );\n\n               // story node \'find context\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check object definitions is really bound\n                  JavaSDM.ensure ( definitions != null );\n                  // check object documentRoot is really bound\n                  JavaSDM.ensure ( documentRoot != null );\n                  // check object documentRootToUseCasesModel is really bound\n                  JavaSDM.ensure ( documentRootToUseCasesModel != null );\n                  // check object useCasesModel is really bound\n                  JavaSDM.ensure ( useCasesModel != null );\n                  // check link definitions from definitions to documentRoot\n                  JavaSDM.ensure (documentRoot.equals (definitions.eContainer()\n                  ));\n\n                  // check link source from documentRootToUseCasesModel to documentRoot\n                  JavaSDM.ensure (documentRoot.equals (documentRootToUseCasesModel.getSource ()\n                  ));\n\n                  // check link target from documentRootToUseCasesModel to useCasesModel\n                  JavaSDM.ensure (useCasesModel.equals (documentRootToUseCasesModel.getTarget ()\n                  ));\n\n                  // create object isApplicableMatch\n                  isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                  // create object __documentRoot_definitions_definitions\n                  __documentRoot_definitions_definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // create object __documentRootToUseCasesModel_source_documentRoot\n                  __documentRootToUseCasesModel_source_documentRoot = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // create object __documentRootToUseCasesModel_target_useCasesModel\n                  __documentRootToUseCasesModel_target_useCasesModel = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // assign attribute __documentRoot_definitions_definitions\n                  __documentRoot_definitions_definitions.setName (\"definitions\");\n                  // assign attribute __documentRootToUseCasesModel_source_documentRoot\n                  __documentRootToUseCasesModel_source_documentRoot.setName (\"source\");\n                  // assign attribute __documentRootToUseCasesModel_target_useCasesModel\n                  __documentRootToUseCasesModel_target_useCasesModel.setName (\"target\");\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(definitions);\n\n\n                  // create link\n                  __documentRoot_definitions_definitions.setTrg( definitions);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_source_documentRoot.setTrg( documentRoot);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(documentRoot);\n\n\n                  // create link\n                  __documentRoot_definitions_definitions.setSrc( documentRoot);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(useCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_target_useCasesModel.setTrg( useCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_source_documentRoot.setSrc( documentRootToUseCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_target_useCasesModel.setSrc( documentRootToUseCasesModel);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(documentRootToUseCasesModel);\n\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__documentRootToUseCasesModel_source_documentRoot,\"allContextElements\");\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__documentRoot_definitions_definitions,\"allContextElements\");\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__documentRootToUseCasesModel_target_useCasesModel,\"allContextElements\");\n                  // story node \'solve CSP\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,definitions,documentRoot,useCasesModel,documentRootToUseCasesModel));\n\n                     // ensure correct type and really bound of object csp\n                     JavaSDM.ensure ( _TmpObject instanceof CSP );\n                     csp = (CSP) _TmpObject;\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  // statement node \'check CSP\'\n                  fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                  if (fujaba__Success)\n                  {\n                     // story node \'add match to rule result\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object isApplicableMatch is really bound\n                        JavaSDM.ensure ( isApplicableMatch != null );\n                        // check object ruleresult is really bound\n                        JavaSDM.ensure ( ruleresult != null );\n                        // assign attribute ruleresult\n                        ruleresult.setSuccess (true);\n                        // assign attribute isApplicableMatch\n                        isApplicableMatch.setRuleName (\"DefinitionsToPackageRule\");\n\n                        // create link\n                        isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"definitions\", definitions);\nmatch.registerObject(\"documentRoot\", documentRoot);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, Definitions definitions,
			DocumentRoot documentRoot);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, Definitions definitions,
			DocumentRoot documentRoot);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"http://\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_definitions_targetNamespace = CSPFactoryHelper.eINSTANCE.createVariable(\"definitions.targetNamespace\", true, csp);\r\nvar_definitions_targetNamespace.setValue(definitions.getTargetNamespace());\r\nvar_definitions_targetNamespace.setType(\"String\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_packageDeclaration_name = CSPFactoryHelper.eINSTANCE.createVariable(\"packageDeclaration.name\", csp);\r\nvar_packageDeclaration_name.setType(\"String\");\r\n\r\n// Create constraints\r\nAddPrefix addPrefix = new AddPrefix();\r\n\r\ncsp.getConstraints().add(addPrefix);\r\n\r\n// Solve CSP\r\naddPrefix.setRuleName(\"\");\r\naddPrefix.solve(literal0,var_packageDeclaration_name,var_definitions_targetNamespace);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"definitions\",definitions);\r\nisApplicableMatch.registerObject(\"documentRoot\",documentRoot);\r\nisApplicableMatch.registerObject(\"useCasesModel\",useCasesModel);\r\nisApplicableMatch.registerObject(\"documentRootToUseCasesModel\",documentRootToUseCasesModel);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			Definitions definitions, DocumentRoot documentRoot,
			UseCasesModel useCasesModel,
			DocRootToUCModel documentRootToUseCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"definitions\", definitions);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"definitionsToPackage\", definitionsToPackage);\nruleresult.registerObject(\"documentRoot\", documentRoot);\nruleresult.registerObject(\"useCasesModel\", useCasesModel);\nruleresult.registerObject(\"documentRootToUseCasesModel\", documentRootToUseCasesModel);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject definitions,
			EObject packageDeclaration, EObject definitionsToPackage,
			EObject documentRoot, EObject useCasesModel,
			EObject documentRootToUseCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"definitions\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getDefinitions());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __useCasesModel_packages_packageDeclaration = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object useCasesModel is really bound\n         JavaSDM.ensure ( useCasesModel != null );\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,packageDeclaration,useCasesModel));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object useCasesModel is really bound\n            JavaSDM.ensure ( useCasesModel != null );\n            // create object __useCasesModel_packages_packageDeclaration\n            __useCasesModel_packages_packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCasesModel_packages_packageDeclaration\n            __useCasesModel_packages_packageDeclaration.setName (\"packages\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCasesModel_packages_packageDeclaration,\"toBeTranslatedEdges\");\n\n            // create link\n            __useCasesModel_packages_packageDeclaration.setTrg( packageDeclaration);\n\n\n            // create link\n            __useCasesModel_packages_packageDeclaration.setSrc( useCasesModel);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object useCasesModel is really bound\n            JavaSDM.ensure ( useCasesModel != null );\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCasesModel,\"contextNodes\");\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,packageDeclaration,useCasesModel);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match,
			PackageDeclaration packageDeclaration, UseCasesModel useCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      DocumentRoot documentRoot = null;\n      DocRootToUCModel documentRootToUseCasesModel = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCasesModel useCasesModel = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      Definitions definitions = null;\n      DefinitionsToPackage definitionsToPackage = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge definitionsToPackage__target__packageDeclaration = null;\n      EMoflonEdge documentRoot__definitions__definitions = null;\n      EMoflonEdge definitionsToPackage__source__definitions = null;\n      EMoflonEdge __useCasesModel_packages_packageDeclaration = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"documentRoot\"));\n\n         // ensure correct type and really bound of object documentRoot\n         JavaSDM.ensure ( _TmpObject instanceof DocumentRoot );\n         documentRoot = (DocumentRoot) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"documentRootToUseCasesModel\"));\n\n         // ensure correct type and really bound of object documentRootToUseCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof DocRootToUCModel );\n         documentRootToUseCasesModel = (DocRootToUCModel) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCasesModel\"));\n\n         // ensure correct type and really bound of object useCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof UseCasesModel );\n         useCasesModel = (UseCasesModel) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object definitions\n         definitions = Bpmn2Factory.eINSTANCE.createDefinitions();\n\n         // create object definitionsToPackage\n         definitionsToPackage = BpmnToUseCaseIntegrationFactory.eINSTANCE.createDefinitionsToPackage();\n\n         // assign attribute definitions\n         definitions.setTargetNamespace ((java.lang.String)csp.getAttributeVariable(\"definitions\",\"targetNamespace\").getValue());\n\n         // create link\n         definitionsToPackage.setTarget( packageDeclaration);\n\n\n         // create link\n         documentRoot.getDefinitions().add(definitions);\n\n\n         // create link\n         definitionsToPackage.setSource( definitions);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object definitions is really bound\n         JavaSDM.ensure ( definitions != null );\n         // check object definitionsToPackage is really bound\n         JavaSDM.ensure ( definitionsToPackage != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitions,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,packageDeclaration,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object definitions is really bound\n         JavaSDM.ensure ( definitions != null );\n         // check object definitionsToPackage is really bound\n         JavaSDM.ensure ( definitionsToPackage != null );\n         // check object documentRoot is really bound\n         JavaSDM.ensure ( documentRoot != null );\n         // check object documentRootToUseCasesModel is really bound\n         JavaSDM.ensure ( documentRootToUseCasesModel != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object useCasesModel is really bound\n         JavaSDM.ensure ( useCasesModel != null );\n         // check isomorphic binding between objects definitionsToPackage and definitions \n         JavaSDM.ensure ( !definitionsToPackage.equals (definitions) );\n\n         // check isomorphic binding between objects documentRoot and definitions \n         JavaSDM.ensure ( !documentRoot.equals (definitions) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and definitions \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (definitions) );\n\n         // check isomorphic binding between objects packageDeclaration and definitions \n         JavaSDM.ensure ( !packageDeclaration.equals (definitions) );\n\n         // check isomorphic binding between objects useCasesModel and definitions \n         JavaSDM.ensure ( !useCasesModel.equals (definitions) );\n\n         // check isomorphic binding between objects documentRoot and definitionsToPackage \n         JavaSDM.ensure ( !documentRoot.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and definitionsToPackage \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects packageDeclaration and definitionsToPackage \n         JavaSDM.ensure ( !packageDeclaration.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects useCasesModel and definitionsToPackage \n         JavaSDM.ensure ( !useCasesModel.equals (definitionsToPackage) );\n\n         // check isomorphic binding between objects documentRootToUseCasesModel and documentRoot \n         JavaSDM.ensure ( !documentRootToUseCasesModel.equals (documentRoot) );\n\n         // check isomorphic binding between objects packageDeclaration and documentRoot \n         JavaSDM.ensure ( !packageDeclaration.equals (documentRoot) );\n\n         // check isomorphic binding between objects useCasesModel and documentRoot \n         JavaSDM.ensure ( !useCasesModel.equals (documentRoot) );\n\n         // check isomorphic binding between objects packageDeclaration and documentRootToUseCasesModel \n         JavaSDM.ensure ( !packageDeclaration.equals (documentRootToUseCasesModel) );\n\n         // check isomorphic binding between objects useCasesModel and documentRootToUseCasesModel \n         JavaSDM.ensure ( !useCasesModel.equals (documentRootToUseCasesModel) );\n\n         // check isomorphic binding between objects useCasesModel and packageDeclaration \n         JavaSDM.ensure ( !useCasesModel.equals (packageDeclaration) );\n\n         // create object definitionsToPackage__target__packageDeclaration\n         definitionsToPackage__target__packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object documentRoot__definitions__definitions\n         documentRoot__definitions__definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object definitionsToPackage__source__definitions\n         definitionsToPackage__source__definitions = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __useCasesModel_packages_packageDeclaration\n         __useCasesModel_packages_packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"DefinitionsToPackageRule\");\n         // assign attribute definitionsToPackage__source__definitions\n         definitionsToPackage__source__definitions.setName (\"source\");\n         // assign attribute definitionsToPackage__target__packageDeclaration\n         definitionsToPackage__target__packageDeclaration.setName (\"target\");\n         // assign attribute documentRoot__definitions__definitions\n         documentRoot__definitions__definitions.setName (\"definitions\");\n         // assign attribute __useCasesModel_packages_packageDeclaration\n         __useCasesModel_packages_packageDeclaration.setName (\"packages\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage__target__packageDeclaration,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,documentRoot__definitions__definitions,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,definitionsToPackage__source__definitions,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__useCasesModel_packages_packageDeclaration,\"translatedEdges\");\n\n         // create link\n         definitionsToPackage__source__definitions.setTrg( definitions);\n\n\n         // create link\n         documentRoot__definitions__definitions.setTrg( definitions);\n\n\n         // create link\n         __useCasesModel_packages_packageDeclaration.setTrg( packageDeclaration);\n\n\n         // create link\n         definitionsToPackage__target__packageDeclaration.setTrg( packageDeclaration);\n\n\n         // create link\n         definitionsToPackage__source__definitions.setSrc( definitionsToPackage);\n\n\n         // create link\n         definitionsToPackage__target__packageDeclaration.setSrc( definitionsToPackage);\n\n\n         // create link\n         documentRoot__definitions__definitions.setSrc( documentRoot);\n\n\n         // create link\n         __useCasesModel_packages_packageDeclaration.setSrc( useCasesModel);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,definitions,packageDeclaration,definitionsToPackage,documentRoot,useCasesModel,documentRootToUseCasesModel);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCasesModel useCasesModel = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __useCasesModel_packages_packageDeclaration = null;\n      EMoflonEdge __documentRootToUseCasesModel_source_documentRoot = null;\n      EMoflonEdge __documentRootToUseCasesModel_target_useCasesModel = null;\n      CSP csp = null;\n      DocumentRoot documentRoot = null;\n      Iterator fujaba__IterUseCasesModelToDocumentRootToUseCasesModel = null;\n      DocRootToUCModel documentRootToUseCasesModel = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"DefinitionsToPackageRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"useCasesModel\"));\n\n         // ensure correct type and really bound of object useCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof UseCasesModel );\n         useCasesModel = (UseCasesModel) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // iterate to-many link target from useCasesModel to documentRootToUseCasesModel\n         fujaba__Success = false;\n\n         fujaba__IterUseCasesModelToDocumentRootToUseCasesModel = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCasesModel,DocRootToUCModel.class,\"target\")).iterator ();\n\n         while ( fujaba__IterUseCasesModelToDocumentRootToUseCasesModel.hasNext () )\n         {\n            try\n            {\n               documentRootToUseCasesModel = (DocRootToUCModel) fujaba__IterUseCasesModelToDocumentRootToUseCasesModel.next ();\n\n               // check object documentRootToUseCasesModel is really bound\n               JavaSDM.ensure ( documentRootToUseCasesModel != null );\n               // bind object\n               documentRoot = documentRootToUseCasesModel.getSource ();\n\n               // check object documentRoot is really bound\n               JavaSDM.ensure ( documentRoot != null );\n\n               // story node \'find context\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check object documentRoot is really bound\n                  JavaSDM.ensure ( documentRoot != null );\n                  // check object documentRootToUseCasesModel is really bound\n                  JavaSDM.ensure ( documentRootToUseCasesModel != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object useCasesModel is really bound\n                  JavaSDM.ensure ( useCasesModel != null );\n                  // check link packages from packageDeclaration to useCasesModel\n                  JavaSDM.ensure (useCasesModel.equals (packageDeclaration.eContainer()\n                  ));\n\n                  // check link source from documentRootToUseCasesModel to documentRoot\n                  JavaSDM.ensure (documentRoot.equals (documentRootToUseCasesModel.getSource ()\n                  ));\n\n                  // check link target from documentRootToUseCasesModel to useCasesModel\n                  JavaSDM.ensure (useCasesModel.equals (documentRootToUseCasesModel.getTarget ()\n                  ));\n\n                  // create object isApplicableMatch\n                  isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                  // create object __useCasesModel_packages_packageDeclaration\n                  __useCasesModel_packages_packageDeclaration = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // create object __documentRootToUseCasesModel_source_documentRoot\n                  __documentRootToUseCasesModel_source_documentRoot = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // create object __documentRootToUseCasesModel_target_useCasesModel\n                  __documentRootToUseCasesModel_target_useCasesModel = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                  // assign attribute __useCasesModel_packages_packageDeclaration\n                  __useCasesModel_packages_packageDeclaration.setName (\"packages\");\n                  // assign attribute __documentRootToUseCasesModel_source_documentRoot\n                  __documentRootToUseCasesModel_source_documentRoot.setName (\"source\");\n                  // assign attribute __documentRootToUseCasesModel_target_useCasesModel\n                  __documentRootToUseCasesModel_target_useCasesModel.setName (\"target\");\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                  // create link\n                  __useCasesModel_packages_packageDeclaration.setTrg( packageDeclaration);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_source_documentRoot.setTrg( documentRoot);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(documentRoot);\n\n\n                  // create link\n                  __useCasesModel_packages_packageDeclaration.setSrc( useCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_target_useCasesModel.setTrg( useCasesModel);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(useCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_source_documentRoot.setSrc( documentRootToUseCasesModel);\n\n\n                  // create link\n                  __documentRootToUseCasesModel_target_useCasesModel.setSrc( documentRootToUseCasesModel);\n\n\n                  // create link\n                  isApplicableMatch.getAllContextElements().add(documentRootToUseCasesModel);\n\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__documentRootToUseCasesModel_target_useCasesModel,\"allContextElements\");\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__documentRootToUseCasesModel_source_documentRoot,\"allContextElements\");\n\n                  // create link\n                  org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCasesModel_packages_packageDeclaration,\"allContextElements\");\n                  // story node \'solve CSP\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,packageDeclaration,documentRoot,useCasesModel,documentRootToUseCasesModel));\n\n                     // ensure correct type and really bound of object csp\n                     JavaSDM.ensure ( _TmpObject instanceof CSP );\n                     csp = (CSP) _TmpObject;\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  // statement node \'check CSP\'\n                  fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                  if (fujaba__Success)\n                  {\n                     // story node \'add match to rule result\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object isApplicableMatch is really bound\n                        JavaSDM.ensure ( isApplicableMatch != null );\n                        // check object ruleresult is really bound\n                        JavaSDM.ensure ( ruleresult != null );\n                        // assign attribute ruleresult\n                        ruleresult.setSuccess (true);\n                        // assign attribute isApplicableMatch\n                        isApplicableMatch.setRuleName (\"DefinitionsToPackageRule\");\n\n                        // create link\n                        isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"packageDeclaration\", packageDeclaration);\nmatch.registerObject(\"useCasesModel\", useCasesModel);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match,
			PackageDeclaration packageDeclaration, UseCasesModel useCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match,
			PackageDeclaration packageDeclaration, UseCasesModel useCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"http://\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_packageDeclaration_name = CSPFactoryHelper.eINSTANCE.createVariable(\"packageDeclaration.name\", true, csp);\r\nvar_packageDeclaration_name.setValue(packageDeclaration.getName());\r\nvar_packageDeclaration_name.setType(\"String\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_definitions_targetNamespace = CSPFactoryHelper.eINSTANCE.createVariable(\"definitions.targetNamespace\", csp);\r\nvar_definitions_targetNamespace.setType(\"String\");\r\n\r\n// Create constraints\r\nAddPrefix addPrefix = new AddPrefix();\r\n\r\ncsp.getConstraints().add(addPrefix);\r\n\r\n// Solve CSP\r\naddPrefix.setRuleName(\"\");\r\naddPrefix.solve(literal0,var_packageDeclaration_name,var_definitions_targetNamespace);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nisApplicableMatch.registerObject(\"documentRoot\",documentRoot);\r\nisApplicableMatch.registerObject(\"useCasesModel\",useCasesModel);\r\nisApplicableMatch.registerObject(\"documentRootToUseCasesModel\",documentRootToUseCasesModel);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			PackageDeclaration packageDeclaration, DocumentRoot documentRoot,
			UseCasesModel useCasesModel,
			DocRootToUCModel documentRootToUseCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"definitions\", definitions);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"definitionsToPackage\", definitionsToPackage);\nruleresult.registerObject(\"documentRoot\", documentRoot);\nruleresult.registerObject(\"useCasesModel\", useCasesModel);\nruleresult.registerObject(\"documentRootToUseCasesModel\", documentRootToUseCasesModel);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject definitions,
			EObject packageDeclaration, EObject definitionsToPackage,
			EObject documentRoot, EObject useCasesModel,
			EObject documentRootToUseCasesModel);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"packageDeclaration\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getPackageDeclaration());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      DocumentRoot __DEC_definitions_definitions_593074 = null;\n      Match match = null;\n      Definitions definitions = null;\n      DocumentRoot documentRoot = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_definitions is really bound\n         JavaSDM.ensure ( _edge_definitions != null );\n         // bind object\n         _TmpObject = _edge_definitions.getSrc ();\n\n         // ensure correct type and really bound of object documentRoot\n         JavaSDM.ensure ( _TmpObject instanceof DocumentRoot );\n         documentRoot = (DocumentRoot) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_definitions.getTrg ();\n\n         // ensure correct type and really bound of object definitions\n         JavaSDM.ensure ( _TmpObject instanceof Definitions );\n         definitions = (Definitions) _TmpObject;\n\n         // check link definitions from definitions to documentRoot\n         JavaSDM.ensure (documentRoot.equals (definitions.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_definitions_definitions_593074 = definitions.eContainer() instanceof DocumentRoot ? (DocumentRoot) definitions.eContainer() : null;\n\n               // check object __DEC_definitions_definitions_593074 is really bound\n               JavaSDM.ensure ( __DEC_definitions_definitions_593074 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_definitions_definitions_593074.getDefinitions().contains(definitions));\n\n               // check isomorphic binding between objects __DEC_definitions_definitions_593074 and documentRoot \n               JavaSDM.ensure ( !__DEC_definitions_definitions_593074.equals (documentRoot) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_definitions is really bound\n            JavaSDM.ensure ( _edge_definitions != null );\n            // check object definitions is really bound\n            JavaSDM.ensure ( definitions != null );\n            // check object documentRoot is really bound\n            JavaSDM.ensure ( documentRoot != null );\n            // check link definitions from definitions to documentRoot\n            JavaSDM.ensure (documentRoot.equals (definitions.eContainer()\n            ));\n\n            // check link src from _edge_definitions to documentRoot\n            JavaSDM.ensure (documentRoot.equals (_edge_definitions.getSrc ()\n            ));\n\n            // check link trg from _edge_definitions to definitions\n            JavaSDM.ensure (definitions.equals (_edge_definitions.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,definitions,documentRoot);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_0(
			EMoflonEdge _edge_definitions);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCasesModel __DEC_packageDeclaration_packages_60115 = null;\n      Match match = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCasesModel useCasesModel = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_packages is really bound\n         JavaSDM.ensure ( _edge_packages != null );\n         // bind object\n         _TmpObject = _edge_packages.getSrc ();\n\n         // ensure correct type and really bound of object useCasesModel\n         JavaSDM.ensure ( _TmpObject instanceof UseCasesModel );\n         useCasesModel = (UseCasesModel) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_packages.getTrg ();\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n\n         // check link packages from packageDeclaration to useCasesModel\n         JavaSDM.ensure (useCasesModel.equals (packageDeclaration.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_packageDeclaration_packages_60115 = packageDeclaration.eContainer() instanceof UseCasesModel ? (UseCasesModel) packageDeclaration.eContainer() : null;\n\n               // check object __DEC_packageDeclaration_packages_60115 is really bound\n               JavaSDM.ensure ( __DEC_packageDeclaration_packages_60115 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_packageDeclaration_packages_60115.getPackages().contains(packageDeclaration));\n\n               // check isomorphic binding between objects __DEC_packageDeclaration_packages_60115 and useCasesModel \n               JavaSDM.ensure ( !__DEC_packageDeclaration_packages_60115.equals (useCasesModel) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_packages is really bound\n            JavaSDM.ensure ( _edge_packages != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object useCasesModel is really bound\n            JavaSDM.ensure ( useCasesModel != null );\n            // check link packages from packageDeclaration to useCasesModel\n            JavaSDM.ensure (useCasesModel.equals (packageDeclaration.eContainer()\n            ));\n\n            // check link src from _edge_packages to useCasesModel\n            JavaSDM.ensure (useCasesModel.equals (_edge_packages.getSrc ()\n            ));\n\n            // check link trg from _edge_packages to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (_edge_packages.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_BWD(match,packageDeclaration,useCasesModel);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_BWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_0(EMoflonEdge _edge_packages);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      Definitions definitions = null;\n      DefinitionsToPackage definitionsToPackage = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCasesModel useCasesModel = null;\n      DocumentRoot documentRoot = null;\n      Iterator fujaba__IterDocumentRootToUseCasesModelListToDocumentRootToUseCasesModel = null;\n      DocRootToUCModel documentRootToUseCasesModel = null;\n      Iterator fujaba__IterRuleEntryContainerToDocumentRootToUseCasesModelList = null;\n      RuleEntryList documentRootToUseCasesModelList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to documentRootToUseCasesModelList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToDocumentRootToUseCasesModelList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToDocumentRootToUseCasesModelList.hasNext () )\n         {\n            try\n            {\n               documentRootToUseCasesModelList = (RuleEntryList) fujaba__IterRuleEntryContainerToDocumentRootToUseCasesModelList.next ();\n\n               // check object documentRootToUseCasesModelList is really bound\n               JavaSDM.ensure ( documentRootToUseCasesModelList != null );\n               // iterate to-many link entryObjects from documentRootToUseCasesModelList to documentRootToUseCasesModel\n               fujaba__Success = false;\n\n               fujaba__IterDocumentRootToUseCasesModelListToDocumentRootToUseCasesModel = new ArrayList(documentRootToUseCasesModelList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterDocumentRootToUseCasesModelListToDocumentRootToUseCasesModel.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterDocumentRootToUseCasesModelListToDocumentRootToUseCasesModel.next ();\n\n                     // ensure correct type and really bound of object documentRootToUseCasesModel\n                     JavaSDM.ensure ( _TmpObject instanceof DocRootToUCModel );\n                     documentRootToUseCasesModel = (DocRootToUCModel) _TmpObject;\n                     // bind object\n                     documentRoot = documentRootToUseCasesModel.getSource ();\n\n                     // check object documentRoot is really bound\n                     JavaSDM.ensure ( documentRoot != null );\n\n                     // bind object\n                     useCasesModel = documentRootToUseCasesModel.getTarget ();\n\n                     // check object useCasesModel is really bound\n                     JavaSDM.ensure ( useCasesModel != null );\n\n                     // story node \'solve CSP\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,definitions,packageDeclaration,definitionsToPackage,documentRoot,useCasesModel,documentRootToUseCasesModel,ruleResult));\n\n                        // ensure correct type and really bound of object csp\n                        JavaSDM.ensure ( _TmpObject instanceof CSP );\n                        csp = (CSP) _TmpObject;\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n                     // statement node \'check CSP\'\n                     fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                     if (fujaba__Success)\n                     {\n                        // story node \'perform\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object documentRoot is really bound\n                           JavaSDM.ensure ( documentRoot != null );\n                           // check object documentRootToUseCasesModel is really bound\n                           JavaSDM.ensure ( documentRootToUseCasesModel != null );\n                           // check object ruleResult is really bound\n                           JavaSDM.ensure ( ruleResult != null );\n                           // check object useCasesModel is really bound\n                           JavaSDM.ensure ( useCasesModel != null );\n                           // create object definitions\n                           definitions = Bpmn2Factory.eINSTANCE.createDefinitions();\n\n                           // create object definitionsToPackage\n                           definitionsToPackage = BpmnToUseCaseIntegrationFactory.eINSTANCE.createDefinitionsToPackage();\n\n                           // create object packageDeclaration\n                           packageDeclaration = UseCaseDSLFactory.eINSTANCE.createPackageDeclaration();\n\n                           // assign attribute definitions\n                           definitions.setTargetNamespace ((java.lang.String)csp.getAttributeVariable(\"definitions\",\"targetNamespace\").getValue());\n                           // assign attribute packageDeclaration\n                           packageDeclaration.setName ((java.lang.String)csp.getAttributeVariable(\"packageDeclaration\",\"name\").getValue());\n                           // assign attribute ruleResult\n                           ruleResult.setSuccess (true);\n\n                           // create link\n                           ruleResult.getSourceObjects().add(definitions);\n\n\n                           // create link\n                           documentRoot.getDefinitions().add(definitions);\n\n\n                           // create link\n                           definitionsToPackage.setSource( definitions);\n\n\n                           // create link\n                           useCasesModel.getPackages().add(packageDeclaration);\n\n\n                           // create link\n                           ruleResult.getTargetObjects().add(packageDeclaration);\n\n\n                           // create link\n                           definitionsToPackage.setTarget( packageDeclaration);\n\n\n                           // create link\n                           ruleResult.getCorrObjects().add(definitionsToPackage);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        return ruleResult;\n\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			DocRootToUCModel documentRootToUseCasesModelDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"http://\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_packageDeclaration_name = CSPFactoryHelper.eINSTANCE.createVariable(\"packageDeclaration.name\", csp);\r\nvar_packageDeclaration_name.setType(\"String\");\r\nVariable var_definitions_targetNamespace = CSPFactoryHelper.eINSTANCE.createVariable(\"definitions.targetNamespace\", csp);\r\nvar_definitions_targetNamespace.setType(\"String\");\r\n\r\n// Create constraints\r\nAddPrefix addPrefix = new AddPrefix();\r\n\r\ncsp.getConstraints().add(addPrefix);\r\n\r\n// Solve CSP\r\naddPrefix.setRuleName(\"\");\r\naddPrefix.solve(literal0,var_packageDeclaration_name,var_definitions_targetNamespace);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"documentRoot\",documentRoot);\r\nisApplicableMatch.registerObject(\"useCasesModel\",useCasesModel);\r\nisApplicableMatch.registerObject(\"documentRootToUseCasesModel\",documentRootToUseCasesModel);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			Definitions definitions, PackageDeclaration packageDeclaration,
			DefinitionsToPackage definitionsToPackage,
			DocumentRoot documentRoot, UseCasesModel useCasesModel,
			DocRootToUCModel documentRootToUseCasesModel,
			ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // DefinitionsToPackageRule
