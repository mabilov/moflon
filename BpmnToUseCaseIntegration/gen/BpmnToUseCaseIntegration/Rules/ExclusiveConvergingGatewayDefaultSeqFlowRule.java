/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackage;
import BpmnToUseCaseIntegration.DocRootToUCModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.ICEToAltFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SeqFlowToAltFlowAlt;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.FlowNode;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;
import bpmn2.UserTask;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Exclusive Converging Gateway Default Seq Flow Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getExclusiveConvergingGatewayDefaultSeqFlowRule()
 * @model
 * @generated
 */
public interface ExclusiveConvergingGatewayDefaultSeqFlowRule extends
		AbstractRule, ExclusiveConvergingGatewayRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __exConvGateway_incoming_defaultFlow = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __defaultFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __exclusiveGateway_outgoing_defaultFlow = null;\n      EMoflonEdge __process_flowElements_exclusiveGateway = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __process_flowElements_defaultFlow = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      EMoflonEdge __exclusiveGateway_outgoing_divergeFlow = null;\n      EMoflonEdge __exclusiveGateway_default_defaultFlow = null;\n      EMoflonEdge __defaultFlow_sourceRef_exclusiveGateway = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __divergeFlow_sourceRef_exclusiveGateway = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object defaultFlow is really bound\n         JavaSDM.ensure ( defaultFlow != null );\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object exclusiveGateway is really bound\n         JavaSDM.ensure ( exclusiveGateway != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object defaultFlow is really bound\n            JavaSDM.ensure ( defaultFlow != null );\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object exclusiveGateway is really bound\n            JavaSDM.ensure ( exclusiveGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects divergeFlow and defaultFlow \n            JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and defaultFlow \n            JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects outFlow and defaultFlow \n            JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects exclusiveGateway and exConvGateway \n            JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __exConvGateway_incoming_defaultFlow\n            __exConvGateway_incoming_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_outFlow\n            __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __defaultFlow_targetRef_exConvGateway\n            __defaultFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __defaultFlow_targetRef_exConvGateway\n            __defaultFlow_targetRef_exConvGateway.setName (\"targetRef\");\n            // assign attribute __exConvGateway_incoming_defaultFlow\n            __exConvGateway_incoming_defaultFlow.setName (\"incoming\");\n            // assign attribute __process_flowElements_outFlow\n            __process_flowElements_outFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway.setName (\"flowElements\");\n            // assign attribute __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n            // assign attribute __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow.setName (\"incoming\");\n            // assign attribute __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n            // assign attribute __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n            // assign attribute __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_incoming_defaultFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_outgoing_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__lane_flowNodeRefs_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__defaultFlow_targetRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__outFlow_sourceRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,outFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,exConvGateway,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__inFlow_targetRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_incoming_inFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            __defaultFlow_targetRef_exConvGateway.setSrc( defaultFlow);\n\n\n            // create link\n            __exConvGateway_incoming_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __defaultFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_incoming_defaultFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setSrc( process);\n\n\n            // create link\n            __process_flowElements_outFlow.setSrc( process);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n            // create link\n            __process_flowElements_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object defaultFlow is really bound\n            JavaSDM.ensure ( defaultFlow != null );\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object exclusiveGateway is really bound\n            JavaSDM.ensure ( exclusiveGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects divergeFlow and defaultFlow \n            JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and defaultFlow \n            JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects outFlow and defaultFlow \n            JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects exclusiveGateway and exConvGateway \n            JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __exclusiveGateway_outgoing_defaultFlow\n            __exclusiveGateway_outgoing_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_exclusiveGateway\n            __process_flowElements_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_defaultFlow\n            __process_flowElements_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __laneSet_lanes_lane\n            __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exclusiveGateway_outgoing_divergeFlow\n            __exclusiveGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exclusiveGateway_default_defaultFlow\n            __exclusiveGateway_default_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __defaultFlow_sourceRef_exclusiveGateway\n            __defaultFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_inFlow\n            __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __divergeFlow_sourceRef_exclusiveGateway\n            __divergeFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_laneSets_laneSet\n            __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow.setName (\"flowElements\");\n            // assign attribute __process_laneSets_laneSet\n            __process_laneSets_laneSet.setName (\"laneSets\");\n            // assign attribute __process_flowElements_exclusiveGateway\n            __process_flowElements_exclusiveGateway.setName (\"flowElements\");\n            // assign attribute __process_flowElements_defaultFlow\n            __process_flowElements_defaultFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_inFlow\n            __process_flowElements_inFlow.setName (\"flowElements\");\n            // assign attribute __divergeFlow_sourceRef_exclusiveGateway\n            __divergeFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n            // assign attribute __exclusiveGateway_outgoing_divergeFlow\n            __exclusiveGateway_outgoing_divergeFlow.setName (\"outgoing\");\n            // assign attribute __defaultFlow_sourceRef_exclusiveGateway\n            __defaultFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n            // assign attribute __exclusiveGateway_outgoing_defaultFlow\n            __exclusiveGateway_outgoing_defaultFlow.setName (\"outgoing\");\n            // assign attribute __exclusiveGateway_default_defaultFlow\n            __exclusiveGateway_default_defaultFlow.setName (\"default\");\n            // assign attribute __laneSet_lanes_lane\n            __laneSet_lanes_lane.setName (\"lanes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exclusiveGateway_outgoing_defaultFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,exclusiveGateway,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,inFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,lane,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_exclusiveGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,laneSet,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_defaultFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__laneSet_lanes_lane,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exclusiveGateway_outgoing_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,process,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exclusiveGateway_default_defaultFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,defaultFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__defaultFlow_sourceRef_exclusiveGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_inFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,divergeFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__divergeFlow_sourceRef_exclusiveGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_laneSets_laneSet,\"contextEdges\");\n\n            // create link\n            __defaultFlow_sourceRef_exclusiveGateway.setSrc( defaultFlow);\n\n\n            // create link\n            __exclusiveGateway_default_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __exclusiveGateway_outgoing_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __process_flowElements_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __process_flowElements_defaultFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_exclusiveGateway.setSrc( process);\n\n\n            // create link\n            __process_laneSets_laneSet.setSrc( process);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_inFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __exclusiveGateway_default_defaultFlow.setSrc( exclusiveGateway);\n\n\n            // create link\n            __exclusiveGateway_outgoing_defaultFlow.setSrc( exclusiveGateway);\n\n\n            // create link\n            __process_flowElements_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n            // create link\n            __exclusiveGateway_outgoing_divergeFlow.setSrc( exclusiveGateway);\n\n\n            // create link\n            __defaultFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n            // create link\n            __divergeFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n            // create link\n            __divergeFlow_sourceRef_exclusiveGateway.setSrc( divergeFlow);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __exclusiveGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __laneSet_lanes_lane.setTrg( lane);\n\n\n            // create link\n            __process_laneSets_laneSet.setTrg( laneSet);\n\n\n            // create link\n            __laneSet_lanes_lane.setSrc( laneSet);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, SequenceFlow defaultFlow,
			ExclusiveGateway exConvGateway, bpmn2.Process process,
			SequenceFlow inFlow, SequenceFlow outFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			Lane lane, LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      AlternativeFlowAlternative alt = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n      SequenceFlow divergeFlow = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      FlowNodeToStep egwToStep = null;\n      ExclusiveGateway exConvGateway = null;\n      ExclusiveGateway exclusiveGateway = null;\n      AlternativeFlow flow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      SequenceFlowToStep inFlowToStep = null;\n      Flow initFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      NormalStep normalStep = null;\n      SequenceFlow outFlow = null;\n      Process process = null;\n      Step step = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge ecgwToStep__source__exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __defaultFlow_targetRef_exConvGateway = null;\n      EMoflonEdge outFlowToInitFlow__target__initFlow = null;\n      EMoflonEdge __exConvGateway_incoming_defaultFlow = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge outFlowToNormalStep__target__normalStep = null;\n      EMoflonEdge outFlowToNormalStep__source__outFlow = null;\n      EMoflonEdge outFlowToInitFlow__source__outFlow = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge ecgwToStep__target__normalStep = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"defaultFlow\"));\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"defaultFlowToInitFlow\"));\n\n         // ensure correct type and really bound of object defaultFlowToInitFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         defaultFlowToInitFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlowToAlt\"));\n\n         // ensure correct type and really bound of object divergeFlowToAlt\n         JavaSDM.ensure ( _TmpObject instanceof SeqFlowToAltFlowAlt );\n         divergeFlowToAlt = (SeqFlowToAltFlowAlt) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"egwToStep\"));\n\n         // ensure correct type and really bound of object egwToStep\n         JavaSDM.ensure ( _TmpObject instanceof FlowNodeToStep );\n         egwToStep = (FlowNodeToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"exclusiveGateway\"));\n\n         // ensure correct type and really bound of object exclusiveGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exclusiveGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         flow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToFlow\"));\n\n         // ensure correct type and really bound of object inFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToStep\"));\n\n         // ensure correct type and really bound of object inFlowToStep\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToStep );\n         inFlowToStep = (SequenceFlowToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"initFlow\"));\n\n         // ensure correct type and really bound of object initFlow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         initFlow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"normalStep\"));\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof Step );\n         step = (Step) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects step and normalStep \n         JavaSDM.ensure ( !step.equals (normalStep) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object ecgwToStep\n         ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // create object outFlowToInitFlow\n         outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n         // create object outFlowToNormalStep\n         outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n\n         // create link\n         ecgwToStep.setSource( exConvGateway);\n\n\n         // create link\n         outFlowToInitFlow.setSource( outFlow);\n\n\n         // create link\n         outFlowToNormalStep.setSource( outFlow);\n\n\n         // create link\n         outFlowToNormalStep.setTarget( normalStep);\n\n\n         // create link\n         ecgwToStep.setTarget( normalStep);\n\n\n         // create link\n         outFlowToInitFlow.setTarget( initFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,exConvGateway,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object defaultFlow is really bound\n         JavaSDM.ensure ( defaultFlow != null );\n         // check object defaultFlowToInitFlow is really bound\n         JavaSDM.ensure ( defaultFlowToInitFlow != null );\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object divergeFlowToAlt is really bound\n         JavaSDM.ensure ( divergeFlowToAlt != null );\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object egwToStep is really bound\n         JavaSDM.ensure ( egwToStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object exclusiveGateway is really bound\n         JavaSDM.ensure ( exclusiveGateway != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToFlow is really bound\n         JavaSDM.ensure ( inFlowToFlow != null );\n         // check object inFlowToStep is really bound\n         JavaSDM.ensure ( inFlowToStep != null );\n         // check object initFlow is really bound\n         JavaSDM.ensure ( initFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check isomorphic binding between objects defaultFlow and alt \n         JavaSDM.ensure ( !defaultFlow.equals (alt) );\n\n         // check isomorphic binding between objects defaultFlowToInitFlow and alt \n         JavaSDM.ensure ( !defaultFlowToInitFlow.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlow and alt \n         JavaSDM.ensure ( !divergeFlow.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and alt \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (alt) );\n\n         // check isomorphic binding between objects ecgwToStep and alt \n         JavaSDM.ensure ( !ecgwToStep.equals (alt) );\n\n         // check isomorphic binding between objects egwToStep and alt \n         JavaSDM.ensure ( !egwToStep.equals (alt) );\n\n         // check isomorphic binding between objects exConvGateway and alt \n         JavaSDM.ensure ( !exConvGateway.equals (alt) );\n\n         // check isomorphic binding between objects exclusiveGateway and alt \n         JavaSDM.ensure ( !exclusiveGateway.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects inFlow and alt \n         JavaSDM.ensure ( !inFlow.equals (alt) );\n\n         // check isomorphic binding between objects inFlowToFlow and alt \n         JavaSDM.ensure ( !inFlowToFlow.equals (alt) );\n\n         // check isomorphic binding between objects inFlowToStep and alt \n         JavaSDM.ensure ( !inFlowToStep.equals (alt) );\n\n         // check isomorphic binding between objects initFlow and alt \n         JavaSDM.ensure ( !initFlow.equals (alt) );\n\n         // check isomorphic binding between objects lane and alt \n         JavaSDM.ensure ( !lane.equals (alt) );\n\n         // check isomorphic binding between objects laneSet and alt \n         JavaSDM.ensure ( !laneSet.equals (alt) );\n\n         // check isomorphic binding between objects normalStep and alt \n         JavaSDM.ensure ( !normalStep.equals (alt) );\n\n         // check isomorphic binding between objects outFlow and alt \n         JavaSDM.ensure ( !outFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and alt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and alt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (alt) );\n\n         // check isomorphic binding between objects process and alt \n         JavaSDM.ensure ( !process.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects defaultFlowToInitFlow and defaultFlow \n         JavaSDM.ensure ( !defaultFlowToInitFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and defaultFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (defaultFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and defaultFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects egwToStep and defaultFlow \n         JavaSDM.ensure ( !egwToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects exConvGateway and defaultFlow \n         JavaSDM.ensure ( !exConvGateway.equals (defaultFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and defaultFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (defaultFlow) );\n\n         // check isomorphic binding between objects flow and defaultFlow \n         JavaSDM.ensure ( !flow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and defaultFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and defaultFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects initFlow and defaultFlow \n         JavaSDM.ensure ( !initFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects lane and defaultFlow \n         JavaSDM.ensure ( !lane.equals (defaultFlow) );\n\n         // check isomorphic binding between objects laneSet and defaultFlow \n         JavaSDM.ensure ( !laneSet.equals (defaultFlow) );\n\n         // check isomorphic binding between objects normalStep and defaultFlow \n         JavaSDM.ensure ( !normalStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and defaultFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and defaultFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects process and defaultFlow \n         JavaSDM.ensure ( !process.equals (defaultFlow) );\n\n         // check isomorphic binding between objects step and defaultFlow \n         JavaSDM.ensure ( !step.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects egwToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !egwToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects exConvGateway and defaultFlowToInitFlow \n         JavaSDM.ensure ( !exConvGateway.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and defaultFlowToInitFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects flow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !flow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects initFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !initFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects lane and defaultFlowToInitFlow \n         JavaSDM.ensure ( !lane.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects laneSet and defaultFlowToInitFlow \n         JavaSDM.ensure ( !laneSet.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects normalStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !normalStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and defaultFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects step and defaultFlowToInitFlow \n         JavaSDM.ensure ( !step.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and divergeFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects egwToStep and divergeFlow \n         JavaSDM.ensure ( !egwToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlow \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and divergeFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlow) );\n\n         // check isomorphic binding between objects normalStep and divergeFlow \n         JavaSDM.ensure ( !normalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects process and divergeFlow \n         JavaSDM.ensure ( !process.equals (divergeFlow) );\n\n         // check isomorphic binding between objects step and divergeFlow \n         JavaSDM.ensure ( !step.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects egwToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !egwToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlowToAlt \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects exclusiveGateway and divergeFlowToAlt \n         JavaSDM.ensure ( !exclusiveGateway.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects flow and divergeFlowToAlt \n         JavaSDM.ensure ( !flow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects initFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !initFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects lane and divergeFlowToAlt \n         JavaSDM.ensure ( !lane.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects laneSet and divergeFlowToAlt \n         JavaSDM.ensure ( !laneSet.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects normalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !normalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects process and divergeFlowToAlt \n         JavaSDM.ensure ( !process.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects step and divergeFlowToAlt \n         JavaSDM.ensure ( !step.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects egwToStep and ecgwToStep \n         JavaSDM.ensure ( !egwToStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exConvGateway and ecgwToStep \n         JavaSDM.ensure ( !exConvGateway.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and ecgwToStep \n         JavaSDM.ensure ( !exclusiveGateway.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects flow and ecgwToStep \n         JavaSDM.ensure ( !flow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlow and ecgwToStep \n         JavaSDM.ensure ( !inFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and ecgwToStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlowToStep and ecgwToStep \n         JavaSDM.ensure ( !inFlowToStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects initFlow and ecgwToStep \n         JavaSDM.ensure ( !initFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects lane and ecgwToStep \n         JavaSDM.ensure ( !lane.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects laneSet and ecgwToStep \n         JavaSDM.ensure ( !laneSet.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects normalStep and ecgwToStep \n         JavaSDM.ensure ( !normalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and ecgwToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects process and ecgwToStep \n         JavaSDM.ensure ( !process.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects step and ecgwToStep \n         JavaSDM.ensure ( !step.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exConvGateway and egwToStep \n         JavaSDM.ensure ( !exConvGateway.equals (egwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and egwToStep \n         JavaSDM.ensure ( !exclusiveGateway.equals (egwToStep) );\n\n         // check isomorphic binding between objects flow and egwToStep \n         JavaSDM.ensure ( !flow.equals (egwToStep) );\n\n         // check isomorphic binding between objects inFlow and egwToStep \n         JavaSDM.ensure ( !inFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and egwToStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects inFlowToStep and egwToStep \n         JavaSDM.ensure ( !inFlowToStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects initFlow and egwToStep \n         JavaSDM.ensure ( !initFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects lane and egwToStep \n         JavaSDM.ensure ( !lane.equals (egwToStep) );\n\n         // check isomorphic binding between objects laneSet and egwToStep \n         JavaSDM.ensure ( !laneSet.equals (egwToStep) );\n\n         // check isomorphic binding between objects normalStep and egwToStep \n         JavaSDM.ensure ( !normalStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlow and egwToStep \n         JavaSDM.ensure ( !outFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and egwToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and egwToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects process and egwToStep \n         JavaSDM.ensure ( !process.equals (egwToStep) );\n\n         // check isomorphic binding between objects step and egwToStep \n         JavaSDM.ensure ( !step.equals (egwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects flow and exConvGateway \n         JavaSDM.ensure ( !flow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlow and exConvGateway \n         JavaSDM.ensure ( !inFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlowToFlow and exConvGateway \n         JavaSDM.ensure ( !inFlowToFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlowToStep and exConvGateway \n         JavaSDM.ensure ( !inFlowToStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects initFlow and exConvGateway \n         JavaSDM.ensure ( !initFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects lane and exConvGateway \n         JavaSDM.ensure ( !lane.equals (exConvGateway) );\n\n         // check isomorphic binding between objects laneSet and exConvGateway \n         JavaSDM.ensure ( !laneSet.equals (exConvGateway) );\n\n         // check isomorphic binding between objects normalStep and exConvGateway \n         JavaSDM.ensure ( !normalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and exConvGateway \n         JavaSDM.ensure ( !outFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and exConvGateway \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and exConvGateway \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects process and exConvGateway \n         JavaSDM.ensure ( !process.equals (exConvGateway) );\n\n         // check isomorphic binding between objects step and exConvGateway \n         JavaSDM.ensure ( !step.equals (exConvGateway) );\n\n         // check isomorphic binding between objects flow and exclusiveGateway \n         JavaSDM.ensure ( !flow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlow and exclusiveGateway \n         JavaSDM.ensure ( !inFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlowToFlow and exclusiveGateway \n         JavaSDM.ensure ( !inFlowToFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlowToStep and exclusiveGateway \n         JavaSDM.ensure ( !inFlowToStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects initFlow and exclusiveGateway \n         JavaSDM.ensure ( !initFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects lane and exclusiveGateway \n         JavaSDM.ensure ( !lane.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects laneSet and exclusiveGateway \n         JavaSDM.ensure ( !laneSet.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects normalStep and exclusiveGateway \n         JavaSDM.ensure ( !normalStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlow and exclusiveGateway \n         JavaSDM.ensure ( !outFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and exclusiveGateway \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and exclusiveGateway \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects process and exclusiveGateway \n         JavaSDM.ensure ( !process.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects step and exclusiveGateway \n         JavaSDM.ensure ( !step.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and flow \n         JavaSDM.ensure ( !inFlowToFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToStep and flow \n         JavaSDM.ensure ( !inFlowToStep.equals (flow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects lane and flow \n         JavaSDM.ensure ( !lane.equals (flow) );\n\n         // check isomorphic binding between objects laneSet and flow \n         JavaSDM.ensure ( !laneSet.equals (flow) );\n\n         // check isomorphic binding between objects normalStep and flow \n         JavaSDM.ensure ( !normalStep.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and flow \n         JavaSDM.ensure ( !outFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and flow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and flow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and inFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and inFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects lane and inFlow \n         JavaSDM.ensure ( !lane.equals (inFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects step and inFlow \n         JavaSDM.ensure ( !step.equals (inFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and inFlowToFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects lane and inFlowToFlow \n         JavaSDM.ensure ( !lane.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlowToFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlowToFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and inFlowToFlow \n         JavaSDM.ensure ( !process.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects step and inFlowToFlow \n         JavaSDM.ensure ( !step.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToStep \n         JavaSDM.ensure ( !initFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and inFlowToStep \n         JavaSDM.ensure ( !lane.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects laneSet and inFlowToStep \n         JavaSDM.ensure ( !laneSet.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects normalStep and inFlowToStep \n         JavaSDM.ensure ( !normalStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlowToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects process and inFlowToStep \n         JavaSDM.ensure ( !process.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects step and inFlowToStep \n         JavaSDM.ensure ( !step.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and initFlow \n         JavaSDM.ensure ( !lane.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and initFlow \n         JavaSDM.ensure ( !laneSet.equals (initFlow) );\n\n         // check isomorphic binding between objects normalStep and initFlow \n         JavaSDM.ensure ( !normalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlow and initFlow \n         JavaSDM.ensure ( !outFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and initFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and initFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects process and initFlow \n         JavaSDM.ensure ( !process.equals (initFlow) );\n\n         // check isomorphic binding between objects step and initFlow \n         JavaSDM.ensure ( !step.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and lane \n         JavaSDM.ensure ( !laneSet.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and lane \n         JavaSDM.ensure ( !normalStep.equals (lane) );\n\n         // check isomorphic binding between objects outFlow and lane \n         JavaSDM.ensure ( !outFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and lane \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and lane \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (lane) );\n\n         // check isomorphic binding between objects process and lane \n         JavaSDM.ensure ( !process.equals (lane) );\n\n         // check isomorphic binding between objects step and lane \n         JavaSDM.ensure ( !step.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and laneSet \n         JavaSDM.ensure ( !normalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and laneSet \n         JavaSDM.ensure ( !outFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and laneSet \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and laneSet \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects process and laneSet \n         JavaSDM.ensure ( !process.equals (laneSet) );\n\n         // check isomorphic binding between objects step and laneSet \n         JavaSDM.ensure ( !step.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and normalStep \n         JavaSDM.ensure ( !outFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and normalStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and normalStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (normalStep) );\n\n         // check isomorphic binding between objects process and normalStep \n         JavaSDM.ensure ( !process.equals (normalStep) );\n\n         // check isomorphic binding between objects step and normalStep \n         JavaSDM.ensure ( !step.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and outFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlow) );\n\n         // check isomorphic binding between objects process and outFlow \n         JavaSDM.ensure ( !process.equals (outFlow) );\n\n         // check isomorphic binding between objects step and outFlow \n         JavaSDM.ensure ( !step.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects step and outFlowToInitFlow \n         JavaSDM.ensure ( !step.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToNormalStep \n         JavaSDM.ensure ( !process.equals (outFlowToNormalStep) );\n\n         // check isomorphic binding between objects step and outFlowToNormalStep \n         JavaSDM.ensure ( !step.equals (outFlowToNormalStep) );\n\n         // check isomorphic binding between objects step and process \n         JavaSDM.ensure ( !step.equals (process) );\n\n         // create object ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __defaultFlow_targetRef_exConvGateway\n         __defaultFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_incoming_defaultFlow\n         __exConvGateway_incoming_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_outFlow\n         __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"ExclusiveConvergingGatewayDefaultSeqFlowRule\");\n         // assign attribute __defaultFlow_targetRef_exConvGateway\n         __defaultFlow_targetRef_exConvGateway.setName (\"targetRef\");\n         // assign attribute __exConvGateway_incoming_defaultFlow\n         __exConvGateway_incoming_defaultFlow.setName (\"incoming\");\n         // assign attribute __process_flowElements_outFlow\n         __process_flowElements_outFlow.setName (\"flowElements\");\n         // assign attribute __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway.setName (\"flowElements\");\n         // assign attribute __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n         // assign attribute __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow.setName (\"incoming\");\n         // assign attribute __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n         // assign attribute __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n         // assign attribute ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway.setName (\"source\");\n         // assign attribute ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep.setName (\"target\");\n         // assign attribute outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow.setName (\"target\");\n         // assign attribute outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep.setName (\"target\");\n         // assign attribute __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__source__exConvGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_outgoing_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__defaultFlow_targetRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__target__initFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_incoming_defaultFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__inFlow_targetRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__lane_flowNodeRefs_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_incoming_inFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__outFlow_sourceRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         __exConvGateway_incoming_defaultFlow.setTrg( defaultFlow);\n\n\n         // create link\n         __defaultFlow_targetRef_exConvGateway.setSrc( defaultFlow);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __defaultFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __exConvGateway_incoming_defaultFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __process_flowElements_outFlow.setSrc( process);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setSrc( process);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n         // create link\n         __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n         // create link\n         __process_flowElements_outFlow.setTrg( outFlow);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setSrc( ecgwToStep);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setSrc( ecgwToStep);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setTrg( initFlow);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,defaultFlow,exConvGateway,process,inFlow,outFlow,flow,inFlowToFlow,step,inFlowToStep,normalStep,ecgwToStep,alt,initFlow,outFlowToInitFlow,outFlowToNormalStep,exclusiveGateway,egwToStep,defaultFlowToInitFlow,divergeFlow,divergeFlowToAlt,lane,laneSet);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exConvGateway = null;\n      ExclusiveGateway exclusiveGateway = null;\n      SequenceFlow inFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      SequenceFlow outFlow = null;\n      Process process = null;\n      EMoflonEdge __defaultFlow_sourceRef_exclusiveGateway = null;\n      EMoflonEdge __exclusiveGateway_outgoing_defaultFlow = null;\n      EMoflonEdge __process_flowElements_defaultFlow = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __defaultFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __exclusiveGateway_default_defaultFlow = null;\n      EMoflonEdge __defaultFlowToInitFlow_source_defaultFlow = null;\n      EMoflonEdge __exConvGateway_incoming_defaultFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __process_flowElements_exclusiveGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __inFlowToFlow_source_inFlow = null;\n      EMoflonEdge __inFlowToStep_source_inFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __inFlowToFlow_target_flow = null;\n      EMoflonEdge __alt_ref_flow = null;\n      EMoflonEdge __inFlowToStep_target_step = null;\n      EMoflonEdge __normalStep_stepAlternative_alt = null;\n      EMoflonEdge __initFlow_steps_normalStep = null;\n      EMoflonEdge __egwToStep_target_normalStep = null;\n      EMoflonEdge __divergeFlowToAlt_target_alt = null;\n      EMoflonEdge __defaultFlowToInitFlow_target_initFlow = null;\n      EMoflonEdge __egwToStep_source_exclusiveGateway = null;\n      EMoflonEdge __exclusiveGateway_outgoing_divergeFlow = null;\n      EMoflonEdge __divergeFlow_sourceRef_exclusiveGateway = null;\n      EMoflonEdge __divergeFlowToAlt_source_divergeFlow = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      CSP csp = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterExclusiveGatewayToEgwToStep = null;\n      FlowNodeToStep egwToStep = null;\n      Step step = null;\n      Iterator fujaba__IterInFlowToInFlowToStep = null;\n      SequenceFlowToStep inFlowToStep = null;\n      AlternativeFlow flow = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      Flow initFlow = null;\n      Iterator fujaba__IterDefaultFlowToDefaultFlowToInitFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"ExclusiveConvergingGatewayDefaultSeqFlowRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"defaultFlow\"));\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"exclusiveGateway\"));\n\n         // ensure correct type and really bound of object exclusiveGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exclusiveGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (match.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (match.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // iterate to-many link source from defaultFlow to defaultFlowToInitFlow\n         fujaba__Success = false;\n\n         fujaba__IterDefaultFlowToDefaultFlowToInitFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(defaultFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n         while ( fujaba__IterDefaultFlowToDefaultFlowToInitFlow.hasNext () )\n         {\n            try\n            {\n               defaultFlowToInitFlow = (SequenceFlowToUCFlow) fujaba__IterDefaultFlowToDefaultFlowToInitFlow.next ();\n\n               // check object defaultFlowToInitFlow is really bound\n               JavaSDM.ensure ( defaultFlowToInitFlow != null );\n               // bind object\n               initFlow = defaultFlowToInitFlow.getTarget ();\n\n               // check object initFlow is really bound\n               JavaSDM.ensure ( initFlow != null );\n\n               // iterate to-many link source from divergeFlow to divergeFlowToAlt\n               fujaba__Success = false;\n\n               fujaba__IterDivergeFlowToDivergeFlowToAlt = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SeqFlowToAltFlowAlt.class,\"source\")).iterator ();\n\n               while ( fujaba__IterDivergeFlowToDivergeFlowToAlt.hasNext () )\n               {\n                  try\n                  {\n                     divergeFlowToAlt = (SeqFlowToAltFlowAlt) fujaba__IterDivergeFlowToDivergeFlowToAlt.next ();\n\n                     // check object divergeFlowToAlt is really bound\n                     JavaSDM.ensure ( divergeFlowToAlt != null );\n                     // bind object\n                     alt = divergeFlowToAlt.getTarget ();\n\n                     // check object alt is really bound\n                     JavaSDM.ensure ( alt != null );\n\n                     // iterate to-many link source from inFlow to inFlowToFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n                     {\n                        try\n                        {\n                           inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n                           // check object inFlowToFlow is really bound\n                           JavaSDM.ensure ( inFlowToFlow != null );\n                           // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n                           JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                           // bind object\n                           _TmpObject = inFlowToFlow.getTarget ();\n\n                           // ensure correct type and really bound of object flow\n                           JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                           flow = (AlternativeFlow) _TmpObject;\n\n                           // check isomorphic binding between objects initFlow and flow \n                           JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                           // iterate to-many link source from inFlow to inFlowToStep\n                           fujaba__Success = false;\n\n                           fujaba__IterInFlowToInFlowToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToStep.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterInFlowToInFlowToStep.hasNext () )\n                           {\n                              try\n                              {\n                                 inFlowToStep = (SequenceFlowToStep) fujaba__IterInFlowToInFlowToStep.next ();\n\n                                 // check object inFlowToStep is really bound\n                                 JavaSDM.ensure ( inFlowToStep != null );\n                                 // bind object\n                                 step = inFlowToStep.getTarget ();\n\n                                 // check object step is really bound\n                                 JavaSDM.ensure ( step != null );\n\n                                 // iterate to-many link source from exclusiveGateway to egwToStep\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExclusiveGatewayToEgwToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exclusiveGateway,FlowNodeToStep.class,\"source\")).iterator ();\n\n                                 while ( fujaba__IterExclusiveGatewayToEgwToStep.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       egwToStep = (FlowNodeToStep) fujaba__IterExclusiveGatewayToEgwToStep.next ();\n\n                                       // check object egwToStep is really bound\n                                       JavaSDM.ensure ( egwToStep != null );\n                                       // bind object\n                                       _TmpObject = egwToStep.getTarget ();\n\n                                       // ensure correct type and really bound of object normalStep\n                                       JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                                       normalStep = (NormalStep) _TmpObject;\n\n                                       // check isomorphic binding between objects step and normalStep \n                                       JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                       // story node \'find context\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object alt is really bound\n                                          JavaSDM.ensure ( alt != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object defaultFlowToInitFlow is really bound\n                                          JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object divergeFlowToAlt is really bound\n                                          JavaSDM.ensure ( divergeFlowToAlt != null );\n                                          // check object egwToStep is really bound\n                                          JavaSDM.ensure ( egwToStep != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object flow is really bound\n                                          JavaSDM.ensure ( flow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object inFlowToFlow is really bound\n                                          JavaSDM.ensure ( inFlowToFlow != null );\n                                          // check object inFlowToStep is really bound\n                                          JavaSDM.ensure ( inFlowToStep != null );\n                                          // check object initFlow is really bound\n                                          JavaSDM.ensure ( initFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object normalStep is really bound\n                                          JavaSDM.ensure ( normalStep != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check object step is really bound\n                                          JavaSDM.ensure ( step != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n                                          JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects initFlow and flow \n                                          JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects step and normalStep \n                                          JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link ref from alt to flow\n                                          JavaSDM.ensure (flow.equals (alt.getRef ()\n                                          ));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from defaultFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link source from defaultFlowToInitFlow to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (defaultFlowToInitFlow.getSource ()\n                                          ));\n\n                                          // check link source from divergeFlowToAlt to divergeFlow\n                                          JavaSDM.ensure (divergeFlow.equals (divergeFlowToAlt.getSource ()\n                                          ));\n\n                                          // check link source from egwToStep to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (egwToStep.getSource ()\n                                          ));\n\n                                          // check link source from inFlowToFlow to inFlow\n                                          JavaSDM.ensure (inFlow.equals (inFlowToFlow.getSource ()\n                                          ));\n\n                                          // check link source from inFlowToStep to inFlow\n                                          JavaSDM.ensure (inFlow.equals (inFlowToStep.getSource ()\n                                          ));\n\n                                          // check link stepAlternative from alt to normalStep\n                                          JavaSDM.ensure (normalStep.equals (alt.eContainer()\n                                          ));\n\n                                          // check link steps from step to flow\n                                          JavaSDM.ensure (flow.equals (step.eContainer()\n                                          ));\n\n                                          // check link steps from normalStep to initFlow\n                                          JavaSDM.ensure (initFlow.equals (normalStep.eContainer()\n                                          ));\n\n                                          // check link target from defaultFlowToInitFlow to initFlow\n                                          JavaSDM.ensure (initFlow.equals (defaultFlowToInitFlow.getTarget ()\n                                          ));\n\n                                          // check link target from divergeFlowToAlt to alt\n                                          JavaSDM.ensure (alt.equals (divergeFlowToAlt.getTarget ()\n                                          ));\n\n                                          // check link target from egwToStep to normalStep\n                                          JavaSDM.ensure (normalStep.equals (egwToStep.getTarget ()\n                                          ));\n\n                                          // check link target from inFlowToFlow to flow\n                                          JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                          ));\n\n                                          // check link target from inFlowToStep to step\n                                          JavaSDM.ensure (step.equals (inFlowToStep.getTarget ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object __defaultFlow_sourceRef_exclusiveGateway\n                                          __defaultFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exclusiveGateway_outgoing_defaultFlow\n                                          __exclusiveGateway_outgoing_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_defaultFlow\n                                          __process_flowElements_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object isApplicableMatch\n                                          isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                          // create object __defaultFlow_targetRef_exConvGateway\n                                          __defaultFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exclusiveGateway_default_defaultFlow\n                                          __exclusiveGateway_default_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __defaultFlowToInitFlow_source_defaultFlow\n                                          __defaultFlowToInitFlow_source_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exConvGateway_incoming_defaultFlow\n                                          __exConvGateway_incoming_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __lane_flowNodeRefs_exConvGateway\n                                          __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlow_targetRef_exConvGateway\n                                          __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __outFlow_sourceRef_exConvGateway\n                                          __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exConvGateway_outgoing_outFlow\n                                          __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_exConvGateway\n                                          __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exConvGateway_incoming_inFlow\n                                          __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_inFlow\n                                          __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_exclusiveGateway\n                                          __process_flowElements_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_outFlow\n                                          __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_divergeFlow\n                                          __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_laneSets_laneSet\n                                          __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlowToFlow_source_inFlow\n                                          __inFlowToFlow_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlowToStep_source_inFlow\n                                          __inFlowToStep_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __flow_steps_step\n                                          __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlowToFlow_target_flow\n                                          __inFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __alt_ref_flow\n                                          __alt_ref_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlowToStep_target_step\n                                          __inFlowToStep_target_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __normalStep_stepAlternative_alt\n                                          __normalStep_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __initFlow_steps_normalStep\n                                          __initFlow_steps_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __egwToStep_target_normalStep\n                                          __egwToStep_target_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToAlt_target_alt\n                                          __divergeFlowToAlt_target_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __defaultFlowToInitFlow_target_initFlow\n                                          __defaultFlowToInitFlow_target_initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __egwToStep_source_exclusiveGateway\n                                          __egwToStep_source_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exclusiveGateway_outgoing_divergeFlow\n                                          __exclusiveGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlow_sourceRef_exclusiveGateway\n                                          __divergeFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToAlt_source_divergeFlow\n                                          __divergeFlowToAlt_source_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __laneSet_lanes_lane\n                                          __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // assign attribute __defaultFlow_targetRef_exConvGateway\n                                          __defaultFlow_targetRef_exConvGateway.setName (\"targetRef\");\n                                          // assign attribute __exConvGateway_incoming_defaultFlow\n                                          __exConvGateway_incoming_defaultFlow.setName (\"incoming\");\n                                          // assign attribute __process_flowElements_outFlow\n                                          __process_flowElements_outFlow.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_divergeFlow\n                                          __process_flowElements_divergeFlow.setName (\"flowElements\");\n                                          // assign attribute __process_laneSets_laneSet\n                                          __process_laneSets_laneSet.setName (\"laneSets\");\n                                          // assign attribute __process_flowElements_exclusiveGateway\n                                          __process_flowElements_exclusiveGateway.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_defaultFlow\n                                          __process_flowElements_defaultFlow.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_inFlow\n                                          __process_flowElements_inFlow.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_exConvGateway\n                                          __process_flowElements_exConvGateway.setName (\"flowElements\");\n                                          // assign attribute __inFlow_targetRef_exConvGateway\n                                          __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n                                          // assign attribute __exConvGateway_incoming_inFlow\n                                          __exConvGateway_incoming_inFlow.setName (\"incoming\");\n                                          // assign attribute __outFlow_sourceRef_exConvGateway\n                                          __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n                                          // assign attribute __exConvGateway_outgoing_outFlow\n                                          __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n                                          // assign attribute __flow_steps_step\n                                          __flow_steps_step.setName (\"steps\");\n                                          // assign attribute __inFlowToFlow_source_inFlow\n                                          __inFlowToFlow_source_inFlow.setName (\"source\");\n                                          // assign attribute __inFlowToFlow_target_flow\n                                          __inFlowToFlow_target_flow.setName (\"target\");\n                                          // assign attribute __inFlowToStep_source_inFlow\n                                          __inFlowToStep_source_inFlow.setName (\"source\");\n                                          // assign attribute __inFlowToStep_target_step\n                                          __inFlowToStep_target_step.setName (\"target\");\n                                          // assign attribute __normalStep_stepAlternative_alt\n                                          __normalStep_stepAlternative_alt.setName (\"stepAlternative\");\n                                          // assign attribute __alt_ref_flow\n                                          __alt_ref_flow.setName (\"ref\");\n                                          // assign attribute __initFlow_steps_normalStep\n                                          __initFlow_steps_normalStep.setName (\"steps\");\n                                          // assign attribute __divergeFlow_sourceRef_exclusiveGateway\n                                          __divergeFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n                                          // assign attribute __exclusiveGateway_outgoing_divergeFlow\n                                          __exclusiveGateway_outgoing_divergeFlow.setName (\"outgoing\");\n                                          // assign attribute __defaultFlow_sourceRef_exclusiveGateway\n                                          __defaultFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n                                          // assign attribute __exclusiveGateway_outgoing_defaultFlow\n                                          __exclusiveGateway_outgoing_defaultFlow.setName (\"outgoing\");\n                                          // assign attribute __exclusiveGateway_default_defaultFlow\n                                          __exclusiveGateway_default_defaultFlow.setName (\"default\");\n                                          // assign attribute __egwToStep_source_exclusiveGateway\n                                          __egwToStep_source_exclusiveGateway.setName (\"source\");\n                                          // assign attribute __egwToStep_target_normalStep\n                                          __egwToStep_target_normalStep.setName (\"target\");\n                                          // assign attribute __defaultFlowToInitFlow_source_defaultFlow\n                                          __defaultFlowToInitFlow_source_defaultFlow.setName (\"source\");\n                                          // assign attribute __defaultFlowToInitFlow_target_initFlow\n                                          __defaultFlowToInitFlow_target_initFlow.setName (\"target\");\n                                          // assign attribute __divergeFlowToAlt_source_divergeFlow\n                                          __divergeFlowToAlt_source_divergeFlow.setName (\"source\");\n                                          // assign attribute __divergeFlowToAlt_target_alt\n                                          __divergeFlowToAlt_target_alt.setName (\"target\");\n                                          // assign attribute __lane_flowNodeRefs_exConvGateway\n                                          __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n                                          // assign attribute __laneSet_lanes_lane\n                                          __laneSet_lanes_lane.setName (\"lanes\");\n\n                                          // create link\n                                          __defaultFlow_sourceRef_exclusiveGateway.setSrc( defaultFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __process_flowElements_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(defaultFlow);\n\n\n                                          // create link\n                                          __defaultFlow_targetRef_exConvGateway.setSrc( defaultFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_default_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_source_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_defaultFlow.setSrc( exConvGateway);\n\n\n                                          // create link\n                                          __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __defaultFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n                                          // create link\n                                          __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(exConvGateway);\n\n\n                                          // create link\n                                          __process_flowElements_inFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_exclusiveGateway.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_outFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_exConvGateway.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_divergeFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_defaultFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_laneSets_laneSet.setSrc( process);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(process);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                                          // create link\n                                          __inFlowToFlow_source_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __process_flowElements_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __inFlowToStep_source_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n                                          // create link\n                                          __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n                                          // create link\n                                          __process_flowElements_outFlow.setTrg( outFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(outFlow);\n\n\n                                          // create link\n                                          __flow_steps_step.setSrc( flow);\n\n\n                                          // create link\n                                          __inFlowToFlow_target_flow.setTrg( flow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                          // create link\n                                          __alt_ref_flow.setTrg( flow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(inFlowToFlow);\n\n\n                                          // create link\n                                          __inFlowToFlow_target_flow.setSrc( inFlowToFlow);\n\n\n                                          // create link\n                                          __inFlowToFlow_source_inFlow.setSrc( inFlowToFlow);\n\n\n                                          // create link\n                                          __inFlowToStep_target_step.setTrg( step);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(step);\n\n\n                                          // create link\n                                          __flow_steps_step.setTrg( step);\n\n\n                                          // create link\n                                          __inFlowToStep_target_step.setSrc( inFlowToStep);\n\n\n                                          // create link\n                                          __inFlowToStep_source_inFlow.setSrc( inFlowToStep);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(inFlowToStep);\n\n\n                                          // create link\n                                          __normalStep_stepAlternative_alt.setSrc( normalStep);\n\n\n                                          // create link\n                                          __initFlow_steps_normalStep.setTrg( normalStep);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(normalStep);\n\n\n                                          // create link\n                                          __egwToStep_target_normalStep.setTrg( normalStep);\n\n\n                                          // create link\n                                          __alt_ref_flow.setSrc( alt);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_target_alt.setTrg( alt);\n\n\n                                          // create link\n                                          __normalStep_stepAlternative_alt.setTrg( alt);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(alt);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_target_initFlow.setTrg( initFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(initFlow);\n\n\n                                          // create link\n                                          __initFlow_steps_normalStep.setSrc( initFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_default_defaultFlow.setSrc( exclusiveGateway);\n\n\n                                          // create link\n                                          __process_flowElements_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __egwToStep_source_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_divergeFlow.setSrc( exclusiveGateway);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(exclusiveGateway);\n\n\n                                          // create link\n                                          __divergeFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __defaultFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_defaultFlow.setSrc( exclusiveGateway);\n\n\n                                          // create link\n                                          __egwToStep_target_normalStep.setSrc( egwToStep);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(egwToStep);\n\n\n                                          // create link\n                                          __egwToStep_source_exclusiveGateway.setSrc( egwToStep);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_source_defaultFlow.setSrc( defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_target_initFlow.setSrc( defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_source_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(divergeFlow);\n\n\n                                          // create link\n                                          __divergeFlow_sourceRef_exclusiveGateway.setSrc( divergeFlow);\n\n\n                                          // create link\n                                          __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(divergeFlowToAlt);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_target_alt.setSrc( divergeFlowToAlt);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_source_divergeFlow.setSrc( divergeFlowToAlt);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(lane);\n\n\n                                          // create link\n                                          __laneSet_lanes_lane.setTrg( lane);\n\n\n                                          // create link\n                                          __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n\n                                          // create link\n                                          __laneSet_lanes_lane.setSrc( laneSet);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(laneSet);\n\n\n                                          // create link\n                                          __process_laneSets_laneSet.setTrg( laneSet);\n\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exclusiveGateway_outgoing_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_flow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_source_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_source_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__egwToStep_source_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__laneSet_lanes_lane,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlow_sourceRef_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__normalStep_stepAlternative_alt,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__lane_flowNodeRefs_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_source_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_laneSets_laneSet,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__initFlow_steps_normalStep,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_outFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_target_step,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exclusiveGateway_default_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__egwToStep_target_normalStep,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_incoming_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_target_alt,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlowToInitFlow_target_initFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlowToInitFlow_source_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_target_flow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exclusiveGateway_outgoing_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_outgoing_outFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_incoming_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlow_targetRef_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlow_targetRef_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlow_sourceRef_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__outFlow_sourceRef_exConvGateway,\"allContextElements\");\n                                          // story node \'solve CSP\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,defaultFlow,exConvGateway,process,inFlow,outFlow,flow,inFlowToFlow,step,inFlowToStep,normalStep,alt,initFlow,exclusiveGateway,egwToStep,defaultFlowToInitFlow,divergeFlow,divergeFlowToAlt,lane,laneSet));\n\n                                             // ensure correct type and really bound of object csp\n                                             JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                             csp = (CSP) _TmpObject;\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          // statement node \'check CSP\'\n                                          fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                          if (fujaba__Success)\n                                          {\n                                             // story node \'add match to rule result\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check object isApplicableMatch is really bound\n                                                JavaSDM.ensure ( isApplicableMatch != null );\n                                                // check object ruleresult is really bound\n                                                JavaSDM.ensure ( ruleresult != null );\n                                                // assign attribute ruleresult\n                                                ruleresult.setSuccess (true);\n                                                // assign attribute isApplicableMatch\n                                                isApplicableMatch.setRuleName (\"ExclusiveConvergingGatewayDefaultSeqFlowRule\");\n\n                                                // create link\n                                                isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"defaultFlow\", defaultFlow);\nmatch.registerObject(\"exConvGateway\", exConvGateway);\nmatch.registerObject(\"process\", process);\nmatch.registerObject(\"inFlow\", inFlow);\nmatch.registerObject(\"outFlow\", outFlow);\nmatch.registerObject(\"exclusiveGateway\", exclusiveGateway);\nmatch.registerObject(\"divergeFlow\", divergeFlow);\nmatch.registerObject(\"lane\", lane);\nmatch.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, SequenceFlow defaultFlow,
			ExclusiveGateway exConvGateway, bpmn2.Process process,
			SequenceFlow inFlow, SequenceFlow outFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			Lane lane, LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Converging\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"Diverging\");\r\n\r\n// Create attribute variables\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", true, csp);\r\nvar_exConvGateway_gatewayDirection.setValue(exConvGateway.getGatewayDirection());\r\nVariable var_exclusiveGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exclusiveGateway.gatewayDirection\", true, csp);\r\nvar_exclusiveGateway_gatewayDirection.setValue(exclusiveGateway.getGatewayDirection());\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();EqGatewayDirection eqGatewayDirection_0 = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\ncsp.getConstraints().add(eqGatewayDirection_0);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exConvGateway_gatewayDirection,literal0);\r\neqGatewayDirection_0.setRuleName(\"\");\r\neqGatewayDirection_0.solve(var_exclusiveGateway_gatewayDirection,literal1);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, SequenceFlow defaultFlow,
			ExclusiveGateway exConvGateway, bpmn2.Process process,
			SequenceFlow inFlow, SequenceFlow outFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			Lane lane, LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"defaultFlow\",defaultFlow);\r\nisApplicableMatch.registerObject(\"exConvGateway\",exConvGateway);\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"outFlow\",outFlow);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"inFlowToStep\",inFlowToStep);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"exclusiveGateway\",exclusiveGateway);\r\nisApplicableMatch.registerObject(\"egwToStep\",egwToStep);\r\nisApplicableMatch.registerObject(\"defaultFlowToInitFlow\",defaultFlowToInitFlow);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			SequenceFlow defaultFlow, ExclusiveGateway exConvGateway,
			bpmn2.Process process, SequenceFlow inFlow, SequenceFlow outFlow,
			AlternativeFlow flow, SequenceFlowToUCFlow inFlowToFlow, Step step,
			SequenceFlowToStep inFlowToStep, NormalStep normalStep,
			AlternativeFlowAlternative alt, Flow initFlow,
			ExclusiveGateway exclusiveGateway, FlowNodeToStep egwToStep,
			SequenceFlowToUCFlow defaultFlowToInitFlow,
			SequenceFlow divergeFlow, SeqFlowToAltFlowAlt divergeFlowToAlt,
			Lane lane, LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"defaultFlow\", defaultFlow);\nruleresult.registerObject(\"exConvGateway\", exConvGateway);\nruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"outFlow\", outFlow);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"inFlowToFlow\", inFlowToFlow);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"inFlowToStep\", inFlowToStep);\nruleresult.registerObject(\"normalStep\", normalStep);\nruleresult.registerObject(\"ecgwToStep\", ecgwToStep);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"initFlow\", initFlow);\nruleresult.registerObject(\"outFlowToInitFlow\", outFlowToInitFlow);\nruleresult.registerObject(\"outFlowToNormalStep\", outFlowToNormalStep);\nruleresult.registerObject(\"exclusiveGateway\", exclusiveGateway);\nruleresult.registerObject(\"egwToStep\", egwToStep);\nruleresult.registerObject(\"defaultFlowToInitFlow\", defaultFlowToInitFlow);\nruleresult.registerObject(\"divergeFlow\", divergeFlow);\nruleresult.registerObject(\"divergeFlowToAlt\", divergeFlowToAlt);\nruleresult.registerObject(\"lane\", lane);\nruleresult.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject defaultFlow,
			EObject exConvGateway, EObject process, EObject inFlow,
			EObject outFlow, EObject flow, EObject inFlowToFlow, EObject step,
			EObject inFlowToStep, EObject normalStep, EObject ecgwToStep,
			EObject alt, EObject initFlow, EObject outFlowToInitFlow,
			EObject outFlowToNormalStep, EObject exclusiveGateway,
			EObject egwToStep, EObject defaultFlowToInitFlow,
			EObject divergeFlow, EObject divergeFlowToAlt, EObject lane,
			EObject laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"exConvGateway\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getExclusiveGateway()) && match.getObject(\"outFlow\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getSequenceFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_899966 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_160332 = null;\n      SequenceFlow __DEC_exConvGateway_default_915896 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_963497 = null;\n      ExclusiveGateway __DEC_outFlow_default_963497 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_488109 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_488109 = null;\n      Match match = null;\n      Iterator fujaba__IterExclusiveGatewayToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Process process = null;\n      ExclusiveGateway exConvGateway = null;\n      ExclusiveGateway exclusiveGateway = null;\n      SequenceFlow defaultFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = defaultFlow.getSourceRef ();\n\n         // ensure correct type and really bound of object exclusiveGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link default from exclusiveGateway to defaultFlow\n         JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // bind object\n         _TmpObject = defaultFlow.eContainer() instanceof Process ? (Process) defaultFlow.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(defaultFlow));\n\n         // check link flowElements from exConvGateway to process\n         JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n         ));\n\n         // check link flowElements from exclusiveGateway to process\n         JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n         ));\n\n         // check link incoming from defaultFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowElements from process to inFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToInFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n               // ensure correct type and really bound of object inFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               inFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects inFlow and defaultFlow \n               JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n               // check link incoming from inFlow to exConvGateway\n               JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n               ));\n\n               // iterate to-many link flowElements from process to outFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToOutFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and defaultFlow \n                     JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // check link outgoing from outFlow to exConvGateway\n                     JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link flowNodeRefs from exConvGateway to lane\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                     {\n                        try\n                        {\n                           lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                           // check object lane is really bound\n                           JavaSDM.ensure ( lane != null );\n                           // bind object\n                           laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n                           // check link laneSets from laneSet to process\n                           JavaSDM.ensure (process.equals (laneSet.eContainer()\n                           ));\n\n                           // iterate to-many link outgoing from exclusiveGateway to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExclusiveGatewayToDivergeFlow = new ArrayList(exclusiveGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExclusiveGatewayToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 divergeFlow = (SequenceFlow) fujaba__IterExclusiveGatewayToDivergeFlow.next ();\n\n                                 // check object divergeFlow is really bound\n                                 JavaSDM.ensure ( divergeFlow != null );\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check link flowElements from divergeFlow to process\n                                 JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_899966 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_899966 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_899966 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_899966.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_899966 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_899966.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_160332 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_160332 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_160332 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_160332.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_160332 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_160332.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_915896 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_915896 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_915896 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_915896 and defaultFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_915896.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_915896 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_915896.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_915896 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_915896.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_915896 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_915896.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_963497\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_963497 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_963497.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_963497 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_963497.next ();\n\n                                             // check object __DEC_outFlow_default_963497 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_963497 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_963497 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_963497.equals (exConvGateway) );\n\n                                             // check isomorphic binding between objects __DEC_outFlow_default_963497 and exclusiveGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_963497.equals (exclusiveGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_488109\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_488109 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_488109.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_488109 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_488109.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_488109 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_488109 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_488109 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_488109.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_488109 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_488109.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_488109 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_488109.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_488109 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_488109.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_targetRef is really bound\n                                    JavaSDM.ensure ( _edge_targetRef != null );\n                                    // check object defaultFlow is really bound\n                                    JavaSDM.ensure ( defaultFlow != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object exclusiveGateway is really bound\n                                    JavaSDM.ensure ( exclusiveGateway != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects divergeFlow and defaultFlow \n                                    JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and defaultFlow \n                                    JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects outFlow and defaultFlow \n                                    JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                    JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exclusiveGateway to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                    ));\n\n                                    // check link default from exConvGateway to defaultFlow\n                                    JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exclusiveGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from defaultFlow to process\n                                    JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from exclusiveGateway to process\n                                    JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from defaultFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from defaultFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_targetRef to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (_edge_targetRef.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_targetRef to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_415(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_756738 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_536241 = null;\n      SequenceFlow __DEC_exConvGateway_default_709194 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_657423 = null;\n      ExclusiveGateway __DEC_outFlow_default_657423 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_974579 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_974579 = null;\n      Match match = null;\n      Iterator fujaba__IterDefaultFlowTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      Iterator fujaba__IterExclusiveGatewayToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Process process = null;\n      SequenceFlow defaultFlow = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_incoming.getTrg ();\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = defaultFlow.eContainer() instanceof Process ? (Process) defaultFlow.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(defaultFlow));\n\n         // check link flowElements from exConvGateway to process\n         JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n         ));\n\n         // check link incoming from defaultFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowElements from process to inFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToInFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n               // ensure correct type and really bound of object inFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               inFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects inFlow and defaultFlow \n               JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n               // check link incoming from inFlow to exConvGateway\n               JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n               ));\n\n               // iterate to-many link flowElements from process to outFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToOutFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and defaultFlow \n                     JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // check link outgoing from outFlow to exConvGateway\n                     JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowNodeRefs from exConvGateway to lane\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                     {\n                        try\n                        {\n                           lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                           // check object lane is really bound\n                           JavaSDM.ensure ( lane != null );\n                           // bind object\n                           laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n                           // check link laneSets from laneSet to process\n                           JavaSDM.ensure (process.equals (laneSet.eContainer()\n                           ));\n\n                           // iterate to-many link outgoing from exclusiveGateway to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExclusiveGatewayToDivergeFlow = new ArrayList(exclusiveGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExclusiveGatewayToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 divergeFlow = (SequenceFlow) fujaba__IterExclusiveGatewayToDivergeFlow.next ();\n\n                                 // check object divergeFlow is really bound\n                                 JavaSDM.ensure ( divergeFlow != null );\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check link flowElements from divergeFlow to process\n                                 JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                 ));\n\n                                 // iterate to-many link src from defaultFlow to _edge_targetRef\n                                 fujaba__Success = false;\n\n                                 fujaba__IterDefaultFlowTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(defaultFlow,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterDefaultFlowTo_edge_targetRef.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_targetRef = (EMoflonEdge) fujaba__IterDefaultFlowTo_edge_targetRef.next ();\n\n                                       // check object _edge_targetRef is really bound\n                                       JavaSDM.ensure ( _edge_targetRef != null );\n                                       // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                       JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                       // check link trg from _edge_targetRef to exConvGateway\n                                       JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_756738 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_756738 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_756738 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_756738.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_756738 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_756738.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_536241 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_536241 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_536241 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_536241.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_536241 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_536241.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_709194 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_709194 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_709194 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_709194 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_709194.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_709194 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_709194.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_709194 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_709194.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_709194 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_709194.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_657423\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_657423 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_657423.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_657423 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_657423.next ();\n\n                                                   // check object __DEC_outFlow_default_657423 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_657423 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_657423 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_657423.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_657423 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_657423.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_974579\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_974579 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_974579.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_974579 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_974579.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_974579 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_974579 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_974579 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_974579.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_974579 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_974579.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_974579 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_974579.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_974579 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_974579.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_incoming is really bound\n                                          JavaSDM.ensure ( _edge_incoming != null );\n                                          // check object _edge_targetRef is really bound\n                                          JavaSDM.ensure ( _edge_targetRef != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                          JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from defaultFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_incoming to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_incoming.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_targetRef to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (_edge_targetRef.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_incoming to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (_edge_incoming.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_targetRef to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_416(
			EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_735158 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_918239 = null;\n      SequenceFlow __DEC_exConvGateway_default_251095 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_771247 = null;\n      ExclusiveGateway __DEC_outFlow_default_771247 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17614 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_17614 = null;\n      Match match = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      ExclusiveGateway exConvGateway = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // bind object\n               _TmpObject = _edge_flowElements.getTrg ();\n\n               // ensure correct type and really bound of object outFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               outFlow = (SequenceFlow) _TmpObject;\n\n               // check isomorphic binding between objects outFlow and divergeFlow \n               JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n               // check link flowElements from outFlow to process\n               JavaSDM.ensure (process.equals (outFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                     // ensure correct type and really bound of object defaultFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     defaultFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                     // check isomorphic binding between objects outFlow and defaultFlow \n                     JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                     // bind object\n                     _TmpObject = defaultFlow.getTargetRef ();\n\n                     // ensure correct type and really bound of object exConvGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exConvGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check link flowElements from exConvGateway to process\n                     JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                     ));\n\n                     // check link outgoing from outFlow to exConvGateway\n                     JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // check link outgoing from divergeFlow to exclusiveGateway\n                     JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link flowElements from process to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                           // ensure correct type and really bound of object inFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           inFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check isomorphic binding between objects outFlow and inFlow \n                           JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                           // check link incoming from inFlow to exConvGateway\n                           JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                           ));\n\n                           // iterate to-many link flowNodeRefs from exConvGateway to lane\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                           {\n                              try\n                              {\n                                 lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                                 // check object lane is really bound\n                                 JavaSDM.ensure ( lane != null );\n                                 // bind object\n                                 laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n                                 // check link laneSets from laneSet to process\n                                 JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_735158 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_735158 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_735158 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_735158.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_735158 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_735158.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_918239 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_918239 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_918239 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_918239.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_918239 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_918239.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_251095 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_251095 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_251095 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_251095 and defaultFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_251095.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_251095 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_251095.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_251095 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_251095.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_251095 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_251095.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_771247\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_771247 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_771247.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_771247 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_771247.next ();\n\n                                             // check object __DEC_outFlow_default_771247 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_771247 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_771247 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_771247.equals (exConvGateway) );\n\n                                             // check isomorphic binding between objects __DEC_outFlow_default_771247 and exclusiveGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_771247.equals (exclusiveGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_17614\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17614 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17614.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_17614 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17614.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_17614 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_17614 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17614 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17614.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17614 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17614.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17614 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17614.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17614 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17614.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_flowElements is really bound\n                                    JavaSDM.ensure ( _edge_flowElements != null );\n                                    // check object defaultFlow is really bound\n                                    JavaSDM.ensure ( defaultFlow != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object exclusiveGateway is really bound\n                                    JavaSDM.ensure ( exclusiveGateway != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects divergeFlow and defaultFlow \n                                    JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and defaultFlow \n                                    JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects outFlow and defaultFlow \n                                    JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                    JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exclusiveGateway to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                    ));\n\n                                    // check link default from exConvGateway to defaultFlow\n                                    JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exclusiveGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from defaultFlow to process\n                                    JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from exclusiveGateway to process\n                                    JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from defaultFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from defaultFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_flowElements to process\n                                    JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_flowElements to outFlow\n                                    JavaSDM.ensure (outFlow.equals (_edge_flowElements.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_417(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_500678 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_640586 = null;\n      SequenceFlow __DEC_exConvGateway_default_624689 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_928593 = null;\n      ExclusiveGateway __DEC_outFlow_default_928593 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17808 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_17808 = null;\n      Match match = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      ExclusiveGateway exConvGateway = null;\n      Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_flowElements.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link flowElements from exConvGateway to process\n         JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n         ));\n\n         // iterate to-many link flowElements from process to defaultFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n               // ensure correct type and really bound of object defaultFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               defaultFlow = (SequenceFlow) _TmpObject;\n               // check link incoming from defaultFlow to exConvGateway\n               JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n               ));\n\n               // bind object\n               _TmpObject = defaultFlow.getSourceRef ();\n\n               // ensure correct type and really bound of object exclusiveGateway\n               JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n               exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n               // check isomorphic binding between objects exclusiveGateway and exConvGateway \n               JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n               // check link default from exclusiveGateway to defaultFlow\n               JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n               ));\n\n               // check link flowElements from exclusiveGateway to process\n               JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                     // check link outgoing from divergeFlow to exclusiveGateway\n                     JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link flowElements from process to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                           // ensure correct type and really bound of object inFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           inFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check link incoming from inFlow to exConvGateway\n                           JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                                 // ensure correct type and really bound of object outFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 outFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects outFlow and defaultFlow \n                                 JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link outgoing from outFlow to exConvGateway\n                                 JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                 ));\n\n                                 // iterate to-many link flowNodeRefs from exConvGateway to lane\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                                       // check object lane is really bound\n                                       JavaSDM.ensure ( lane != null );\n                                       // bind object\n                                       laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n                                       // check link laneSets from laneSet to process\n                                       JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_500678 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_500678 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_500678 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_500678.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_500678 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_500678.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_640586 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_640586 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_640586 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_640586.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_640586 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_640586.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_624689 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_624689 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_624689 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_624689 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_624689.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_624689 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_624689.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_624689 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_624689.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_624689 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_624689.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_928593\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_928593 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_928593.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_928593 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_928593.next ();\n\n                                                   // check object __DEC_outFlow_default_928593 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_928593 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_928593 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_928593.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_928593 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_928593.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_17808\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17808 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17808.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_17808 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_17808.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_17808 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_17808 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17808 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17808.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17808 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17808.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17808 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17808.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_17808 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_17808.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowElements is really bound\n                                          JavaSDM.ensure ( _edge_flowElements != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from defaultFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowElements to process\n                                          JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_flowElements to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_flowElements.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_418(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_784051 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_673934 = null;\n      SequenceFlow __DEC_exConvGateway_default_928288 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_208275 = null;\n      ExclusiveGateway __DEC_outFlow_default_208275 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_581807 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_581807 = null;\n      Match match = null;\n      Iterator fujaba__IterExclusiveGatewayToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterExConvGatewayToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Process process = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = exConvGateway.eContainer() instanceof Process ? (Process) exConvGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n         // check link flowElements from inFlow to process\n         JavaSDM.ensure (process.equals (inFlow.eContainer()\n         ));\n\n         // check link incoming from inFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n               // check link laneSets from laneSet to process\n               JavaSDM.ensure (process.equals (laneSet.eContainer()\n               ));\n\n               // iterate to-many link incoming from exConvGateway to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToDefaultFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     defaultFlow = (SequenceFlow) fujaba__IterExConvGatewayToDefaultFlow.next ();\n\n                     // check object defaultFlow is really bound\n                     JavaSDM.ensure ( defaultFlow != null );\n                     // check isomorphic binding between objects inFlow and defaultFlow \n                     JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                     // check link flowElements from defaultFlow to process\n                     JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // iterate to-many link outgoing from exConvGateway to outFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                     {\n                        try\n                        {\n                           outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                           // check object outFlow is really bound\n                           JavaSDM.ensure ( outFlow != null );\n                           // check isomorphic binding between objects outFlow and defaultFlow \n                           JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects outFlow and inFlow \n                           JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                           // check link flowElements from outFlow to process\n                           JavaSDM.ensure (process.equals (outFlow.eContainer()\n                           ));\n\n                           // iterate to-many link outgoing from exclusiveGateway to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExclusiveGatewayToDivergeFlow = new ArrayList(exclusiveGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExclusiveGatewayToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 divergeFlow = (SequenceFlow) fujaba__IterExclusiveGatewayToDivergeFlow.next ();\n\n                                 // check object divergeFlow is really bound\n                                 JavaSDM.ensure ( divergeFlow != null );\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check link flowElements from divergeFlow to process\n                                 JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_784051 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_784051 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_784051 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_784051.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_784051 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_784051.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_673934 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_673934 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_673934 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_673934.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_673934 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_673934.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_928288 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_928288 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_928288 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_928288 and defaultFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_928288.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_928288 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_928288.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_928288 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_928288.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_928288 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_928288.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_208275\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_208275 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_208275.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_208275 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_208275.next ();\n\n                                             // check object __DEC_outFlow_default_208275 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_208275 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_208275 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_208275.equals (exConvGateway) );\n\n                                             // check isomorphic binding between objects __DEC_outFlow_default_208275 and exclusiveGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_208275.equals (exclusiveGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_581807\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_581807 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_581807.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_581807 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_581807.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_581807 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_581807 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_581807 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_581807.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_581807 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_581807.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_581807 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_581807.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_581807 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_581807.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_targetRef is really bound\n                                    JavaSDM.ensure ( _edge_targetRef != null );\n                                    // check object defaultFlow is really bound\n                                    JavaSDM.ensure ( defaultFlow != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object exclusiveGateway is really bound\n                                    JavaSDM.ensure ( exclusiveGateway != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects divergeFlow and defaultFlow \n                                    JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and defaultFlow \n                                    JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects outFlow and defaultFlow \n                                    JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                    JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exclusiveGateway to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                    ));\n\n                                    // check link default from exConvGateway to defaultFlow\n                                    JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exclusiveGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from defaultFlow to process\n                                    JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from exclusiveGateway to process\n                                    JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from defaultFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from defaultFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_targetRef to inFlow\n                                    JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_targetRef to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_419(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_374946 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_22562 = null;\n      SequenceFlow __DEC_exConvGateway_default_305479 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_880859 = null;\n      ExclusiveGateway __DEC_outFlow_default_880859 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_584582 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_584582 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Process process = null;\n      Iterator fujaba__IterExConvGatewayToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getTrg ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link incoming from inFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n               // iterate to-many link incoming from exConvGateway to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToDefaultFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     defaultFlow = (SequenceFlow) fujaba__IterExConvGatewayToDefaultFlow.next ();\n\n                     // check object defaultFlow is really bound\n                     JavaSDM.ensure ( defaultFlow != null );\n                     // check isomorphic binding between objects inFlow and defaultFlow \n                     JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                     // bind object\n                     _TmpObject = exConvGateway.eContainer() instanceof Process ? (Process) exConvGateway.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof Process );\n                     process = (Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n                     // check link flowElements from defaultFlow to process\n                     JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                     ));\n\n                     // check link flowElements from inFlow to process\n                     JavaSDM.ensure (process.equals (inFlow.eContainer()\n                     ));\n\n                     // check link laneSets from laneSet to process\n                     JavaSDM.ensure (process.equals (laneSet.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check link outgoing from divergeFlow to exclusiveGateway\n                           JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link outgoing from exConvGateway to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                 // check object outFlow is really bound\n                                 JavaSDM.ensure ( outFlow != null );\n                                 // check isomorphic binding between objects outFlow and defaultFlow \n                                 JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link flowElements from outFlow to process\n                                 JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                 ));\n\n                                 // iterate to-many link trg from exConvGateway to _edge_targetRef\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayTo_edge_targetRef.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_targetRef = (EMoflonEdge) fujaba__IterExConvGatewayTo_edge_targetRef.next ();\n\n                                       // check object _edge_targetRef is really bound\n                                       JavaSDM.ensure ( _edge_targetRef != null );\n                                       // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                       JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                       // check link src from _edge_targetRef to inFlow\n                                       JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_374946 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_374946 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_374946 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_374946.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_374946 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_374946.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_22562 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_22562 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_22562 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_22562.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_22562 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_22562.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_305479 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_305479 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_305479 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_305479 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_305479.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_305479 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_305479.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_305479 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_305479.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_305479 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_305479.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_880859\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_880859 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_880859.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_880859 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_880859.next ();\n\n                                                   // check object __DEC_outFlow_default_880859 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_880859 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_880859 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_880859.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_880859 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_880859.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_584582\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_584582 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_584582.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_584582 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_584582.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_584582 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_584582 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_584582 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_584582.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_584582 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_584582.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_584582 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_584582.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_584582 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_584582.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_incoming is really bound\n                                          JavaSDM.ensure ( _edge_incoming != null );\n                                          // check object _edge_targetRef is really bound\n                                          JavaSDM.ensure ( _edge_targetRef != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                          JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from defaultFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_incoming to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_incoming.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_targetRef to inFlow\n                                          JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_incoming to inFlow\n                                          JavaSDM.ensure (inFlow.equals (_edge_incoming.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_targetRef to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_420(
			EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_612302 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_96286 = null;\n      SequenceFlow __DEC_exConvGateway_default_973995 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_338601 = null;\n      ExclusiveGateway __DEC_outFlow_default_338601 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_559642 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_559642 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Process process = null;\n      Iterator fujaba__IterExConvGatewayToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sourceRef is really bound\n         JavaSDM.ensure ( _edge_sourceRef != null );\n         // bind object\n         _TmpObject = _edge_sourceRef.getSrc ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_sourceRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link outgoing from outFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n               // iterate to-many link incoming from exConvGateway to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToDefaultFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     defaultFlow = (SequenceFlow) fujaba__IterExConvGatewayToDefaultFlow.next ();\n\n                     // check object defaultFlow is really bound\n                     JavaSDM.ensure ( defaultFlow != null );\n                     // check isomorphic binding between objects outFlow and defaultFlow \n                     JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                     // bind object\n                     _TmpObject = exConvGateway.eContainer() instanceof Process ? (Process) exConvGateway.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof Process );\n                     process = (Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n                     // check link flowElements from defaultFlow to process\n                     JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                     ));\n\n                     // check link flowElements from outFlow to process\n                     JavaSDM.ensure (process.equals (outFlow.eContainer()\n                     ));\n\n                     // check link laneSets from laneSet to process\n                     JavaSDM.ensure (process.equals (laneSet.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects outFlow and divergeFlow \n                           JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                           // check link outgoing from divergeFlow to exclusiveGateway\n                           JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link incoming from exConvGateway to inFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                                 // check object inFlow is really bound\n                                 JavaSDM.ensure ( inFlow != null );\n                                 // check isomorphic binding between objects inFlow and defaultFlow \n                                 JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link flowElements from inFlow to process\n                                 JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_612302 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_612302 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_612302 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_612302.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_612302 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_612302.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_96286 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_96286 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_96286 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_96286.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_96286 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_96286.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_973995 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_973995 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_973995 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_973995 and defaultFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_973995.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_973995 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_973995.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_973995 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_973995.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_973995 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_973995.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_338601\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_338601 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_338601.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_338601 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_338601.next ();\n\n                                             // check object __DEC_outFlow_default_338601 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_338601 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_338601 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_338601.equals (exConvGateway) );\n\n                                             // check isomorphic binding between objects __DEC_outFlow_default_338601 and exclusiveGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_338601.equals (exclusiveGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_559642\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_559642 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_559642.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_559642 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_559642.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_559642 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_559642 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_559642 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_559642.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_559642 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_559642.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_559642 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_559642.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_559642 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_559642.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_sourceRef is really bound\n                                    JavaSDM.ensure ( _edge_sourceRef != null );\n                                    // check object defaultFlow is really bound\n                                    JavaSDM.ensure ( defaultFlow != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object exclusiveGateway is really bound\n                                    JavaSDM.ensure ( exclusiveGateway != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects divergeFlow and defaultFlow \n                                    JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and defaultFlow \n                                    JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects outFlow and defaultFlow \n                                    JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                    JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exclusiveGateway to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                    ));\n\n                                    // check link default from exConvGateway to defaultFlow\n                                    JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exclusiveGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from defaultFlow to process\n                                    JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from exclusiveGateway to process\n                                    JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from defaultFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from defaultFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_sourceRef to outFlow\n                                    JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sourceRef to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_421(
			EMoflonEdge _edge_sourceRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_499313 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_941036 = null;\n      SequenceFlow __DEC_exConvGateway_default_76934 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_859301 = null;\n      ExclusiveGateway __DEC_outFlow_default_859301 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_417155 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_417155 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Process process = null;\n      Iterator fujaba__IterExConvGatewayToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow outFlow = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterExConvGatewayTo_edge_sourceRef = null;\n      EMoflonEdge _edge_sourceRef = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_outgoing is really bound\n         JavaSDM.ensure ( _edge_outgoing != null );\n         // bind object\n         _TmpObject = _edge_outgoing.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // iterate to-many link trg from exConvGateway to _edge_sourceRef\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayTo_edge_sourceRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayTo_edge_sourceRef.hasNext () )\n         {\n            try\n            {\n               _edge_sourceRef = (EMoflonEdge) fujaba__IterExConvGatewayTo_edge_sourceRef.next ();\n\n               // check object _edge_sourceRef is really bound\n               JavaSDM.ensure ( _edge_sourceRef != null );\n               // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n               JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n               // iterate to-many link flowNodeRefs from exConvGateway to lane\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n               while ( fujaba__IterExConvGatewayToLane.hasNext () )\n               {\n                  try\n                  {\n                     lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                     // check object lane is really bound\n                     JavaSDM.ensure ( lane != null );\n                     // bind object\n                     laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n                     // check object laneSet is really bound\n                     JavaSDM.ensure ( laneSet != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n                     // bind object\n                     _TmpObject = _edge_outgoing.getTrg ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n\n                     // check link outgoing from outFlow to exConvGateway\n                     JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // check link src from _edge_sourceRef to outFlow\n                     JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                     ));\n\n                     // iterate to-many link incoming from exConvGateway to defaultFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToDefaultFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToDefaultFlow.hasNext () )\n                     {\n                        try\n                        {\n                           defaultFlow = (SequenceFlow) fujaba__IterExConvGatewayToDefaultFlow.next ();\n\n                           // check object defaultFlow is really bound\n                           JavaSDM.ensure ( defaultFlow != null );\n                           // check isomorphic binding between objects outFlow and defaultFlow \n                           JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                           // bind object\n                           _TmpObject = exConvGateway.eContainer() instanceof Process ? (Process) exConvGateway.eContainer() : null;\n\n                           // ensure correct type and really bound of object process\n                           JavaSDM.ensure ( _TmpObject instanceof Process );\n                           process = (Process) _TmpObject;\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n                           // check link flowElements from defaultFlow to process\n                           JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                           ));\n\n                           // check link flowElements from outFlow to process\n                           JavaSDM.ensure (process.equals (outFlow.eContainer()\n                           ));\n\n                           // check link laneSets from laneSet to process\n                           JavaSDM.ensure (process.equals (laneSet.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = defaultFlow.getSourceRef ();\n\n                           // ensure correct type and really bound of object exclusiveGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                           exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                           // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                           JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                           // check link default from exclusiveGateway to defaultFlow\n                           JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                           ));\n\n                           // check link flowElements from exclusiveGateway to process\n                           JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                           ));\n\n                           // iterate to-many link flowElements from process to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                                 // ensure correct type and really bound of object divergeFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 divergeFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check link outgoing from divergeFlow to exclusiveGateway\n                                 JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                 ));\n\n                                 // iterate to-many link incoming from exConvGateway to inFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                                       // check object inFlow is really bound\n                                       JavaSDM.ensure ( inFlow != null );\n                                       // check isomorphic binding between objects inFlow and defaultFlow \n                                       JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects inFlow and divergeFlow \n                                       JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from inFlow to process\n                                       JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_499313 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_499313 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_499313 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_499313.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_499313 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_499313.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_941036 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_941036 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_941036 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_941036.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_941036 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_941036.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_76934 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_76934 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_76934 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_76934 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_76934.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_76934 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_76934.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_76934 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_76934.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_76934 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_76934.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_859301\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_859301 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_859301.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_859301 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_859301.next ();\n\n                                                   // check object __DEC_outFlow_default_859301 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_859301 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_859301 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_859301.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_859301 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_859301.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_417155\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_417155 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_417155.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_417155 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_417155.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_417155 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_417155 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_417155 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_417155.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_417155 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_417155.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_417155 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_417155.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_417155 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_417155.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_outgoing is really bound\n                                          JavaSDM.ensure ( _edge_outgoing != null );\n                                          // check object _edge_sourceRef is really bound\n                                          JavaSDM.ensure ( _edge_sourceRef != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                          JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from defaultFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_outgoing to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_outgoing.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_sourceRef to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_outgoing to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_outgoing.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_sourceRef to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_422(
			EMoflonEdge _edge_outgoing);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_943403 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_194497 = null;\n      SequenceFlow __DEC_exConvGateway_default_989330 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_287257 = null;\n      ExclusiveGateway __DEC_outFlow_default_287257 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_980384 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_980384 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterExConvGatewayToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Process process = null;\n      ExclusiveGateway exConvGateway = null;\n      LaneSet laneSet = null;\n      Lane lane = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowNodeRefs is really bound\n         JavaSDM.ensure ( _edge_flowNodeRefs != null );\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getSrc ();\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n\n         // bind object\n         laneSet = lane.eContainer() instanceof LaneSet ? (LaneSet) lane.eContainer() : null;\n\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(laneSet.getLanes().contains(lane));\n\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = exConvGateway.eContainer() instanceof Process ? (Process) exConvGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n         // check link laneSets from laneSet to process\n         JavaSDM.ensure (process.equals (laneSet.eContainer()\n         ));\n\n         // check link flowNodeRefs from lane to exConvGateway\n         JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // iterate to-many link incoming from exConvGateway to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToDefaultFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     defaultFlow = (SequenceFlow) fujaba__IterExConvGatewayToDefaultFlow.next ();\n\n                     // check object defaultFlow is really bound\n                     JavaSDM.ensure ( defaultFlow != null );\n                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                     // check link flowElements from defaultFlow to process\n                     JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = defaultFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // check link outgoing from divergeFlow to exclusiveGateway\n                     JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link incoming from exConvGateway to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                           // check object inFlow is really bound\n                           JavaSDM.ensure ( inFlow != null );\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check link flowElements from inFlow to process\n                           JavaSDM.ensure (process.equals (inFlow.eContainer()\n                           ));\n\n                           // iterate to-many link outgoing from exConvGateway to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                 // check object outFlow is really bound\n                                 JavaSDM.ensure ( outFlow != null );\n                                 // check isomorphic binding between objects outFlow and defaultFlow \n                                 JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link flowElements from outFlow to process\n                                 JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_943403 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_943403 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_943403 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_943403.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_943403 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_943403.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_194497 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_194497 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_194497 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_194497.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_194497 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_194497.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_989330 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_989330 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_989330 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_989330 and defaultFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_989330.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_989330 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_989330.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_989330 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_989330.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_989330 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_989330.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_287257\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_287257 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_287257.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_287257 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_287257.next ();\n\n                                             // check object __DEC_outFlow_default_287257 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_287257 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_287257 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_287257.equals (exConvGateway) );\n\n                                             // check isomorphic binding between objects __DEC_outFlow_default_287257 and exclusiveGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_287257.equals (exclusiveGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_980384\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_980384 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_980384.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_980384 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_980384.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_980384 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_980384 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_980384 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_980384.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_980384 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_980384.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_980384 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_980384.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_980384 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_980384.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_flowNodeRefs is really bound\n                                    JavaSDM.ensure ( _edge_flowNodeRefs != null );\n                                    // check object defaultFlow is really bound\n                                    JavaSDM.ensure ( defaultFlow != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object exclusiveGateway is really bound\n                                    JavaSDM.ensure ( exclusiveGateway != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects divergeFlow and defaultFlow \n                                    JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and defaultFlow \n                                    JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects outFlow and defaultFlow \n                                    JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                    JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exclusiveGateway to defaultFlow\n                                    JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                    ));\n\n                                    // check link default from exConvGateway to defaultFlow\n                                    JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exclusiveGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from defaultFlow to process\n                                    JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from exclusiveGateway to process\n                                    JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from defaultFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (defaultFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from defaultFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to exclusiveGateway\n                                    JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_flowNodeRefs to lane\n                                    JavaSDM.ensure (lane.equals (_edge_flowNodeRefs.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_flowNodeRefs to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_flowNodeRefs.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,defaultFlow,exConvGateway,process,inFlow,outFlow,exclusiveGateway,divergeFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_423(
			EMoflonEdge _edge_flowNodeRefs);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      Iterator fujaba__IterInFlowToInFlowToStep = null;\n      SequenceFlowToStep inFlowToStep = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterExclusiveGatewayToEgwToStep = null;\n      FlowNodeToStep egwToStep = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterFlowToStep = null;\n      Step step = null;\n      Flow initFlow = null;\n      Iterator fujaba__IterDefaultFlowToDefaultFlowToInitFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n      Iterator fujaba__IterLaneSetToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      AlternativeFlow flow = null;\n      AlternativeFlowAlternative alt = null;\n      Process process = null;\n      SequenceFlow defaultFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterDivergeFlowToAltListToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      Iterator fujaba__IterRuleEntryContainerToDivergeFlowToAltList = null;\n      RuleEntryList divergeFlowToAltList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to divergeFlowToAltList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToDivergeFlowToAltList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToDivergeFlowToAltList.hasNext () )\n         {\n            try\n            {\n               divergeFlowToAltList = (RuleEntryList) fujaba__IterRuleEntryContainerToDivergeFlowToAltList.next ();\n\n               // check object divergeFlowToAltList is really bound\n               JavaSDM.ensure ( divergeFlowToAltList != null );\n               // iterate to-many link entryObjects from divergeFlowToAltList to divergeFlowToAlt\n               fujaba__Success = false;\n\n               fujaba__IterDivergeFlowToAltListToDivergeFlowToAlt = new ArrayList(divergeFlowToAltList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterDivergeFlowToAltListToDivergeFlowToAlt.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterDivergeFlowToAltListToDivergeFlowToAlt.next ();\n\n                     // ensure correct type and really bound of object divergeFlowToAlt\n                     JavaSDM.ensure ( _TmpObject instanceof SeqFlowToAltFlowAlt );\n                     divergeFlowToAlt = (SeqFlowToAltFlowAlt) _TmpObject;\n                     // bind object\n                     divergeFlow = divergeFlowToAlt.getSource ();\n\n                     // check object divergeFlow is really bound\n                     JavaSDM.ensure ( divergeFlow != null );\n\n                     // bind object\n                     _TmpObject = divergeFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // bind object\n                     defaultFlow = exclusiveGateway.getDefault ();\n\n                     // check object defaultFlow is really bound\n                     JavaSDM.ensure ( defaultFlow != null );\n\n                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                     // bind object\n                     _TmpObject = divergeFlow.eContainer() instanceof Process ? (Process) divergeFlow.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof Process );\n                     process = (Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(divergeFlow));\n\n                     // check link flowElements from defaultFlow to process\n                     JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // check link outgoing from defaultFlow to exclusiveGateway\n                     JavaSDM.ensure (exclusiveGateway.equals (defaultFlow.getSourceRef ()\n                     ));\n\n                     // bind object\n                     alt = divergeFlowToAlt.getTarget ();\n\n                     // check object alt is really bound\n                     JavaSDM.ensure ( alt != null );\n\n                     // bind object\n                     _TmpObject = alt.getRef ();\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                     flow = (AlternativeFlow) _TmpObject;\n\n                     // iterate to-many link laneSets from process to laneSet\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                     while ( fujaba__IterProcessToLaneSet.hasNext () )\n                     {\n                        try\n                        {\n                           laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n                           // iterate to-many link lanes from laneSet to lane\n                           fujaba__Success = false;\n\n                           fujaba__IterLaneSetToLane = new ArrayList(laneSet.getLanes()).iterator ();\n\n                           while ( fujaba__IterLaneSetToLane.hasNext () )\n                           {\n                              try\n                              {\n                                 lane = (Lane) fujaba__IterLaneSetToLane.next ();\n\n                                 // check object lane is really bound\n                                 JavaSDM.ensure ( lane != null );\n                                 // iterate to-many link source from defaultFlow to defaultFlowToInitFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterDefaultFlowToDefaultFlowToInitFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(defaultFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                                 while ( fujaba__IterDefaultFlowToDefaultFlowToInitFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       defaultFlowToInitFlow = (SequenceFlowToUCFlow) fujaba__IterDefaultFlowToDefaultFlowToInitFlow.next ();\n\n                                       // check object defaultFlowToInitFlow is really bound\n                                       JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                       // bind object\n                                       initFlow = defaultFlowToInitFlow.getTarget ();\n\n                                       // check object initFlow is really bound\n                                       JavaSDM.ensure ( initFlow != null );\n\n                                       // check isomorphic binding between objects initFlow and flow \n                                       JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                       // iterate to-many link steps from flow to step\n                                       fujaba__Success = false;\n\n                                       fujaba__IterFlowToStep = new ArrayList(flow.getSteps()).iterator ();\n\n                                       while ( fujaba__IterFlowToStep.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             step = (Step) fujaba__IterFlowToStep.next ();\n\n                                             // check object step is really bound\n                                             JavaSDM.ensure ( step != null );\n                                             // iterate to-many link flowElements from process to inFlow\n                                             fujaba__Success = false;\n\n                                             fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                                             while ( fujaba__IterProcessToInFlow.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                                                   // ensure correct type and really bound of object inFlow\n                                                   JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                                   inFlow = (SequenceFlow) _TmpObject;\n                                                   // check isomorphic binding between objects inFlow and defaultFlow \n                                                   JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects inFlow and divergeFlow \n                                                   JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                   // iterate to-many link source from exclusiveGateway to egwToStep\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterExclusiveGatewayToEgwToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exclusiveGateway,FlowNodeToStep.class,\"source\")).iterator ();\n\n                                                   while ( fujaba__IterExclusiveGatewayToEgwToStep.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         egwToStep = (FlowNodeToStep) fujaba__IterExclusiveGatewayToEgwToStep.next ();\n\n                                                         // check object egwToStep is really bound\n                                                         JavaSDM.ensure ( egwToStep != null );\n                                                         // bind object\n                                                         _TmpObject = egwToStep.getTarget ();\n\n                                                         // ensure correct type and really bound of object normalStep\n                                                         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                                                         normalStep = (NormalStep) _TmpObject;\n\n                                                         // check isomorphic binding between objects step and normalStep \n                                                         JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                                         // check link stepAlternative from alt to normalStep\n                                                         JavaSDM.ensure (normalStep.equals (alt.eContainer()\n                                                         ));\n\n                                                         // check link steps from normalStep to initFlow\n                                                         JavaSDM.ensure (initFlow.equals (normalStep.eContainer()\n                                                         ));\n\n                                                         // iterate to-many link source from inFlow to inFlowToFlow\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                                                         while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n                                                               // check object inFlowToFlow is really bound\n                                                               JavaSDM.ensure ( inFlowToFlow != null );\n                                                               // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n                                                               JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                                               // check link target from inFlowToFlow to flow\n                                                               JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                                               ));\n\n                                                               // iterate to-many link source from inFlow to inFlowToStep\n                                                               fujaba__Success = false;\n\n                                                               fujaba__IterInFlowToInFlowToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToStep.class,\"source\")).iterator ();\n\n                                                               while ( fujaba__IterInFlowToInFlowToStep.hasNext () )\n                                                               {\n                                                                  try\n                                                                  {\n                                                                     inFlowToStep = (SequenceFlowToStep) fujaba__IterInFlowToInFlowToStep.next ();\n\n                                                                     // check object inFlowToStep is really bound\n                                                                     JavaSDM.ensure ( inFlowToStep != null );\n                                                                     // check link target from inFlowToStep to step\n                                                                     JavaSDM.ensure (step.equals (inFlowToStep.getTarget ()\n                                                                     ));\n\n                                                                     // story node \'solve CSP\'\n                                                                     try \n                                                                     {\n                                                                        fujaba__Success = false; \n\n                                                                        _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,defaultFlow,exConvGateway,process,inFlow,outFlow,flow,inFlowToFlow,step,inFlowToStep,normalStep,ecgwToStep,alt,initFlow,outFlowToInitFlow,outFlowToNormalStep,exclusiveGateway,egwToStep,defaultFlowToInitFlow,divergeFlow,divergeFlowToAlt,lane,laneSet,ruleResult));\n\n                                                                        // ensure correct type and really bound of object csp\n                                                                        JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                                                        csp = (CSP) _TmpObject;\n                                                                        fujaba__Success = true;\n                                                                     }\n                                                                     catch ( JavaSDMException fujaba__InternalException )\n                                                                     {\n                                                                        fujaba__Success = false;\n                                                                     }\n\n                                                                     // statement node \'check CSP\'\n                                                                     fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                                                                     if (fujaba__Success)\n                                                                     {\n                                                                        // story node \'perform\'\n                                                                        try \n                                                                        {\n                                                                           fujaba__Success = false; \n\n                                                                           // check object alt is really bound\n                                                                           JavaSDM.ensure ( alt != null );\n                                                                           // check object defaultFlow is really bound\n                                                                           JavaSDM.ensure ( defaultFlow != null );\n                                                                           // check object defaultFlowToInitFlow is really bound\n                                                                           JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                                                           // check object divergeFlow is really bound\n                                                                           JavaSDM.ensure ( divergeFlow != null );\n                                                                           // check object divergeFlowToAlt is really bound\n                                                                           JavaSDM.ensure ( divergeFlowToAlt != null );\n                                                                           // check object egwToStep is really bound\n                                                                           JavaSDM.ensure ( egwToStep != null );\n                                                                           // check object exclusiveGateway is really bound\n                                                                           JavaSDM.ensure ( exclusiveGateway != null );\n                                                                           // check object flow is really bound\n                                                                           JavaSDM.ensure ( flow != null );\n                                                                           // check object inFlow is really bound\n                                                                           JavaSDM.ensure ( inFlow != null );\n                                                                           // check object inFlowToFlow is really bound\n                                                                           JavaSDM.ensure ( inFlowToFlow != null );\n                                                                           // check object inFlowToStep is really bound\n                                                                           JavaSDM.ensure ( inFlowToStep != null );\n                                                                           // check object initFlow is really bound\n                                                                           JavaSDM.ensure ( initFlow != null );\n                                                                           // check object lane is really bound\n                                                                           JavaSDM.ensure ( lane != null );\n                                                                           // check object laneSet is really bound\n                                                                           JavaSDM.ensure ( laneSet != null );\n                                                                           // check object normalStep is really bound\n                                                                           JavaSDM.ensure ( normalStep != null );\n                                                                           // check object process is really bound\n                                                                           JavaSDM.ensure ( process != null );\n                                                                           // check object ruleResult is really bound\n                                                                           JavaSDM.ensure ( ruleResult != null );\n                                                                           // check object step is really bound\n                                                                           JavaSDM.ensure ( step != null );\n                                                                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                                                                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                                                           // check isomorphic binding between objects inFlow and defaultFlow \n                                                                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                                           // check isomorphic binding between objects inFlowToFlow and defaultFlowToInitFlow \n                                                                           JavaSDM.ensure ( !inFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                                                           // check isomorphic binding between objects inFlow and divergeFlow \n                                                                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                                           // check isomorphic binding between objects initFlow and flow \n                                                                           JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                                                           // check isomorphic binding between objects step and normalStep \n                                                                           JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                                                           // create object exConvGateway\n                                                                           exConvGateway = Bpmn2Factory.eINSTANCE.createExclusiveGateway();\n\n                                                                           // create object outFlow\n                                                                           outFlow = Bpmn2Factory.eINSTANCE.createSequenceFlow();\n\n                                                                           // create object ecgwToStep\n                                                                           ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n                                                                           // create object outFlowToNormalStep\n                                                                           outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n                                                                           // create object outFlowToInitFlow\n                                                                           outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n                                                                           // assign attribute exConvGateway\n                                                                           exConvGateway.setGatewayDirection ((bpmn2.GatewayDirection)csp.getAttributeVariable(\"exConvGateway\",\"gatewayDirection\").getValue());\n                                                                           // assign attribute ruleResult\n                                                                           ruleResult.setSuccess (true);\n\n                                                                           // create link\n                                                                           exConvGateway.getIncoming().add(defaultFlow);\n\n\n                                                                           // create link\n                                                                           outFlow.setSourceRef( exConvGateway);\n\n\n                                                                           // create link\n                                                                           inFlow.setTargetRef( exConvGateway);\n\n\n                                                                           // create link\n                                                                           ecgwToStep.setSource( exConvGateway);\n\n\n                                                                           // create link\n                                                                           process.getFlowElements().add(exConvGateway);\n\n\n                                                                           // create link\n                                                                           ruleResult.getSourceObjects().add(exConvGateway);\n\n\n                                                                           // create link\n                                                                           lane.getFlowNodeRefs().add(exConvGateway);\n\n\n                                                                           // create link\n                                                                           \tprocess.getFlowElements().add(outFlow); // add link\n\n\n                                                                           // create link\n                                                                           outFlowToNormalStep.setSource( outFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getSourceObjects().add(outFlow);\n\n\n                                                                           // create link\n                                                                           outFlowToInitFlow.setSource( outFlow);\n\n\n                                                                           // create link\n                                                                           outFlowToNormalStep.setTarget( normalStep);\n\n\n                                                                           // create link\n                                                                           ecgwToStep.setTarget( normalStep);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(ecgwToStep);\n\n\n                                                                           // create link\n                                                                           outFlowToInitFlow.setTarget( initFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(outFlowToInitFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(outFlowToNormalStep);\n\n                                                                           fujaba__Success = true;\n                                                                        }\n                                                                        catch ( JavaSDMException fujaba__InternalException )\n                                                                        {\n                                                                           fujaba__Success = false;\n                                                                        }\n\n                                                                        return ruleResult;\n\n                                                                     }\n\n                                                                     fujaba__Success = true;\n                                                                  }\n                                                                  catch ( JavaSDMException fujaba__InternalException )\n                                                                  {\n                                                                     fujaba__Success = false;\n                                                                  }\n                                                               }\n                                                               JavaSDM.ensure (fujaba__Success);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			SeqFlowToAltFlowAlt divergeFlowToAltDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Converging\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"Diverging\");\r\n\r\n// Create attribute variables\r\nVariable var_exclusiveGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exclusiveGateway.gatewayDirection\", true, csp);\r\nvar_exclusiveGateway_gatewayDirection.setValue(exclusiveGateway.getGatewayDirection());\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", csp);\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();EqGatewayDirection eqGatewayDirection_0 = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\ncsp.getConstraints().add(eqGatewayDirection_0);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exclusiveGateway_gatewayDirection,literal1);\r\neqGatewayDirection_0.setRuleName(\"\");\r\neqGatewayDirection_0.solve(var_exConvGateway_gatewayDirection,literal0);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"defaultFlow\",defaultFlow);\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"inFlowToStep\",inFlowToStep);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"exclusiveGateway\",exclusiveGateway);\r\nisApplicableMatch.registerObject(\"egwToStep\",egwToStep);\r\nisApplicableMatch.registerObject(\"defaultFlowToInitFlow\",defaultFlowToInitFlow);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			SequenceFlow defaultFlow, ExclusiveGateway exConvGateway,
			bpmn2.Process process, SequenceFlow inFlow, SequenceFlow outFlow,
			AlternativeFlow flow, SequenceFlowToUCFlow inFlowToFlow, Step step,
			SequenceFlowToStep inFlowToStep, NormalStep normalStep,
			FlowNodeToStep ecgwToStep, AlternativeFlowAlternative alt,
			Flow initFlow, SequenceFlowToUCFlow outFlowToInitFlow,
			SequenceFlowToStep outFlowToNormalStep,
			ExclusiveGateway exclusiveGateway, FlowNodeToStep egwToStep,
			SequenceFlowToUCFlow defaultFlowToInitFlow,
			SequenceFlow divergeFlow, SeqFlowToAltFlowAlt divergeFlowToAlt,
			Lane lane, LaneSet laneSet, ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // ExclusiveConvergingGatewayDefaultSeqFlowRule
