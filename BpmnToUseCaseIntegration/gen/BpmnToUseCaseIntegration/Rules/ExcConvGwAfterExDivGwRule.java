/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackage;
import BpmnToUseCaseIntegration.DocRootToUCModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.ICEToAltFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SeqFlowToAltFlowAlt;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.Event;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.FlowNode;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;
import bpmn2.Task;
import bpmn2.UserTask;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Exc Conv Gw After Ex Div Gw Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getExcConvGwAfterExDivGwRule()
 * @model
 * @generated
 */
public interface ExcConvGwAfterExDivGwRule extends AbstractRule,
		ExclusiveConvergingGatewayRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __exclusiveGateway_outgoing_divergeFlow = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      EMoflonEdge __process_flowElements_defaultFlow = null;\n      EMoflonEdge __exclusiveGateway_default_defaultFlow = null;\n      EMoflonEdge __process_flowElements_exclusiveGateway = null;\n      EMoflonEdge __divergeFlow_sourceRef_exclusiveGateway = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object defaultFlow is really bound\n         JavaSDM.ensure ( defaultFlow != null );\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object exclusiveGateway is really bound\n         JavaSDM.ensure ( exclusiveGateway != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object defaultFlow is really bound\n            JavaSDM.ensure ( defaultFlow != null );\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object exclusiveGateway is really bound\n            JavaSDM.ensure ( exclusiveGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects divergeFlow and defaultFlow \n            JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and defaultFlow \n            JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects outFlow and defaultFlow \n            JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects exclusiveGateway and exConvGateway \n            JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __process_flowElements_outFlow\n            __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_outFlow\n            __process_flowElements_outFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway.setName (\"flowElements\");\n            // assign attribute __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n            // assign attribute __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow.setName (\"incoming\");\n            // assign attribute __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n            // assign attribute __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n            // assign attribute __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,exConvGateway,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__lane_flowNodeRefs_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__outFlow_sourceRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_outgoing_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,outFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__inFlow_targetRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_incoming_inFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setSrc( process);\n\n\n            // create link\n            __process_flowElements_outFlow.setSrc( process);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __process_flowElements_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object defaultFlow is really bound\n            JavaSDM.ensure ( defaultFlow != null );\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object exclusiveGateway is really bound\n            JavaSDM.ensure ( exclusiveGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects divergeFlow and defaultFlow \n            JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and defaultFlow \n            JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects outFlow and defaultFlow \n            JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects exclusiveGateway and exConvGateway \n            JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __process_laneSets_laneSet\n            __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exclusiveGateway_outgoing_divergeFlow\n            __exclusiveGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __laneSet_lanes_lane\n            __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_defaultFlow\n            __process_flowElements_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exclusiveGateway_default_defaultFlow\n            __exclusiveGateway_default_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_exclusiveGateway\n            __process_flowElements_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __divergeFlow_sourceRef_exclusiveGateway\n            __divergeFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_exclusiveGateway\n            __process_flowElements_exclusiveGateway.setName (\"flowElements\");\n            // assign attribute __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_defaultFlow\n            __process_flowElements_defaultFlow.setName (\"flowElements\");\n            // assign attribute __exclusiveGateway_default_defaultFlow\n            __exclusiveGateway_default_defaultFlow.setName (\"default\");\n            // assign attribute __divergeFlow_sourceRef_exclusiveGateway\n            __divergeFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n            // assign attribute __exclusiveGateway_outgoing_divergeFlow\n            __exclusiveGateway_outgoing_divergeFlow.setName (\"outgoing\");\n            // assign attribute __process_laneSets_laneSet\n            __process_laneSets_laneSet.setName (\"laneSets\");\n            // assign attribute __laneSet_lanes_lane\n            __laneSet_lanes_lane.setName (\"lanes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,defaultFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_laneSets_laneSet,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exclusiveGateway_outgoing_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,exclusiveGateway,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__laneSet_lanes_lane,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,lane,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_defaultFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,process,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exclusiveGateway_default_defaultFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_exclusiveGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,divergeFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,laneSet,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__divergeFlow_sourceRef_exclusiveGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,inFlow,\"contextNodes\");\n\n            // create link\n            __process_laneSets_laneSet.setSrc( process);\n\n\n            // create link\n            __process_flowElements_exclusiveGateway.setSrc( process);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_defaultFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __exclusiveGateway_default_defaultFlow.setTrg( defaultFlow);\n\n\n            // create link\n            __divergeFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n            // create link\n            __process_flowElements_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n            // create link\n            __exclusiveGateway_outgoing_divergeFlow.setSrc( exclusiveGateway);\n\n\n            // create link\n            __exclusiveGateway_default_defaultFlow.setSrc( exclusiveGateway);\n\n\n            // create link\n            __exclusiveGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __divergeFlow_sourceRef_exclusiveGateway.setSrc( divergeFlow);\n\n\n            // create link\n            __laneSet_lanes_lane.setTrg( lane);\n\n\n            // create link\n            __laneSet_lanes_lane.setSrc( laneSet);\n\n\n            // create link\n            __process_laneSets_laneSet.setTrg( laneSet);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, SequenceFlow inFlow,
			bpmn2.Process process, SequenceFlow defaultFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      AlternativeFlowAlternative alt = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n      SequenceFlow divergeFlow = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      SequenceFlowToUCFlow divergeFlowToFlow = null;\n      FlowNodeToStep egwToStep = null;\n      ExclusiveGateway exConvGateway = null;\n      ExclusiveGateway exclusiveGateway = null;\n      AlternativeFlow flow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToStep inFlowToStep = null;\n      Flow initFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      NormalStep normalStep = null;\n      SequenceFlow outFlow = null;\n      bpmn2.Process process = null;\n      Step step = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge outFlowToNormalStep__target__normalStep = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge outFlowToInitFlow__source__outFlow = null;\n      EMoflonEdge ecgwToStep__target__normalStep = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge outFlowToInitFlow__target__initFlow = null;\n      EMoflonEdge ecgwToStep__source__exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge outFlowToNormalStep__source__outFlow = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"defaultFlow\"));\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"defaultFlowToInitFlow\"));\n\n         // ensure correct type and really bound of object defaultFlowToInitFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         defaultFlowToInitFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlowToAlt\"));\n\n         // ensure correct type and really bound of object divergeFlowToAlt\n         JavaSDM.ensure ( _TmpObject instanceof SeqFlowToAltFlowAlt );\n         divergeFlowToAlt = (SeqFlowToAltFlowAlt) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlowToFlow\"));\n\n         // ensure correct type and really bound of object divergeFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         divergeFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"egwToStep\"));\n\n         // ensure correct type and really bound of object egwToStep\n         JavaSDM.ensure ( _TmpObject instanceof FlowNodeToStep );\n         egwToStep = (FlowNodeToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"exclusiveGateway\"));\n\n         // ensure correct type and really bound of object exclusiveGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exclusiveGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         flow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToStep\"));\n\n         // ensure correct type and really bound of object inFlowToStep\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToStep );\n         inFlowToStep = (SequenceFlowToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"initFlow\"));\n\n         // ensure correct type and really bound of object initFlow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         initFlow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"normalStep\"));\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof Step );\n         step = (Step) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects step and normalStep \n         JavaSDM.ensure ( !step.equals (normalStep) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object ecgwToStep\n         ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // create object outFlowToNormalStep\n         outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n         // create object outFlowToInitFlow\n         outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n\n         // create link\n         ecgwToStep.setTarget( normalStep);\n\n\n         // create link\n         outFlowToNormalStep.setTarget( normalStep);\n\n\n         // create link\n         outFlowToInitFlow.setTarget( initFlow);\n\n\n         // create link\n         ecgwToStep.setSource( exConvGateway);\n\n\n         // create link\n         outFlowToInitFlow.setSource( outFlow);\n\n\n         // create link\n         outFlowToNormalStep.setSource( outFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,exConvGateway,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlow,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object defaultFlow is really bound\n         JavaSDM.ensure ( defaultFlow != null );\n         // check object defaultFlowToInitFlow is really bound\n         JavaSDM.ensure ( defaultFlowToInitFlow != null );\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object divergeFlowToAlt is really bound\n         JavaSDM.ensure ( divergeFlowToAlt != null );\n         // check object divergeFlowToFlow is really bound\n         JavaSDM.ensure ( divergeFlowToFlow != null );\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object egwToStep is really bound\n         JavaSDM.ensure ( egwToStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object exclusiveGateway is really bound\n         JavaSDM.ensure ( exclusiveGateway != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToStep is really bound\n         JavaSDM.ensure ( inFlowToStep != null );\n         // check object initFlow is really bound\n         JavaSDM.ensure ( initFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check isomorphic binding between objects defaultFlow and alt \n         JavaSDM.ensure ( !defaultFlow.equals (alt) );\n\n         // check isomorphic binding between objects defaultFlowToInitFlow and alt \n         JavaSDM.ensure ( !defaultFlowToInitFlow.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlow and alt \n         JavaSDM.ensure ( !divergeFlow.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and alt \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and alt \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (alt) );\n\n         // check isomorphic binding between objects ecgwToStep and alt \n         JavaSDM.ensure ( !ecgwToStep.equals (alt) );\n\n         // check isomorphic binding between objects egwToStep and alt \n         JavaSDM.ensure ( !egwToStep.equals (alt) );\n\n         // check isomorphic binding between objects exConvGateway and alt \n         JavaSDM.ensure ( !exConvGateway.equals (alt) );\n\n         // check isomorphic binding between objects exclusiveGateway and alt \n         JavaSDM.ensure ( !exclusiveGateway.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects inFlow and alt \n         JavaSDM.ensure ( !inFlow.equals (alt) );\n\n         // check isomorphic binding between objects inFlowToStep and alt \n         JavaSDM.ensure ( !inFlowToStep.equals (alt) );\n\n         // check isomorphic binding between objects initFlow and alt \n         JavaSDM.ensure ( !initFlow.equals (alt) );\n\n         // check isomorphic binding between objects lane and alt \n         JavaSDM.ensure ( !lane.equals (alt) );\n\n         // check isomorphic binding between objects laneSet and alt \n         JavaSDM.ensure ( !laneSet.equals (alt) );\n\n         // check isomorphic binding between objects normalStep and alt \n         JavaSDM.ensure ( !normalStep.equals (alt) );\n\n         // check isomorphic binding between objects outFlow and alt \n         JavaSDM.ensure ( !outFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and alt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and alt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (alt) );\n\n         // check isomorphic binding between objects process and alt \n         JavaSDM.ensure ( !process.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects defaultFlowToInitFlow and defaultFlow \n         JavaSDM.ensure ( !defaultFlowToInitFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and defaultFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and defaultFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects egwToStep and defaultFlow \n         JavaSDM.ensure ( !egwToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects exConvGateway and defaultFlow \n         JavaSDM.ensure ( !exConvGateway.equals (defaultFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and defaultFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (defaultFlow) );\n\n         // check isomorphic binding between objects flow and defaultFlow \n         JavaSDM.ensure ( !flow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and defaultFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects initFlow and defaultFlow \n         JavaSDM.ensure ( !initFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects lane and defaultFlow \n         JavaSDM.ensure ( !lane.equals (defaultFlow) );\n\n         // check isomorphic binding between objects laneSet and defaultFlow \n         JavaSDM.ensure ( !laneSet.equals (defaultFlow) );\n\n         // check isomorphic binding between objects normalStep and defaultFlow \n         JavaSDM.ensure ( !normalStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and defaultFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and defaultFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (defaultFlow) );\n\n         // check isomorphic binding between objects process and defaultFlow \n         JavaSDM.ensure ( !process.equals (defaultFlow) );\n\n         // check isomorphic binding between objects step and defaultFlow \n         JavaSDM.ensure ( !step.equals (defaultFlow) );\n\n         // check isomorphic binding between objects divergeFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects egwToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !egwToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects exConvGateway and defaultFlowToInitFlow \n         JavaSDM.ensure ( !exConvGateway.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and defaultFlowToInitFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects flow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !flow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects initFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !initFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects lane and defaultFlowToInitFlow \n         JavaSDM.ensure ( !lane.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects laneSet and defaultFlowToInitFlow \n         JavaSDM.ensure ( !laneSet.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects normalStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !normalStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and defaultFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and defaultFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects step and defaultFlowToInitFlow \n         JavaSDM.ensure ( !step.equals (defaultFlowToInitFlow) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and divergeFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (divergeFlow) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and divergeFlow \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects egwToStep and divergeFlow \n         JavaSDM.ensure ( !egwToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlow \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and divergeFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlow) );\n\n         // check isomorphic binding between objects normalStep and divergeFlow \n         JavaSDM.ensure ( !normalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects process and divergeFlow \n         JavaSDM.ensure ( !process.equals (divergeFlow) );\n\n         // check isomorphic binding between objects step and divergeFlow \n         JavaSDM.ensure ( !step.equals (divergeFlow) );\n\n         // check isomorphic binding between objects divergeFlowToFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects egwToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !egwToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlowToAlt \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects exclusiveGateway and divergeFlowToAlt \n         JavaSDM.ensure ( !exclusiveGateway.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects flow and divergeFlowToAlt \n         JavaSDM.ensure ( !flow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects initFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !initFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects lane and divergeFlowToAlt \n         JavaSDM.ensure ( !lane.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects laneSet and divergeFlowToAlt \n         JavaSDM.ensure ( !laneSet.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects normalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !normalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects process and divergeFlowToAlt \n         JavaSDM.ensure ( !process.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects step and divergeFlowToAlt \n         JavaSDM.ensure ( !step.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlowToFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects egwToStep and divergeFlowToFlow \n         JavaSDM.ensure ( !egwToStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlowToFlow \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and divergeFlowToFlow \n         JavaSDM.ensure ( !exclusiveGateway.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlowToFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlowToFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlowToFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects normalStep and divergeFlowToFlow \n         JavaSDM.ensure ( !normalStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects process and divergeFlowToFlow \n         JavaSDM.ensure ( !process.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects step and divergeFlowToFlow \n         JavaSDM.ensure ( !step.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects egwToStep and ecgwToStep \n         JavaSDM.ensure ( !egwToStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exConvGateway and ecgwToStep \n         JavaSDM.ensure ( !exConvGateway.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and ecgwToStep \n         JavaSDM.ensure ( !exclusiveGateway.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects flow and ecgwToStep \n         JavaSDM.ensure ( !flow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlow and ecgwToStep \n         JavaSDM.ensure ( !inFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlowToStep and ecgwToStep \n         JavaSDM.ensure ( !inFlowToStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects initFlow and ecgwToStep \n         JavaSDM.ensure ( !initFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects lane and ecgwToStep \n         JavaSDM.ensure ( !lane.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects laneSet and ecgwToStep \n         JavaSDM.ensure ( !laneSet.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects normalStep and ecgwToStep \n         JavaSDM.ensure ( !normalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and ecgwToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects process and ecgwToStep \n         JavaSDM.ensure ( !process.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects step and ecgwToStep \n         JavaSDM.ensure ( !step.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exConvGateway and egwToStep \n         JavaSDM.ensure ( !exConvGateway.equals (egwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and egwToStep \n         JavaSDM.ensure ( !exclusiveGateway.equals (egwToStep) );\n\n         // check isomorphic binding between objects flow and egwToStep \n         JavaSDM.ensure ( !flow.equals (egwToStep) );\n\n         // check isomorphic binding between objects inFlow and egwToStep \n         JavaSDM.ensure ( !inFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects inFlowToStep and egwToStep \n         JavaSDM.ensure ( !inFlowToStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects initFlow and egwToStep \n         JavaSDM.ensure ( !initFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects lane and egwToStep \n         JavaSDM.ensure ( !lane.equals (egwToStep) );\n\n         // check isomorphic binding between objects laneSet and egwToStep \n         JavaSDM.ensure ( !laneSet.equals (egwToStep) );\n\n         // check isomorphic binding between objects normalStep and egwToStep \n         JavaSDM.ensure ( !normalStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlow and egwToStep \n         JavaSDM.ensure ( !outFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and egwToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (egwToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and egwToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (egwToStep) );\n\n         // check isomorphic binding between objects process and egwToStep \n         JavaSDM.ensure ( !process.equals (egwToStep) );\n\n         // check isomorphic binding between objects step and egwToStep \n         JavaSDM.ensure ( !step.equals (egwToStep) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects flow and exConvGateway \n         JavaSDM.ensure ( !flow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlow and exConvGateway \n         JavaSDM.ensure ( !inFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlowToStep and exConvGateway \n         JavaSDM.ensure ( !inFlowToStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects initFlow and exConvGateway \n         JavaSDM.ensure ( !initFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects lane and exConvGateway \n         JavaSDM.ensure ( !lane.equals (exConvGateway) );\n\n         // check isomorphic binding between objects laneSet and exConvGateway \n         JavaSDM.ensure ( !laneSet.equals (exConvGateway) );\n\n         // check isomorphic binding between objects normalStep and exConvGateway \n         JavaSDM.ensure ( !normalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and exConvGateway \n         JavaSDM.ensure ( !outFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and exConvGateway \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and exConvGateway \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects process and exConvGateway \n         JavaSDM.ensure ( !process.equals (exConvGateway) );\n\n         // check isomorphic binding between objects step and exConvGateway \n         JavaSDM.ensure ( !step.equals (exConvGateway) );\n\n         // check isomorphic binding between objects flow and exclusiveGateway \n         JavaSDM.ensure ( !flow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlow and exclusiveGateway \n         JavaSDM.ensure ( !inFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlowToStep and exclusiveGateway \n         JavaSDM.ensure ( !inFlowToStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects initFlow and exclusiveGateway \n         JavaSDM.ensure ( !initFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects lane and exclusiveGateway \n         JavaSDM.ensure ( !lane.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects laneSet and exclusiveGateway \n         JavaSDM.ensure ( !laneSet.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects normalStep and exclusiveGateway \n         JavaSDM.ensure ( !normalStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlow and exclusiveGateway \n         JavaSDM.ensure ( !outFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and exclusiveGateway \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and exclusiveGateway \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects process and exclusiveGateway \n         JavaSDM.ensure ( !process.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects step and exclusiveGateway \n         JavaSDM.ensure ( !step.equals (exclusiveGateway) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToStep and flow \n         JavaSDM.ensure ( !inFlowToStep.equals (flow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects lane and flow \n         JavaSDM.ensure ( !lane.equals (flow) );\n\n         // check isomorphic binding between objects laneSet and flow \n         JavaSDM.ensure ( !laneSet.equals (flow) );\n\n         // check isomorphic binding between objects normalStep and flow \n         JavaSDM.ensure ( !normalStep.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and flow \n         JavaSDM.ensure ( !outFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and flow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and flow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToStep and inFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects lane and inFlow \n         JavaSDM.ensure ( !lane.equals (inFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects step and inFlow \n         JavaSDM.ensure ( !step.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToStep \n         JavaSDM.ensure ( !initFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and inFlowToStep \n         JavaSDM.ensure ( !lane.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects laneSet and inFlowToStep \n         JavaSDM.ensure ( !laneSet.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects normalStep and inFlowToStep \n         JavaSDM.ensure ( !normalStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlowToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects process and inFlowToStep \n         JavaSDM.ensure ( !process.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects step and inFlowToStep \n         JavaSDM.ensure ( !step.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and initFlow \n         JavaSDM.ensure ( !lane.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and initFlow \n         JavaSDM.ensure ( !laneSet.equals (initFlow) );\n\n         // check isomorphic binding between objects normalStep and initFlow \n         JavaSDM.ensure ( !normalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlow and initFlow \n         JavaSDM.ensure ( !outFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and initFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and initFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects process and initFlow \n         JavaSDM.ensure ( !process.equals (initFlow) );\n\n         // check isomorphic binding between objects step and initFlow \n         JavaSDM.ensure ( !step.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and lane \n         JavaSDM.ensure ( !laneSet.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and lane \n         JavaSDM.ensure ( !normalStep.equals (lane) );\n\n         // check isomorphic binding between objects outFlow and lane \n         JavaSDM.ensure ( !outFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and lane \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and lane \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (lane) );\n\n         // check isomorphic binding between objects process and lane \n         JavaSDM.ensure ( !process.equals (lane) );\n\n         // check isomorphic binding between objects step and lane \n         JavaSDM.ensure ( !step.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and laneSet \n         JavaSDM.ensure ( !normalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and laneSet \n         JavaSDM.ensure ( !outFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and laneSet \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and laneSet \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects process and laneSet \n         JavaSDM.ensure ( !process.equals (laneSet) );\n\n         // check isomorphic binding between objects step and laneSet \n         JavaSDM.ensure ( !step.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and normalStep \n         JavaSDM.ensure ( !outFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and normalStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and normalStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (normalStep) );\n\n         // check isomorphic binding between objects process and normalStep \n         JavaSDM.ensure ( !process.equals (normalStep) );\n\n         // check isomorphic binding between objects step and normalStep \n         JavaSDM.ensure ( !step.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and outFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlow) );\n\n         // check isomorphic binding between objects process and outFlow \n         JavaSDM.ensure ( !process.equals (outFlow) );\n\n         // check isomorphic binding between objects step and outFlow \n         JavaSDM.ensure ( !step.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects step and outFlowToInitFlow \n         JavaSDM.ensure ( !step.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToNormalStep \n         JavaSDM.ensure ( !process.equals (outFlowToNormalStep) );\n\n         // check isomorphic binding between objects step and outFlowToNormalStep \n         JavaSDM.ensure ( !step.equals (outFlowToNormalStep) );\n\n         // check isomorphic binding between objects step and process \n         JavaSDM.ensure ( !step.equals (process) );\n\n         // create object __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_outFlow\n         __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"ExcConvGwAfterExDivGwRule\");\n         // assign attribute __process_flowElements_outFlow\n         __process_flowElements_outFlow.setName (\"flowElements\");\n         // assign attribute __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway.setName (\"flowElements\");\n         // assign attribute __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n         // assign attribute __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow.setName (\"incoming\");\n         // assign attribute __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n         // assign attribute __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n         // assign attribute ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway.setName (\"source\");\n         // assign attribute ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep.setName (\"target\");\n         // assign attribute outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow.setName (\"target\");\n         // assign attribute outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep.setName (\"target\");\n         // assign attribute __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_incoming_inFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__inFlow_targetRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__target__initFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__source__exConvGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_outgoing_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__lane_flowNodeRefs_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__outFlow_sourceRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n         // create link\n         __process_flowElements_outFlow.setSrc( process);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setSrc( process);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setTrg( initFlow);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n         // create link\n         __process_flowElements_outFlow.setTrg( outFlow);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setSrc( ecgwToStep);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setSrc( ecgwToStep);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,inFlow,step,inFlowToStep,process,defaultFlow,exclusiveGateway,divergeFlow,normalStep,alt,initFlow,defaultFlowToInitFlow,egwToStep,divergeFlowToAlt,flow,divergeFlowToFlow,exConvGateway,outFlow,ecgwToStep,outFlowToInitFlow,outFlowToNormalStep,lane,laneSet);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exConvGateway = null;\n      ExclusiveGateway exclusiveGateway = null;\n      SequenceFlow inFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      SequenceFlow outFlow = null;\n      bpmn2.Process process = null;\n      Step nextStep = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __inFlowToStep_source_inFlow = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __inFlowToStep_target_step = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __process_flowElements_exclusiveGateway = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __process_flowElements_defaultFlow = null;\n      EMoflonEdge __defaultFlowToInitFlow_source_defaultFlow = null;\n      EMoflonEdge __exclusiveGateway_default_defaultFlow = null;\n      EMoflonEdge __egwToStep_source_exclusiveGateway = null;\n      EMoflonEdge __divergeFlow_sourceRef_exclusiveGateway = null;\n      EMoflonEdge __exclusiveGateway_outgoing_divergeFlow = null;\n      EMoflonEdge __divergeFlowToAlt_source_divergeFlow = null;\n      EMoflonEdge __divergeFlowToFlow_source_divergeFlow = null;\n      EMoflonEdge __egwToStep_target_normalStep = null;\n      EMoflonEdge __divergeFlowToAlt_target_alt = null;\n      EMoflonEdge __defaultFlowToInitFlow_target_initFlow = null;\n      EMoflonEdge __divergeFlowToFlow_target_flow = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      CSP csp = null;\n      Step step = null;\n      Iterator fujaba__IterInFlowToInFlowToStep = null;\n      SequenceFlowToStep inFlowToStep = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterExclusiveGatewayToEgwToStep = null;\n      FlowNodeToStep egwToStep = null;\n      AlternativeFlow flow = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToFlow = null;\n      SequenceFlowToUCFlow divergeFlowToFlow = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      Flow initFlow = null;\n      Iterator fujaba__IterDefaultFlowToDefaultFlowToInitFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"ExcConvGwAfterExDivGwRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"defaultFlow\"));\n\n         // ensure correct type and really bound of object defaultFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         defaultFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"exclusiveGateway\"));\n\n         // ensure correct type and really bound of object exclusiveGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exclusiveGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (match.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (match.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects divergeFlow and defaultFlow \n         JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and defaultFlow \n         JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects outFlow and defaultFlow \n         JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exclusiveGateway and exConvGateway \n         JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // iterate to-many link source from defaultFlow to defaultFlowToInitFlow\n         fujaba__Success = false;\n\n         fujaba__IterDefaultFlowToDefaultFlowToInitFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(defaultFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n         while ( fujaba__IterDefaultFlowToDefaultFlowToInitFlow.hasNext () )\n         {\n            try\n            {\n               defaultFlowToInitFlow = (SequenceFlowToUCFlow) fujaba__IterDefaultFlowToDefaultFlowToInitFlow.next ();\n\n               // check object defaultFlowToInitFlow is really bound\n               JavaSDM.ensure ( defaultFlowToInitFlow != null );\n               // bind object\n               initFlow = defaultFlowToInitFlow.getTarget ();\n\n               // check object initFlow is really bound\n               JavaSDM.ensure ( initFlow != null );\n\n               // iterate to-many link source from divergeFlow to divergeFlowToAlt\n               fujaba__Success = false;\n\n               fujaba__IterDivergeFlowToDivergeFlowToAlt = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SeqFlowToAltFlowAlt.class,\"source\")).iterator ();\n\n               while ( fujaba__IterDivergeFlowToDivergeFlowToAlt.hasNext () )\n               {\n                  try\n                  {\n                     divergeFlowToAlt = (SeqFlowToAltFlowAlt) fujaba__IterDivergeFlowToDivergeFlowToAlt.next ();\n\n                     // check object divergeFlowToAlt is really bound\n                     JavaSDM.ensure ( divergeFlowToAlt != null );\n                     // bind object\n                     alt = divergeFlowToAlt.getTarget ();\n\n                     // check object alt is really bound\n                     JavaSDM.ensure ( alt != null );\n\n                     // iterate to-many link source from divergeFlow to divergeFlowToFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterDivergeFlowToDivergeFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterDivergeFlowToDivergeFlowToFlow.hasNext () )\n                     {\n                        try\n                        {\n                           divergeFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterDivergeFlowToDivergeFlowToFlow.next ();\n\n                           // check object divergeFlowToFlow is really bound\n                           JavaSDM.ensure ( divergeFlowToFlow != null );\n                           // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n                           JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                           // bind object\n                           _TmpObject = divergeFlowToFlow.getTarget ();\n\n                           // ensure correct type and really bound of object flow\n                           JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                           flow = (AlternativeFlow) _TmpObject;\n\n                           // check isomorphic binding between objects initFlow and flow \n                           JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                           // iterate to-many link source from exclusiveGateway to egwToStep\n                           fujaba__Success = false;\n\n                           fujaba__IterExclusiveGatewayToEgwToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exclusiveGateway,FlowNodeToStep.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterExclusiveGatewayToEgwToStep.hasNext () )\n                           {\n                              try\n                              {\n                                 egwToStep = (FlowNodeToStep) fujaba__IterExclusiveGatewayToEgwToStep.next ();\n\n                                 // check object egwToStep is really bound\n                                 JavaSDM.ensure ( egwToStep != null );\n                                 // bind object\n                                 _TmpObject = egwToStep.getTarget ();\n\n                                 // ensure correct type and really bound of object normalStep\n                                 JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                                 normalStep = (NormalStep) _TmpObject;\n\n                                 // iterate to-many link source from inFlow to inFlowToStep\n                                 fujaba__Success = false;\n\n                                 fujaba__IterInFlowToInFlowToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToStep.class,\"source\")).iterator ();\n\n                                 while ( fujaba__IterInFlowToInFlowToStep.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       inFlowToStep = (SequenceFlowToStep) fujaba__IterInFlowToInFlowToStep.next ();\n\n                                       // check object inFlowToStep is really bound\n                                       JavaSDM.ensure ( inFlowToStep != null );\n                                       // bind object\n                                       step = inFlowToStep.getTarget ();\n\n                                       // check object step is really bound\n                                       JavaSDM.ensure ( step != null );\n\n                                       // check isomorphic binding between objects step and normalStep \n                                       JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                       // story node \'find context\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             nextStep = step.getNext ();\n\n                                             // check object nextStep is really bound\n                                             JavaSDM.ensure ( nextStep != null );\n\n                                             // check isomorphic binding between objects nextStep and normalStep \n                                             JavaSDM.ensure ( !nextStep.equals (normalStep) );\n\n                                             // check isomorphic binding between objects nextStep and step \n                                             JavaSDM.ensure ( !nextStep.equals (step) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object alt is really bound\n                                          JavaSDM.ensure ( alt != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object defaultFlowToInitFlow is really bound\n                                          JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object divergeFlowToAlt is really bound\n                                          JavaSDM.ensure ( divergeFlowToAlt != null );\n                                          // check object divergeFlowToFlow is really bound\n                                          JavaSDM.ensure ( divergeFlowToFlow != null );\n                                          // check object egwToStep is really bound\n                                          JavaSDM.ensure ( egwToStep != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object flow is really bound\n                                          JavaSDM.ensure ( flow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object inFlowToStep is really bound\n                                          JavaSDM.ensure ( inFlowToStep != null );\n                                          // check object initFlow is really bound\n                                          JavaSDM.ensure ( initFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object normalStep is really bound\n                                          JavaSDM.ensure ( normalStep != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check object step is really bound\n                                          JavaSDM.ensure ( step != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n                                          JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects initFlow and flow \n                                          JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects step and normalStep \n                                          JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link source from defaultFlowToInitFlow to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (defaultFlowToInitFlow.getSource ()\n                                          ));\n\n                                          // check link source from divergeFlowToAlt to divergeFlow\n                                          JavaSDM.ensure (divergeFlow.equals (divergeFlowToAlt.getSource ()\n                                          ));\n\n                                          // check link source from divergeFlowToFlow to divergeFlow\n                                          JavaSDM.ensure (divergeFlow.equals (divergeFlowToFlow.getSource ()\n                                          ));\n\n                                          // check link source from egwToStep to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (egwToStep.getSource ()\n                                          ));\n\n                                          // check link source from inFlowToStep to inFlow\n                                          JavaSDM.ensure (inFlow.equals (inFlowToStep.getSource ()\n                                          ));\n\n                                          // check link steps from step to flow\n                                          JavaSDM.ensure (flow.equals (step.eContainer()\n                                          ));\n\n                                          // check link target from defaultFlowToInitFlow to initFlow\n                                          JavaSDM.ensure (initFlow.equals (defaultFlowToInitFlow.getTarget ()\n                                          ));\n\n                                          // check link target from divergeFlowToAlt to alt\n                                          JavaSDM.ensure (alt.equals (divergeFlowToAlt.getTarget ()\n                                          ));\n\n                                          // check link target from divergeFlowToFlow to flow\n                                          JavaSDM.ensure (flow.equals (divergeFlowToFlow.getTarget ()\n                                          ));\n\n                                          // check link target from egwToStep to normalStep\n                                          JavaSDM.ensure (normalStep.equals (egwToStep.getTarget ()\n                                          ));\n\n                                          // check link target from inFlowToStep to step\n                                          JavaSDM.ensure (step.equals (inFlowToStep.getTarget ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object __inFlow_targetRef_exConvGateway\n                                          __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object isApplicableMatch\n                                          isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                          // create object __inFlowToStep_source_inFlow\n                                          __inFlowToStep_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exConvGateway_incoming_inFlow\n                                          __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __flow_steps_step\n                                          __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __inFlowToStep_target_step\n                                          __inFlowToStep_target_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_divergeFlow\n                                          __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_exclusiveGateway\n                                          __process_flowElements_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_exConvGateway\n                                          __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_outFlow\n                                          __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_laneSets_laneSet\n                                          __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __process_flowElements_defaultFlow\n                                          __process_flowElements_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __defaultFlowToInitFlow_source_defaultFlow\n                                          __defaultFlowToInitFlow_source_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exclusiveGateway_default_defaultFlow\n                                          __exclusiveGateway_default_defaultFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __egwToStep_source_exclusiveGateway\n                                          __egwToStep_source_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlow_sourceRef_exclusiveGateway\n                                          __divergeFlow_sourceRef_exclusiveGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exclusiveGateway_outgoing_divergeFlow\n                                          __exclusiveGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToAlt_source_divergeFlow\n                                          __divergeFlowToAlt_source_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToFlow_source_divergeFlow\n                                          __divergeFlowToFlow_source_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __egwToStep_target_normalStep\n                                          __egwToStep_target_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToAlt_target_alt\n                                          __divergeFlowToAlt_target_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __defaultFlowToInitFlow_target_initFlow\n                                          __defaultFlowToInitFlow_target_initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __divergeFlowToFlow_target_flow\n                                          __divergeFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __lane_flowNodeRefs_exConvGateway\n                                          __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __outFlow_sourceRef_exConvGateway\n                                          __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __exConvGateway_outgoing_outFlow\n                                          __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // create object __laneSet_lanes_lane\n                                          __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                          // assign attribute __inFlowToStep_source_inFlow\n                                          __inFlowToStep_source_inFlow.setName (\"source\");\n                                          // assign attribute __inFlowToStep_target_step\n                                          __inFlowToStep_target_step.setName (\"target\");\n                                          // assign attribute __process_flowElements_exclusiveGateway\n                                          __process_flowElements_exclusiveGateway.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_divergeFlow\n                                          __process_flowElements_divergeFlow.setName (\"flowElements\");\n                                          // assign attribute __process_flowElements_defaultFlow\n                                          __process_flowElements_defaultFlow.setName (\"flowElements\");\n                                          // assign attribute __exclusiveGateway_default_defaultFlow\n                                          __exclusiveGateway_default_defaultFlow.setName (\"default\");\n                                          // assign attribute __divergeFlow_sourceRef_exclusiveGateway\n                                          __divergeFlow_sourceRef_exclusiveGateway.setName (\"sourceRef\");\n                                          // assign attribute __exclusiveGateway_outgoing_divergeFlow\n                                          __exclusiveGateway_outgoing_divergeFlow.setName (\"outgoing\");\n                                          // assign attribute __defaultFlowToInitFlow_source_defaultFlow\n                                          __defaultFlowToInitFlow_source_defaultFlow.setName (\"source\");\n                                          // assign attribute __defaultFlowToInitFlow_target_initFlow\n                                          __defaultFlowToInitFlow_target_initFlow.setName (\"target\");\n                                          // assign attribute __egwToStep_source_exclusiveGateway\n                                          __egwToStep_source_exclusiveGateway.setName (\"source\");\n                                          // assign attribute __egwToStep_target_normalStep\n                                          __egwToStep_target_normalStep.setName (\"target\");\n                                          // assign attribute __divergeFlowToAlt_source_divergeFlow\n                                          __divergeFlowToAlt_source_divergeFlow.setName (\"source\");\n                                          // assign attribute __divergeFlowToAlt_target_alt\n                                          __divergeFlowToAlt_target_alt.setName (\"target\");\n                                          // assign attribute __flow_steps_step\n                                          __flow_steps_step.setName (\"steps\");\n                                          // assign attribute __divergeFlowToFlow_source_divergeFlow\n                                          __divergeFlowToFlow_source_divergeFlow.setName (\"source\");\n                                          // assign attribute __divergeFlowToFlow_target_flow\n                                          __divergeFlowToFlow_target_flow.setName (\"target\");\n                                          // assign attribute __process_flowElements_outFlow\n                                          __process_flowElements_outFlow.setName (\"flowElements\");\n                                          // assign attribute __process_laneSets_laneSet\n                                          __process_laneSets_laneSet.setName (\"laneSets\");\n                                          // assign attribute __process_flowElements_exConvGateway\n                                          __process_flowElements_exConvGateway.setName (\"flowElements\");\n                                          // assign attribute __inFlow_targetRef_exConvGateway\n                                          __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n                                          // assign attribute __exConvGateway_incoming_inFlow\n                                          __exConvGateway_incoming_inFlow.setName (\"incoming\");\n                                          // assign attribute __outFlow_sourceRef_exConvGateway\n                                          __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n                                          // assign attribute __exConvGateway_outgoing_outFlow\n                                          __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n                                          // assign attribute __lane_flowNodeRefs_exConvGateway\n                                          __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n                                          // assign attribute __laneSet_lanes_lane\n                                          __laneSet_lanes_lane.setName (\"lanes\");\n\n                                          // create link\n                                          __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                                          // create link\n                                          __inFlowToStep_source_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n                                          // create link\n                                          __flow_steps_step.setTrg( step);\n\n\n                                          // create link\n                                          __inFlowToStep_target_step.setTrg( step);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(step);\n\n\n                                          // create link\n                                          __inFlowToStep_source_inFlow.setSrc( inFlowToStep);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(inFlowToStep);\n\n\n                                          // create link\n                                          __inFlowToStep_target_step.setSrc( inFlowToStep);\n\n\n                                          // create link\n                                          __process_flowElements_divergeFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_exclusiveGateway.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_exConvGateway.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_outFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_laneSets_laneSet.setSrc( process);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(process);\n\n\n                                          // create link\n                                          __process_flowElements_defaultFlow.setSrc( process);\n\n\n                                          // create link\n                                          __process_flowElements_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_source_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_default_defaultFlow.setTrg( defaultFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(defaultFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(exclusiveGateway);\n\n\n                                          // create link\n                                          __egwToStep_source_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __process_flowElements_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __divergeFlow_sourceRef_exclusiveGateway.setTrg( exclusiveGateway);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_divergeFlow.setSrc( exclusiveGateway);\n\n\n                                          // create link\n                                          __exclusiveGateway_default_defaultFlow.setSrc( exclusiveGateway);\n\n\n                                          // create link\n                                          __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_source_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(divergeFlow);\n\n\n                                          // create link\n                                          __divergeFlowToFlow_source_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          __exclusiveGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n                                          // create link\n                                          __divergeFlow_sourceRef_exclusiveGateway.setSrc( divergeFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(normalStep);\n\n\n                                          // create link\n                                          __egwToStep_target_normalStep.setTrg( normalStep);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_target_alt.setTrg( alt);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(alt);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_target_initFlow.setTrg( initFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(initFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_source_defaultFlow.setSrc( defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          __defaultFlowToInitFlow_target_initFlow.setSrc( defaultFlowToInitFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(egwToStep);\n\n\n                                          // create link\n                                          __egwToStep_source_exclusiveGateway.setSrc( egwToStep);\n\n\n                                          // create link\n                                          __egwToStep_target_normalStep.setSrc( egwToStep);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_source_divergeFlow.setSrc( divergeFlowToAlt);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(divergeFlowToAlt);\n\n\n                                          // create link\n                                          __divergeFlowToAlt_target_alt.setSrc( divergeFlowToAlt);\n\n\n                                          // create link\n                                          __flow_steps_step.setSrc( flow);\n\n\n                                          // create link\n                                          __divergeFlowToFlow_target_flow.setTrg( flow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                          // create link\n                                          __divergeFlowToFlow_source_divergeFlow.setSrc( divergeFlowToFlow);\n\n\n                                          // create link\n                                          __divergeFlowToFlow_target_flow.setSrc( divergeFlowToFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(divergeFlowToFlow);\n\n\n                                          // create link\n                                          __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n                                          // create link\n                                          __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(exConvGateway);\n\n\n                                          // create link\n                                          __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n                                          // create link\n                                          __process_flowElements_outFlow.setTrg( outFlow);\n\n\n                                          // create link\n                                          __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(outFlow);\n\n\n                                          // create link\n                                          __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(lane);\n\n\n                                          // create link\n                                          __laneSet_lanes_lane.setTrg( lane);\n\n\n                                          // create link\n                                          __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n\n                                          // create link\n                                          __process_laneSets_laneSet.setTrg( laneSet);\n\n\n                                          // create link\n                                          __laneSet_lanes_lane.setSrc( laneSet);\n\n\n                                          // create link\n                                          isApplicableMatch.getAllContextElements().add(laneSet);\n\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__egwToStep_source_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlowToInitFlow_source_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_source_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exclusiveGateway_outgoing_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__egwToStep_target_normalStep,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_outFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlow_targetRef_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlow_sourceRef_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_source_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__defaultFlowToInitFlow_target_initFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_target_alt,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToFlow_target_flow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_target_step,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__lane_flowNodeRefs_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_incoming_inFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_outgoing_outFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__laneSet_lanes_lane,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToFlow_source_divergeFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exclusiveGateway_default_defaultFlow,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__outFlow_sourceRef_exConvGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_exclusiveGateway,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_laneSets_laneSet,\"allContextElements\");\n\n                                          // create link\n                                          org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_defaultFlow,\"allContextElements\");\n                                          // story node \'solve CSP\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,inFlow,step,inFlowToStep,process,defaultFlow,exclusiveGateway,divergeFlow,normalStep,alt,initFlow,defaultFlowToInitFlow,egwToStep,divergeFlowToAlt,flow,divergeFlowToFlow,exConvGateway,outFlow,lane,laneSet));\n\n                                             // ensure correct type and really bound of object csp\n                                             JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                             csp = (CSP) _TmpObject;\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          // statement node \'check CSP\'\n                                          fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                          if (fujaba__Success)\n                                          {\n                                             // story node \'add match to rule result\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check object isApplicableMatch is really bound\n                                                JavaSDM.ensure ( isApplicableMatch != null );\n                                                // check object ruleresult is really bound\n                                                JavaSDM.ensure ( ruleresult != null );\n                                                // assign attribute ruleresult\n                                                ruleresult.setSuccess (true);\n                                                // assign attribute isApplicableMatch\n                                                isApplicableMatch.setRuleName (\"ExcConvGwAfterExDivGwRule\");\n\n                                                // create link\n                                                isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"inFlow\", inFlow);\nmatch.registerObject(\"process\", process);\nmatch.registerObject(\"defaultFlow\", defaultFlow);\nmatch.registerObject(\"exclusiveGateway\", exclusiveGateway);\nmatch.registerObject(\"divergeFlow\", divergeFlow);\nmatch.registerObject(\"exConvGateway\", exConvGateway);\nmatch.registerObject(\"outFlow\", outFlow);\nmatch.registerObject(\"lane\", lane);\nmatch.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, SequenceFlow inFlow,
			bpmn2.Process process, SequenceFlow defaultFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Diverging\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"Converging\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_exclusiveGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exclusiveGateway.gatewayDirection\", true, csp);\r\nvar_exclusiveGateway_gatewayDirection.setValue(exclusiveGateway.getGatewayDirection());\r\nvar_exclusiveGateway_gatewayDirection.setType(\"EObject\");\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", true, csp);\r\nvar_exConvGateway_gatewayDirection.setValue(exConvGateway.getGatewayDirection());\r\nvar_exConvGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();EqGatewayDirection eqGatewayDirection_0 = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\ncsp.getConstraints().add(eqGatewayDirection_0);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exclusiveGateway_gatewayDirection,literal0);\r\neqGatewayDirection_0.setRuleName(\"\");\r\neqGatewayDirection_0.solve(var_exConvGateway_gatewayDirection,literal1);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, SequenceFlow inFlow,
			bpmn2.Process process, SequenceFlow defaultFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"inFlowToStep\",inFlowToStep);\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"defaultFlow\",defaultFlow);\r\nisApplicableMatch.registerObject(\"exclusiveGateway\",exclusiveGateway);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"defaultFlowToInitFlow\",defaultFlowToInitFlow);\r\nisApplicableMatch.registerObject(\"egwToStep\",egwToStep);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"divergeFlowToFlow\",divergeFlowToFlow);\r\nisApplicableMatch.registerObject(\"exConvGateway\",exConvGateway);\r\nisApplicableMatch.registerObject(\"outFlow\",outFlow);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			SequenceFlow inFlow, Step step, SequenceFlowToStep inFlowToStep,
			bpmn2.Process process, SequenceFlow defaultFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			NormalStep normalStep, AlternativeFlowAlternative alt,
			Flow initFlow, SequenceFlowToUCFlow defaultFlowToInitFlow,
			FlowNodeToStep egwToStep, SeqFlowToAltFlowAlt divergeFlowToAlt,
			AlternativeFlow flow, SequenceFlowToUCFlow divergeFlowToFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"inFlowToStep\", inFlowToStep);\nruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"defaultFlow\", defaultFlow);\nruleresult.registerObject(\"exclusiveGateway\", exclusiveGateway);\nruleresult.registerObject(\"divergeFlow\", divergeFlow);\nruleresult.registerObject(\"normalStep\", normalStep);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"initFlow\", initFlow);\nruleresult.registerObject(\"defaultFlowToInitFlow\", defaultFlowToInitFlow);\nruleresult.registerObject(\"egwToStep\", egwToStep);\nruleresult.registerObject(\"divergeFlowToAlt\", divergeFlowToAlt);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"divergeFlowToFlow\", divergeFlowToFlow);\nruleresult.registerObject(\"exConvGateway\", exConvGateway);\nruleresult.registerObject(\"outFlow\", outFlow);\nruleresult.registerObject(\"ecgwToStep\", ecgwToStep);\nruleresult.registerObject(\"outFlowToInitFlow\", outFlowToInitFlow);\nruleresult.registerObject(\"outFlowToNormalStep\", outFlowToNormalStep);\nruleresult.registerObject(\"lane\", lane);\nruleresult.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject inFlow,
			EObject step, EObject inFlowToStep, EObject process,
			EObject defaultFlow, EObject exclusiveGateway, EObject divergeFlow,
			EObject normalStep, EObject alt, EObject initFlow,
			EObject defaultFlowToInitFlow, EObject egwToStep,
			EObject divergeFlowToAlt, EObject flow, EObject divergeFlowToFlow,
			EObject exConvGateway, EObject outFlow, EObject ecgwToStep,
			EObject outFlowToInitFlow, EObject outFlowToNormalStep,
			EObject lane, EObject laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"exConvGateway\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getExclusiveGateway()) && match.getObject(\"outFlow\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getSequenceFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_186239 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_944194 = null;\n      SequenceFlow __DEC_exConvGateway_default_271447 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_805120 = null;\n      ExclusiveGateway __DEC_outFlow_default_805120 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_753053 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_753053 = null;\n      Match match = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getTrg ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = outFlow.getSourceRef ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // iterate to-many link incoming from exConvGateway to inFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n               {\n                  try\n                  {\n                     inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                     // check object inFlow is really bound\n                     JavaSDM.ensure ( inFlow != null );\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // bind object\n                     _TmpObject = _edge_flowElements.getSrc ();\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n                     process = (bpmn2.Process) _TmpObject;\n\n                     // check link flowElements from exConvGateway to process\n                     JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                     ));\n\n                     // check link flowElements from outFlow to process\n                     JavaSDM.ensure (process.equals (outFlow.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to defaultFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                           // ensure correct type and really bound of object defaultFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           defaultFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects outFlow and defaultFlow \n                           JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                           // iterate to-many link flowElements from process to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                                 // ensure correct type and really bound of object divergeFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 divergeFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // bind object\n                                 _TmpObject = divergeFlow.getSourceRef ();\n\n                                 // ensure correct type and really bound of object exclusiveGateway\n                                 JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                                 exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                                 // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                 JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                 // check link default from exclusiveGateway to defaultFlow\n                                 JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                 ));\n\n                                 // check link flowElements from exclusiveGateway to process\n                                 JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                 ));\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_186239 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_186239 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_186239 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_186239.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_186239 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_186239.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_944194 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_944194 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_944194 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_944194.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_944194 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_944194.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_271447 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_271447 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_271447 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_271447 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_271447.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_271447 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_271447.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_271447 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_271447.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_271447 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_271447.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_805120\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_805120 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_805120.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_805120 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_805120.next ();\n\n                                                   // check object __DEC_outFlow_default_805120 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_805120 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_805120 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_805120.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_805120 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_805120.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_753053\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_753053 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_753053.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_753053 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_753053.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_753053 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_753053 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_753053 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_753053.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_753053 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_753053.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_753053 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_753053.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_753053 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_753053.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowElements is really bound\n                                          JavaSDM.ensure ( _edge_flowElements != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowElements to process\n                                          JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_flowElements to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_flowElements.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_118(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_24324 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_553239 = null;\n      SequenceFlow __DEC_exConvGateway_default_31899 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_474889 = null;\n      ExclusiveGateway __DEC_outFlow_default_474889 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_750243 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_750243 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // iterate to-many link incoming from exConvGateway to inFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n               {\n                  try\n                  {\n                     inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                     // check object inFlow is really bound\n                     JavaSDM.ensure ( inFlow != null );\n                     // bind object\n                     _TmpObject = _edge_flowElements.getSrc ();\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n                     process = (bpmn2.Process) _TmpObject;\n\n                     // check link flowElements from exConvGateway to process\n                     JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to defaultFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                           // ensure correct type and really bound of object defaultFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           defaultFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // iterate to-many link flowElements from process to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                                 // ensure correct type and really bound of object divergeFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 divergeFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // bind object\n                                 _TmpObject = divergeFlow.getSourceRef ();\n\n                                 // ensure correct type and really bound of object exclusiveGateway\n                                 JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                                 exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                                 // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                 JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                 // check link default from exclusiveGateway to defaultFlow\n                                 JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                 ));\n\n                                 // check link flowElements from exclusiveGateway to process\n                                 JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                 ));\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // iterate to-many link outgoing from exConvGateway to outFlow\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                       while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                             // check object outFlow is really bound\n                                             JavaSDM.ensure ( outFlow != null );\n                                             // check isomorphic binding between objects outFlow and defaultFlow \n                                             JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects outFlow and divergeFlow \n                                             JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects outFlow and inFlow \n                                             JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                             // check link flowElements from outFlow to process\n                                             JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_flowElements_24324 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_exConvGateway_flowElements_24324 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_flowElements_24324 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_exConvGateway_flowElements_24324.getFlowElements().contains(exConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_flowElements_24324 and process \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_24324.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_553239 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_553239 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_553239 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_553239.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_553239 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_553239.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_default_31899 = exConvGateway.getDefault ();\n\n                                                   // check object __DEC_exConvGateway_default_31899 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_default_31899 != null );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_31899 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_31899.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_31899 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_31899.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_31899 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_31899.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_31899 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_31899.equals (outFlow) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link default from outFlow to __DEC_outFlow_default_474889\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterOutFlowTo__DEC_outFlow_default_474889 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_474889.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_outFlow_default_474889 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_474889.next ();\n\n                                                         // check object __DEC_outFlow_default_474889 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_default_474889 != null );\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_474889 and exConvGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_474889.equals (exConvGateway) );\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_474889 and exclusiveGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_474889.equals (exclusiveGateway) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_750243\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_750243 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_750243.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_exConvGateway_targetRef_750243 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_750243.next ();\n\n                                                         // check object __DEC_exConvGateway_targetRef_750243 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_targetRef_750243 != null );\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_750243 and defaultFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_750243.equals (defaultFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_750243 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_750243.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_750243 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_750243.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_750243 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_750243.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_flowElements is really bound\n                                                JavaSDM.ensure ( _edge_flowElements != null );\n                                                // check object defaultFlow is really bound\n                                                JavaSDM.ensure ( defaultFlow != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object exConvGateway is really bound\n                                                JavaSDM.ensure ( exConvGateway != null );\n                                                // check object exclusiveGateway is really bound\n                                                JavaSDM.ensure ( exclusiveGateway != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects divergeFlow and defaultFlow \n                                                JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and defaultFlow \n                                                JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects outFlow and defaultFlow \n                                                JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                                JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check link default from exclusiveGateway to defaultFlow\n                                                JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                                ));\n\n                                                // check link default from exConvGateway to defaultFlow\n                                                JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to divergeFlow\n                                                JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to inFlow\n                                                JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exclusiveGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                                )));\n\n                                                // check link flowElements from defaultFlow to process\n                                                JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from exConvGateway to process\n                                                JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from exclusiveGateway to process\n                                                JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link incoming from inFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link incoming from defaultFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from divergeFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from outFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link outgoing from outFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link outgoing from divergeFlow to exclusiveGateway\n                                                JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_flowElements to process\n                                                JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_flowElements to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_flowElements.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to exConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_119(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_729250 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_804964 = null;\n      SequenceFlow __DEC_exConvGateway_default_189377 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_93410 = null;\n      ExclusiveGateway __DEC_outFlow_default_93410 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_425442 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_425442 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      bpmn2.Process process = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n         // check link incoming from inFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowElements from process to defaultFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n               // ensure correct type and really bound of object defaultFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               defaultFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects inFlow and defaultFlow \n               JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                     // check isomorphic binding between objects inFlow and divergeFlow \n                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                     // bind object\n                     _TmpObject = divergeFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object exclusiveGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                     exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                     // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                     JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                     // check link default from exclusiveGateway to defaultFlow\n                     JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                     ));\n\n                     // check link flowElements from exclusiveGateway to process\n                     JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowNodeRefs from exConvGateway to lane\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                     {\n                        try\n                        {\n                           lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                           // check object lane is really bound\n                           JavaSDM.ensure ( lane != null );\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link outgoing from exConvGateway to outFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                       // check object outFlow is really bound\n                                       JavaSDM.ensure ( outFlow != null );\n                                       // check isomorphic binding between objects outFlow and defaultFlow \n                                       JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects outFlow and divergeFlow \n                                       JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from outFlow to process\n                                       JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_729250 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_729250 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_729250 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_729250.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_729250 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_729250.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_804964 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_804964 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_804964 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_804964.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_804964 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_804964.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_189377 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_189377 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_189377 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_189377 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_189377.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_189377 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_189377.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_189377 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_189377.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_189377 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_189377.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_93410\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_93410 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_93410.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_93410 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_93410.next ();\n\n                                                   // check object __DEC_outFlow_default_93410 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_93410 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_93410 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_93410.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_93410 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_93410.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_425442\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_425442 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_425442.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_425442 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_425442.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_425442 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_425442 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_425442 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_425442.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_425442 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_425442.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_425442 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_425442.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_425442 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_425442.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_targetRef is really bound\n                                          JavaSDM.ensure ( _edge_targetRef != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_targetRef to inFlow\n                                          JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_targetRef to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_120(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_300308 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_280486 = null;\n      SequenceFlow __DEC_exConvGateway_default_780081 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_817713 = null;\n      ExclusiveGateway __DEC_outFlow_default_817713 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_985473 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_985473 = null;\n      Match match = null;\n      Iterator fujaba__IterInFlowTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow inFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // bind object\n               _TmpObject = _edge_incoming.getTrg ();\n\n               // ensure correct type and really bound of object inFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               inFlow = (SequenceFlow) _TmpObject;\n\n               // check link incoming from inFlow to exConvGateway\n               JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n               ));\n\n               // iterate to-many link flowElements from process to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                     // ensure correct type and really bound of object defaultFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     defaultFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and defaultFlow \n                     JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // bind object\n                           _TmpObject = divergeFlow.getSourceRef ();\n\n                           // ensure correct type and really bound of object exclusiveGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                           exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                           // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                           JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                           // check link default from exclusiveGateway to defaultFlow\n                           JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                           ));\n\n                           // check link flowElements from exclusiveGateway to process\n                           JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link outgoing from exConvGateway to outFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                       // check object outFlow is really bound\n                                       JavaSDM.ensure ( outFlow != null );\n                                       // check isomorphic binding between objects outFlow and defaultFlow \n                                       JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects outFlow and divergeFlow \n                                       JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from outFlow to process\n                                       JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                       ));\n\n                                       // iterate to-many link src from inFlow to _edge_targetRef\n                                       fujaba__Success = false;\n\n                                       fujaba__IterInFlowTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterInFlowTo_edge_targetRef.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_targetRef = (EMoflonEdge) fujaba__IterInFlowTo_edge_targetRef.next ();\n\n                                             // check object _edge_targetRef is really bound\n                                             JavaSDM.ensure ( _edge_targetRef != null );\n                                             // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                             JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                             // check link trg from _edge_targetRef to exConvGateway\n                                             JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_flowElements_300308 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_exConvGateway_flowElements_300308 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_flowElements_300308 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_exConvGateway_flowElements_300308.getFlowElements().contains(exConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_flowElements_300308 and process \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_300308.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_280486 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_280486 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_280486 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_280486.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_280486 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_280486.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_default_780081 = exConvGateway.getDefault ();\n\n                                                   // check object __DEC_exConvGateway_default_780081 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_default_780081 != null );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_780081 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_780081.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_780081 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_780081.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_780081 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_780081.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_780081 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_780081.equals (outFlow) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link default from outFlow to __DEC_outFlow_default_817713\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterOutFlowTo__DEC_outFlow_default_817713 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_817713.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_outFlow_default_817713 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_817713.next ();\n\n                                                         // check object __DEC_outFlow_default_817713 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_default_817713 != null );\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_817713 and exConvGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_817713.equals (exConvGateway) );\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_817713 and exclusiveGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_817713.equals (exclusiveGateway) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_985473\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_985473 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_985473.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_exConvGateway_targetRef_985473 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_985473.next ();\n\n                                                         // check object __DEC_exConvGateway_targetRef_985473 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_targetRef_985473 != null );\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_985473 and defaultFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_985473.equals (defaultFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_985473 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_985473.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_985473 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_985473.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_985473 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_985473.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_incoming is really bound\n                                                JavaSDM.ensure ( _edge_incoming != null );\n                                                // check object _edge_targetRef is really bound\n                                                JavaSDM.ensure ( _edge_targetRef != null );\n                                                // check object defaultFlow is really bound\n                                                JavaSDM.ensure ( defaultFlow != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object exConvGateway is really bound\n                                                JavaSDM.ensure ( exConvGateway != null );\n                                                // check object exclusiveGateway is really bound\n                                                JavaSDM.ensure ( exclusiveGateway != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                                JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                                // check isomorphic binding between objects divergeFlow and defaultFlow \n                                                JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and defaultFlow \n                                                JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects outFlow and defaultFlow \n                                                JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                                JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check link default from exclusiveGateway to defaultFlow\n                                                JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                                ));\n\n                                                // check link default from exConvGateway to defaultFlow\n                                                JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to divergeFlow\n                                                JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to inFlow\n                                                JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exclusiveGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                                )));\n\n                                                // check link flowElements from defaultFlow to process\n                                                JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from exConvGateway to process\n                                                JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from exclusiveGateway to process\n                                                JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link incoming from inFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link incoming from defaultFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from divergeFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from outFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link outgoing from outFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link outgoing from divergeFlow to exclusiveGateway\n                                                JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_incoming to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_incoming.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_targetRef to inFlow\n                                                JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_incoming to inFlow\n                                                JavaSDM.ensure (inFlow.equals (_edge_incoming.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_targetRef to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to exConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_121(
			EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_288118 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_701836 = null;\n      SequenceFlow __DEC_exConvGateway_default_442469 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_351485 = null;\n      ExclusiveGateway __DEC_outFlow_default_351485 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_689252 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_689252 = null;\n      Match match = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sourceRef is really bound\n         JavaSDM.ensure ( _edge_sourceRef != null );\n         // bind object\n         _TmpObject = _edge_sourceRef.getSrc ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_sourceRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link outgoing from outFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // iterate to-many link incoming from exConvGateway to inFlow\n               fujaba__Success = false;\n\n               fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n               while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n               {\n                  try\n                  {\n                     inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                     // check object inFlow is really bound\n                     JavaSDM.ensure ( inFlow != null );\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // bind object\n                     _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n                     process = (bpmn2.Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n                     // check link flowElements from outFlow to process\n                     JavaSDM.ensure (process.equals (outFlow.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to defaultFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                           // ensure correct type and really bound of object defaultFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           defaultFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and defaultFlow \n                           JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects outFlow and defaultFlow \n                           JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                           // iterate to-many link flowElements from process to divergeFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                                 // ensure correct type and really bound of object divergeFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 divergeFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // bind object\n                                 _TmpObject = divergeFlow.getSourceRef ();\n\n                                 // ensure correct type and really bound of object exclusiveGateway\n                                 JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                                 exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                                 // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                 JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                 // check link default from exclusiveGateway to defaultFlow\n                                 JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                 ));\n\n                                 // check link flowElements from exclusiveGateway to process\n                                 JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                 ));\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_288118 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_288118 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_288118 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_288118.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_288118 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_288118.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_701836 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_701836 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_701836 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_701836.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_701836 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_701836.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_442469 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_442469 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_442469 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_442469 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_442469.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_442469 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_442469.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_442469 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_442469.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_442469 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_442469.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_351485\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_351485 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_351485.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_351485 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_351485.next ();\n\n                                                   // check object __DEC_outFlow_default_351485 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_351485 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_351485 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_351485.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_351485 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_351485.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_689252\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_689252 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_689252.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_689252 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_689252.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_689252 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_689252 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_689252 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_689252.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_689252 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_689252.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_689252 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_689252.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_689252 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_689252.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_sourceRef is really bound\n                                          JavaSDM.ensure ( _edge_sourceRef != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_sourceRef to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_sourceRef to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_122(
			EMoflonEdge _edge_sourceRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_469486 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_889953 = null;\n      SequenceFlow __DEC_exConvGateway_default_160 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_926011 = null;\n      ExclusiveGateway __DEC_outFlow_default_926011 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_74653 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_74653 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayTo_edge_sourceRef = null;\n      EMoflonEdge _edge_sourceRef = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      SequenceFlow outFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_outgoing is really bound\n         JavaSDM.ensure ( _edge_outgoing != null );\n         // bind object\n         _TmpObject = _edge_outgoing.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // bind object\n               _TmpObject = _edge_outgoing.getTrg ();\n\n               // ensure correct type and really bound of object outFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               outFlow = (SequenceFlow) _TmpObject;\n\n               // check link flowElements from outFlow to process\n               JavaSDM.ensure (process.equals (outFlow.eContainer()\n               ));\n\n               // check link outgoing from outFlow to exConvGateway\n               JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n               ));\n\n               // iterate to-many link flowElements from process to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                     // ensure correct type and really bound of object defaultFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     defaultFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and defaultFlow \n                     JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects outFlow and divergeFlow \n                           JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                           // bind object\n                           _TmpObject = divergeFlow.getSourceRef ();\n\n                           // ensure correct type and really bound of object exclusiveGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                           exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                           // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                           JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                           // check link default from exclusiveGateway to defaultFlow\n                           JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                           ));\n\n                           // check link flowElements from exclusiveGateway to process\n                           JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                           ));\n\n                           // iterate to-many link incoming from exConvGateway to inFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                                 // check object inFlow is really bound\n                                 JavaSDM.ensure ( inFlow != null );\n                                 // check isomorphic binding between objects inFlow and defaultFlow \n                                 JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // iterate to-many link trg from exConvGateway to _edge_sourceRef\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo_edge_sourceRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterExConvGatewayTo_edge_sourceRef.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_sourceRef = (EMoflonEdge) fujaba__IterExConvGatewayTo_edge_sourceRef.next ();\n\n                                             // check object _edge_sourceRef is really bound\n                                             JavaSDM.ensure ( _edge_sourceRef != null );\n                                             // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                             JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                             // check link src from _edge_sourceRef to outFlow\n                                             JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_flowElements_469486 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_exConvGateway_flowElements_469486 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_flowElements_469486 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_exConvGateway_flowElements_469486.getFlowElements().contains(exConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_flowElements_469486 and process \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_469486.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_889953 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_889953 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_889953 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_889953.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_889953 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_889953.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_default_160 = exConvGateway.getDefault ();\n\n                                                   // check object __DEC_exConvGateway_default_160 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_default_160 != null );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_160 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_160.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_160 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_160.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_160 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_160.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_160 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_160.equals (outFlow) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link default from outFlow to __DEC_outFlow_default_926011\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterOutFlowTo__DEC_outFlow_default_926011 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_926011.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_outFlow_default_926011 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_926011.next ();\n\n                                                         // check object __DEC_outFlow_default_926011 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_default_926011 != null );\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_926011 and exConvGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_926011.equals (exConvGateway) );\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_926011 and exclusiveGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_926011.equals (exclusiveGateway) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_74653\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_74653 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_74653.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_exConvGateway_targetRef_74653 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_74653.next ();\n\n                                                         // check object __DEC_exConvGateway_targetRef_74653 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_targetRef_74653 != null );\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_74653 and defaultFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_74653.equals (defaultFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_74653 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_74653.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_74653 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_74653.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_74653 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_74653.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_outgoing is really bound\n                                                JavaSDM.ensure ( _edge_outgoing != null );\n                                                // check object _edge_sourceRef is really bound\n                                                JavaSDM.ensure ( _edge_sourceRef != null );\n                                                // check object defaultFlow is really bound\n                                                JavaSDM.ensure ( defaultFlow != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object exConvGateway is really bound\n                                                JavaSDM.ensure ( exConvGateway != null );\n                                                // check object exclusiveGateway is really bound\n                                                JavaSDM.ensure ( exclusiveGateway != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                                JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                                // check isomorphic binding between objects divergeFlow and defaultFlow \n                                                JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and defaultFlow \n                                                JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects outFlow and defaultFlow \n                                                JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                                JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check link default from exclusiveGateway to defaultFlow\n                                                JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                                ));\n\n                                                // check link default from exConvGateway to defaultFlow\n                                                JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to divergeFlow\n                                                JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to inFlow\n                                                JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exclusiveGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                                )));\n\n                                                // check link flowElements from defaultFlow to process\n                                                JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from exConvGateway to process\n                                                JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from exclusiveGateway to process\n                                                JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link incoming from inFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link incoming from defaultFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from divergeFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from outFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link outgoing from outFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link outgoing from divergeFlow to exclusiveGateway\n                                                JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_outgoing to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_outgoing.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_sourceRef to outFlow\n                                                JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_outgoing to outFlow\n                                                JavaSDM.ensure (outFlow.equals (_edge_outgoing.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_sourceRef to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to exConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_123(
			EMoflonEdge _edge_outgoing);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_736016 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_218128 = null;\n      SequenceFlow __DEC_exConvGateway_default_628235 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_830752 = null;\n      ExclusiveGateway __DEC_outFlow_default_830752 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_382951 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_382951 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      ExclusiveGateway exclusiveGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      ExclusiveGateway exConvGateway = null;\n      Lane lane = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowNodeRefs is really bound\n         JavaSDM.ensure ( _edge_flowNodeRefs != null );\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getSrc ();\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link flowNodeRefs from lane to exConvGateway\n         JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n         // iterate to-many link incoming from exConvGateway to inFlow\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n         while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n         {\n            try\n            {\n               inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n               // check object inFlow is really bound\n               JavaSDM.ensure ( inFlow != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // iterate to-many link flowElements from process to defaultFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                     // ensure correct type and really bound of object defaultFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     defaultFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and defaultFlow \n                     JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects divergeFlow and defaultFlow \n                           JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // bind object\n                           _TmpObject = divergeFlow.getSourceRef ();\n\n                           // ensure correct type and really bound of object exclusiveGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                           exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                           // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                           JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                           // check link default from exclusiveGateway to defaultFlow\n                           JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                           ));\n\n                           // check link flowElements from exclusiveGateway to process\n                           JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link outgoing from exConvGateway to outFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                       // check object outFlow is really bound\n                                       JavaSDM.ensure ( outFlow != null );\n                                       // check isomorphic binding between objects outFlow and defaultFlow \n                                       JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                       // check isomorphic binding between objects outFlow and divergeFlow \n                                       JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from outFlow to process\n                                       JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_736016 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_736016 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_736016 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_736016.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_736016 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_736016.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_218128 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_218128 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_218128 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_218128.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_218128 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_218128.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_628235 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_628235 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_628235 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_628235 and defaultFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_628235.equals (defaultFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_628235 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_628235.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_628235 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_628235.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_628235 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_628235.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_830752\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_830752 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_830752.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_830752 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_830752.next ();\n\n                                                   // check object __DEC_outFlow_default_830752 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_830752 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_830752 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_830752.equals (exConvGateway) );\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_830752 and exclusiveGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_830752.equals (exclusiveGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_382951\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_382951 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_382951.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_382951 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_382951.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_382951 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_382951 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_382951 and defaultFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_382951.equals (defaultFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_382951 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_382951.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_382951 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_382951.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_382951 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_382951.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowNodeRefs is really bound\n                                          JavaSDM.ensure ( _edge_flowNodeRefs != null );\n                                          // check object defaultFlow is really bound\n                                          JavaSDM.ensure ( defaultFlow != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object exclusiveGateway is really bound\n                                          JavaSDM.ensure ( exclusiveGateway != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects divergeFlow and defaultFlow \n                                          JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and defaultFlow \n                                          JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects outFlow and defaultFlow \n                                          JavaSDM.ensure ( !outFlow.equals (defaultFlow) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects exclusiveGateway and exConvGateway \n                                          JavaSDM.ensure ( !exclusiveGateway.equals (exConvGateway) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exclusiveGateway to defaultFlow\n                                          JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                          ));\n\n                                          // check link default from exConvGateway to defaultFlow\n                                          JavaSDM.ensure (!(defaultFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exclusiveGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exclusiveGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from defaultFlow to process\n                                          JavaSDM.ensure (process.equals (defaultFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from exclusiveGateway to process\n                                          JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from defaultFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (defaultFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to exclusiveGateway\n                                          JavaSDM.ensure (exclusiveGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowNodeRefs to lane\n                                          JavaSDM.ensure (lane.equals (_edge_flowNodeRefs.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_flowNodeRefs to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_flowNodeRefs.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,inFlow,process,defaultFlow,exclusiveGateway,divergeFlow,exConvGateway,outFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_124(
			EMoflonEdge _edge_flowNodeRefs);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Step nextStep = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterExclusiveGatewayToEgwToStep = null;\n      FlowNodeToStep egwToStep = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      Flow initFlow = null;\n      Iterator fujaba__IterDefaultFlowToDefaultFlowToInitFlow = null;\n      SequenceFlowToUCFlow defaultFlowToInitFlow = null;\n      Iterator fujaba__IterLaneSetToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToDefaultFlow = null;\n      SequenceFlow defaultFlow = null;\n      ExclusiveGateway exclusiveGateway = null;\n      bpmn2.Process process = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterFlowToDivergeFlowToFlow = null;\n      SequenceFlowToUCFlow divergeFlowToFlow = null;\n      AlternativeFlow flow = null;\n      Step step = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterInFlowToStepListToInFlowToStep = null;\n      SequenceFlowToStep inFlowToStep = null;\n      Iterator fujaba__IterRuleEntryContainerToInFlowToStepList = null;\n      RuleEntryList inFlowToStepList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to inFlowToStepList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToInFlowToStepList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToInFlowToStepList.hasNext () )\n         {\n            try\n            {\n               inFlowToStepList = (RuleEntryList) fujaba__IterRuleEntryContainerToInFlowToStepList.next ();\n\n               // check object inFlowToStepList is really bound\n               JavaSDM.ensure ( inFlowToStepList != null );\n               // iterate to-many link entryObjects from inFlowToStepList to inFlowToStep\n               fujaba__Success = false;\n\n               fujaba__IterInFlowToStepListToInFlowToStep = new ArrayList(inFlowToStepList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterInFlowToStepListToInFlowToStep.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInFlowToStepListToInFlowToStep.next ();\n\n                     // ensure correct type and really bound of object inFlowToStep\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToStep );\n                     inFlowToStep = (SequenceFlowToStep) _TmpObject;\n                     // bind object\n                     inFlow = inFlowToStep.getSource ();\n\n                     // check object inFlow is really bound\n                     JavaSDM.ensure ( inFlow != null );\n\n                     // bind object\n                     step = inFlowToStep.getTarget ();\n\n                     // check object step is really bound\n                     JavaSDM.ensure ( step != null );\n\n                     // bind object\n                     _TmpObject = step.eContainer() instanceof AlternativeFlow ? (AlternativeFlow) step.eContainer() : null;\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                     flow = (AlternativeFlow) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(flow.getSteps().contains(step));\n\n                     // iterate to-many link target from flow to divergeFlowToFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterFlowToDivergeFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,SequenceFlowToUCFlow.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterFlowToDivergeFlowToFlow.hasNext () )\n                     {\n                        try\n                        {\n                           divergeFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterFlowToDivergeFlowToFlow.next ();\n\n                           // check object divergeFlowToFlow is really bound\n                           JavaSDM.ensure ( divergeFlowToFlow != null );\n                           // bind object\n                           divergeFlow = divergeFlowToFlow.getSource ();\n\n                           // check object divergeFlow is really bound\n                           JavaSDM.ensure ( divergeFlow != null );\n\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // bind object\n                           _TmpObject = divergeFlow.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) divergeFlow.eContainer() : null;\n\n                           // ensure correct type and really bound of object process\n                           JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n                           process = (bpmn2.Process) _TmpObject;\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(process.getFlowElements().contains(divergeFlow));\n\n                           // bind object\n                           _TmpObject = divergeFlow.getSourceRef ();\n\n                           // ensure correct type and really bound of object exclusiveGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n                           exclusiveGateway = (ExclusiveGateway) _TmpObject;\n\n                           // check link flowElements from exclusiveGateway to process\n                           JavaSDM.ensure (process.equals (exclusiveGateway.eContainer()\n                           ));\n\n                           // iterate to-many link flowElements from process to defaultFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToDefaultFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToDefaultFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToDefaultFlow.next ();\n\n                                 // ensure correct type and really bound of object defaultFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 defaultFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects divergeFlow and defaultFlow \n                                 JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                 // check isomorphic binding between objects inFlow and defaultFlow \n                                 JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                 // check link default from exclusiveGateway to defaultFlow\n                                 JavaSDM.ensure (defaultFlow.equals (exclusiveGateway.getDefault ()\n                                 ));\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // iterate to-many link lanes from laneSet to lane\n                                       fujaba__Success = false;\n\n                                       fujaba__IterLaneSetToLane = new ArrayList(laneSet.getLanes()).iterator ();\n\n                                       while ( fujaba__IterLaneSetToLane.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             lane = (Lane) fujaba__IterLaneSetToLane.next ();\n\n                                             // check object lane is really bound\n                                             JavaSDM.ensure ( lane != null );\n                                             // iterate to-many link source from defaultFlow to defaultFlowToInitFlow\n                                             fujaba__Success = false;\n\n                                             fujaba__IterDefaultFlowToDefaultFlowToInitFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(defaultFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                                             while ( fujaba__IterDefaultFlowToDefaultFlowToInitFlow.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   defaultFlowToInitFlow = (SequenceFlowToUCFlow) fujaba__IterDefaultFlowToDefaultFlowToInitFlow.next ();\n\n                                                   // check object defaultFlowToInitFlow is really bound\n                                                   JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                                   // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n                                                   JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                                   // bind object\n                                                   initFlow = defaultFlowToInitFlow.getTarget ();\n\n                                                   // check object initFlow is really bound\n                                                   JavaSDM.ensure ( initFlow != null );\n\n                                                   // check isomorphic binding between objects initFlow and flow \n                                                   JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                                   // iterate to-many link source from divergeFlow to divergeFlowToAlt\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterDivergeFlowToDivergeFlowToAlt = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SeqFlowToAltFlowAlt.class,\"source\")).iterator ();\n\n                                                   while ( fujaba__IterDivergeFlowToDivergeFlowToAlt.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         divergeFlowToAlt = (SeqFlowToAltFlowAlt) fujaba__IterDivergeFlowToDivergeFlowToAlt.next ();\n\n                                                         // check object divergeFlowToAlt is really bound\n                                                         JavaSDM.ensure ( divergeFlowToAlt != null );\n                                                         // bind object\n                                                         alt = divergeFlowToAlt.getTarget ();\n\n                                                         // check object alt is really bound\n                                                         JavaSDM.ensure ( alt != null );\n\n                                                         // iterate to-many link source from exclusiveGateway to egwToStep\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterExclusiveGatewayToEgwToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exclusiveGateway,FlowNodeToStep.class,\"source\")).iterator ();\n\n                                                         while ( fujaba__IterExclusiveGatewayToEgwToStep.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               egwToStep = (FlowNodeToStep) fujaba__IterExclusiveGatewayToEgwToStep.next ();\n\n                                                               // check object egwToStep is really bound\n                                                               JavaSDM.ensure ( egwToStep != null );\n                                                               // bind object\n                                                               _TmpObject = egwToStep.getTarget ();\n\n                                                               // ensure correct type and really bound of object normalStep\n                                                               JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                                                               normalStep = (NormalStep) _TmpObject;\n\n                                                               // check negative bindings\n                                                               try\n                                                               {\n                                                                  fujaba__Success = false;\n\n                                                                  // bind object\n                                                                  nextStep = step.getNext ();\n\n                                                                  // check object nextStep is really bound\n                                                                  JavaSDM.ensure ( nextStep != null );\n\n                                                                  // check isomorphic binding between objects nextStep and normalStep \n                                                                  JavaSDM.ensure ( !nextStep.equals (normalStep) );\n\n                                                                  // check isomorphic binding between objects nextStep and step \n                                                                  JavaSDM.ensure ( !nextStep.equals (step) );\n\n\n\n                                                                  fujaba__Success = true;\n                                                               }\n                                                               catch ( JavaSDMException fujaba__InternalException )\n                                                               {\n                                                                  fujaba__Success = false;\n                                                               }\n\n                                                               fujaba__Success = !(fujaba__Success);\n\n                                                               JavaSDM.ensure ( fujaba__Success );\n\n                                                               // check isomorphic binding between objects step and normalStep \n                                                               JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                                               // story node \'solve CSP\'\n                                                               try \n                                                               {\n                                                                  fujaba__Success = false; \n\n                                                                  _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,inFlow,step,inFlowToStep,process,defaultFlow,exclusiveGateway,divergeFlow,normalStep,alt,initFlow,defaultFlowToInitFlow,egwToStep,divergeFlowToAlt,flow,divergeFlowToFlow,exConvGateway,outFlow,ecgwToStep,outFlowToInitFlow,outFlowToNormalStep,lane,laneSet,ruleResult));\n\n                                                                  // ensure correct type and really bound of object csp\n                                                                  JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                                                  csp = (CSP) _TmpObject;\n                                                                  fujaba__Success = true;\n                                                               }\n                                                               catch ( JavaSDMException fujaba__InternalException )\n                                                               {\n                                                                  fujaba__Success = false;\n                                                               }\n\n                                                               // statement node \'check CSP\'\n                                                               fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                                                               if (fujaba__Success)\n                                                               {\n                                                                  // story node \'perform\'\n                                                                  try \n                                                                  {\n                                                                     fujaba__Success = false; \n\n                                                                     // check object alt is really bound\n                                                                     JavaSDM.ensure ( alt != null );\n                                                                     // check object defaultFlow is really bound\n                                                                     JavaSDM.ensure ( defaultFlow != null );\n                                                                     // check object defaultFlowToInitFlow is really bound\n                                                                     JavaSDM.ensure ( defaultFlowToInitFlow != null );\n                                                                     // check object divergeFlow is really bound\n                                                                     JavaSDM.ensure ( divergeFlow != null );\n                                                                     // check object divergeFlowToAlt is really bound\n                                                                     JavaSDM.ensure ( divergeFlowToAlt != null );\n                                                                     // check object divergeFlowToFlow is really bound\n                                                                     JavaSDM.ensure ( divergeFlowToFlow != null );\n                                                                     // check object egwToStep is really bound\n                                                                     JavaSDM.ensure ( egwToStep != null );\n                                                                     // check object exclusiveGateway is really bound\n                                                                     JavaSDM.ensure ( exclusiveGateway != null );\n                                                                     // check object flow is really bound\n                                                                     JavaSDM.ensure ( flow != null );\n                                                                     // check object inFlow is really bound\n                                                                     JavaSDM.ensure ( inFlow != null );\n                                                                     // check object inFlowToStep is really bound\n                                                                     JavaSDM.ensure ( inFlowToStep != null );\n                                                                     // check object initFlow is really bound\n                                                                     JavaSDM.ensure ( initFlow != null );\n                                                                     // check object lane is really bound\n                                                                     JavaSDM.ensure ( lane != null );\n                                                                     // check object laneSet is really bound\n                                                                     JavaSDM.ensure ( laneSet != null );\n                                                                     // check object normalStep is really bound\n                                                                     JavaSDM.ensure ( normalStep != null );\n                                                                     // check object process is really bound\n                                                                     JavaSDM.ensure ( process != null );\n                                                                     // check object ruleResult is really bound\n                                                                     JavaSDM.ensure ( ruleResult != null );\n                                                                     // check object step is really bound\n                                                                     JavaSDM.ensure ( step != null );\n                                                                     // check isomorphic binding between objects divergeFlow and defaultFlow \n                                                                     JavaSDM.ensure ( !divergeFlow.equals (defaultFlow) );\n\n                                                                     // check isomorphic binding between objects inFlow and defaultFlow \n                                                                     JavaSDM.ensure ( !inFlow.equals (defaultFlow) );\n\n                                                                     // check isomorphic binding between objects divergeFlowToFlow and defaultFlowToInitFlow \n                                                                     JavaSDM.ensure ( !divergeFlowToFlow.equals (defaultFlowToInitFlow) );\n\n                                                                     // check isomorphic binding between objects inFlow and divergeFlow \n                                                                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                                     // check isomorphic binding between objects initFlow and flow \n                                                                     JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                                                     // check isomorphic binding between objects step and normalStep \n                                                                     JavaSDM.ensure ( !step.equals (normalStep) );\n\n                                                                     // create object exConvGateway\n                                                                     exConvGateway = Bpmn2Factory.eINSTANCE.createExclusiveGateway();\n\n                                                                     // create object outFlow\n                                                                     outFlow = Bpmn2Factory.eINSTANCE.createSequenceFlow();\n\n                                                                     // create object ecgwToStep\n                                                                     ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n                                                                     // create object outFlowToNormalStep\n                                                                     outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n                                                                     // create object outFlowToInitFlow\n                                                                     outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n                                                                     // assign attribute exConvGateway\n                                                                     exConvGateway.setGatewayDirection ((bpmn2.GatewayDirection)csp.getAttributeVariable(\"exConvGateway\",\"gatewayDirection\").getValue());\n                                                                     // assign attribute ruleResult\n                                                                     ruleResult.setSuccess (true);\n\n                                                                     // create link\n                                                                     exConvGateway.getIncoming().add(inFlow);\n\n\n                                                                     // create link\n                                                                     \tprocess.getFlowElements().add(outFlow); // add link\n\n\n                                                                     // create link\n                                                                     \tprocess.getFlowElements().add(exConvGateway); // add link\n\n\n                                                                     // create link\n                                                                     ecgwToStep.setTarget( normalStep);\n\n\n                                                                     // create link\n                                                                     outFlowToNormalStep.setTarget( normalStep);\n\n\n                                                                     // create link\n                                                                     outFlowToInitFlow.setTarget( initFlow);\n\n\n                                                                     // create link\n                                                                     outFlow.setSourceRef( exConvGateway);\n\n\n                                                                     // create link\n                                                                     ecgwToStep.setSource( exConvGateway);\n\n\n                                                                     // create link\n                                                                     ruleResult.getSourceObjects().add(exConvGateway);\n\n\n                                                                     // create link\n                                                                     lane.getFlowNodeRefs().add(exConvGateway);\n\n\n                                                                     // create link\n                                                                     ruleResult.getSourceObjects().add(outFlow);\n\n\n                                                                     // create link\n                                                                     outFlowToInitFlow.setSource( outFlow);\n\n\n                                                                     // create link\n                                                                     outFlowToNormalStep.setSource( outFlow);\n\n\n                                                                     // create link\n                                                                     ruleResult.getCorrObjects().add(ecgwToStep);\n\n\n                                                                     // create link\n                                                                     ruleResult.getCorrObjects().add(outFlowToInitFlow);\n\n\n                                                                     // create link\n                                                                     ruleResult.getCorrObjects().add(outFlowToNormalStep);\n\n                                                                     fujaba__Success = true;\n                                                                  }\n                                                                  catch ( JavaSDMException fujaba__InternalException )\n                                                                  {\n                                                                     fujaba__Success = false;\n                                                                  }\n\n                                                                  return ruleResult;\n\n                                                               }\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			SequenceFlowToStep inFlowToStepDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Diverging\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"Converging\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_exclusiveGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exclusiveGateway.gatewayDirection\", true, csp);\r\nvar_exclusiveGateway_gatewayDirection.setValue(exclusiveGateway.getGatewayDirection());\r\nvar_exclusiveGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", csp);\r\nvar_exConvGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();EqGatewayDirection eqGatewayDirection_0 = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\ncsp.getConstraints().add(eqGatewayDirection_0);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exclusiveGateway_gatewayDirection,literal0);\r\neqGatewayDirection_0.setRuleName(\"\");\r\neqGatewayDirection_0.solve(var_exConvGateway_gatewayDirection,literal1);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"inFlowToStep\",inFlowToStep);\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"defaultFlow\",defaultFlow);\r\nisApplicableMatch.registerObject(\"exclusiveGateway\",exclusiveGateway);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"defaultFlowToInitFlow\",defaultFlowToInitFlow);\r\nisApplicableMatch.registerObject(\"egwToStep\",egwToStep);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"divergeFlowToFlow\",divergeFlowToFlow);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			SequenceFlow inFlow, Step step, SequenceFlowToStep inFlowToStep,
			bpmn2.Process process, SequenceFlow defaultFlow,
			ExclusiveGateway exclusiveGateway, SequenceFlow divergeFlow,
			NormalStep normalStep, AlternativeFlowAlternative alt,
			Flow initFlow, SequenceFlowToUCFlow defaultFlowToInitFlow,
			FlowNodeToStep egwToStep, SeqFlowToAltFlowAlt divergeFlowToAlt,
			AlternativeFlow flow, SequenceFlowToUCFlow divergeFlowToFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow,
			FlowNodeToStep ecgwToStep, SequenceFlowToUCFlow outFlowToInitFlow,
			SequenceFlowToStep outFlowToNormalStep, Lane lane, LaneSet laneSet,
			ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // ExcConvGwAfterExDivGwRule
