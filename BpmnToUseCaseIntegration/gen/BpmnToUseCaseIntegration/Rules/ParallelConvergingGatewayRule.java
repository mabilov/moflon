/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackage;
import BpmnToUseCaseIntegration.DocRootToUCModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.ICEToAltFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SeqFlowToAltFlowAlt;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.Event;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.FlowNode;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;
import bpmn2.Task;
import bpmn2.UserTask;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Parallel Converging Gateway Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getParallelConvergingGatewayRule()
 * @model
 * @generated
 */
public interface ParallelConvergingGatewayRule extends EObject, AbstractRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __outFlow_sourceRef_parallelConvGateway = null;\n      EMoflonEdge __lane_flowNodeRefs_parallelConvGateway = null;\n      EMoflonEdge __parallelConvGateway_incoming_inFlow = null;\n      EMoflonEdge __process_flowElements_parallelConvGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __parallelConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __inFlow_targetRef_parallelConvGateway = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      EMoflonEdge __divergeFlow_sourceRef_parallelGateway = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __process_flowElements_parallelGateway = null;\n      EMoflonEdge __parallelGateway_outgoing_divergeFlow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object parallelConvGateway is really bound\n         JavaSDM.ensure ( parallelConvGateway != null );\n         // check object parallelGateway is really bound\n         JavaSDM.ensure ( parallelGateway != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelGateway and parallelConvGateway \n         JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object parallelConvGateway is really bound\n            JavaSDM.ensure ( parallelConvGateway != null );\n            // check object parallelGateway is really bound\n            JavaSDM.ensure ( parallelGateway != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // check isomorphic binding between objects parallelGateway and parallelConvGateway \n            JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n            // create object __outFlow_sourceRef_parallelConvGateway\n            __outFlow_sourceRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __lane_flowNodeRefs_parallelConvGateway\n            __lane_flowNodeRefs_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parallelConvGateway_incoming_inFlow\n            __parallelConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_parallelConvGateway\n            __process_flowElements_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_outFlow\n            __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parallelConvGateway_outgoing_outFlow\n            __parallelConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __inFlow_targetRef_parallelConvGateway\n            __inFlow_targetRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_parallelConvGateway\n            __process_flowElements_parallelConvGateway.setName (\"flowElements\");\n            // assign attribute __process_flowElements_outFlow\n            __process_flowElements_outFlow.setName (\"flowElements\");\n            // assign attribute __inFlow_targetRef_parallelConvGateway\n            __inFlow_targetRef_parallelConvGateway.setName (\"targetRef\");\n            // assign attribute __parallelConvGateway_incoming_inFlow\n            __parallelConvGateway_incoming_inFlow.setName (\"incoming\");\n            // assign attribute __outFlow_sourceRef_parallelConvGateway\n            __outFlow_sourceRef_parallelConvGateway.setName (\"sourceRef\");\n            // assign attribute __parallelConvGateway_outgoing_outFlow\n            __parallelConvGateway_outgoing_outFlow.setName (\"outgoing\");\n            // assign attribute __lane_flowNodeRefs_parallelConvGateway\n            __lane_flowNodeRefs_parallelConvGateway.setName (\"flowNodeRefs\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__outFlow_sourceRef_parallelConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__lane_flowNodeRefs_parallelConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,outFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parallelConvGateway_incoming_inFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_parallelConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parallelConvGateway_outgoing_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__inFlow_targetRef_parallelConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parallelConvGateway,\"toBeTranslatedNodes\");\n\n            // create link\n            __process_flowElements_parallelConvGateway.setSrc( process);\n\n\n            // create link\n            __process_flowElements_outFlow.setSrc( process);\n\n\n            // create link\n            __inFlow_targetRef_parallelConvGateway.setSrc( inFlow);\n\n\n            // create link\n            __parallelConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __lane_flowNodeRefs_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n            // create link\n            __parallelConvGateway_incoming_inFlow.setSrc( parallelConvGateway);\n\n\n            // create link\n            __parallelConvGateway_outgoing_outFlow.setSrc( parallelConvGateway);\n\n\n            // create link\n            __process_flowElements_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n            // create link\n            __inFlow_targetRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n            // create link\n            __outFlow_sourceRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n            // create link\n            __parallelConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __process_flowElements_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __outFlow_sourceRef_parallelConvGateway.setSrc( outFlow);\n\n\n            // create link\n            __lane_flowNodeRefs_parallelConvGateway.setSrc( lane);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object parallelConvGateway is really bound\n            JavaSDM.ensure ( parallelConvGateway != null );\n            // check object parallelGateway is really bound\n            JavaSDM.ensure ( parallelGateway != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // check isomorphic binding between objects parallelGateway and parallelConvGateway \n            JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n            // create object __laneSet_lanes_lane\n            __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __divergeFlow_sourceRef_parallelGateway\n            __divergeFlow_sourceRef_parallelGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_inFlow\n            __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_laneSets_laneSet\n            __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_parallelGateway\n            __process_flowElements_parallelGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parallelGateway_outgoing_divergeFlow\n            __parallelGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_inFlow\n            __process_flowElements_inFlow.setName (\"flowElements\");\n            // assign attribute __process_laneSets_laneSet\n            __process_laneSets_laneSet.setName (\"laneSets\");\n            // assign attribute __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_parallelGateway\n            __process_flowElements_parallelGateway.setName (\"flowElements\");\n            // assign attribute __laneSet_lanes_lane\n            __laneSet_lanes_lane.setName (\"lanes\");\n            // assign attribute __divergeFlow_sourceRef_parallelGateway\n            __divergeFlow_sourceRef_parallelGateway.setName (\"sourceRef\");\n            // assign attribute __parallelGateway_outgoing_divergeFlow\n            __parallelGateway_outgoing_divergeFlow.setName (\"outgoing\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,laneSet,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__laneSet_lanes_lane,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__divergeFlow_sourceRef_parallelGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,divergeFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_inFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_laneSets_laneSet,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,inFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_parallelGateway,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parallelGateway_outgoing_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,process,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parallelGateway,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,lane,\"contextNodes\");\n\n            // create link\n            __process_flowElements_inFlow.setSrc( process);\n\n\n            // create link\n            __process_laneSets_laneSet.setSrc( process);\n\n\n            // create link\n            __process_flowElements_parallelGateway.setSrc( process);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __laneSet_lanes_lane.setTrg( lane);\n\n\n            // create link\n            __laneSet_lanes_lane.setSrc( laneSet);\n\n\n            // create link\n            __process_laneSets_laneSet.setTrg( laneSet);\n\n\n            // create link\n            __process_flowElements_parallelGateway.setTrg( parallelGateway);\n\n\n            // create link\n            __divergeFlow_sourceRef_parallelGateway.setTrg( parallelGateway);\n\n\n            // create link\n            __parallelGateway_outgoing_divergeFlow.setSrc( parallelGateway);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __divergeFlow_sourceRef_parallelGateway.setSrc( divergeFlow);\n\n\n            // create link\n            __parallelGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, ParallelGateway parallelConvGateway,
			SequenceFlow outFlow, Lane lane, LaneSet laneSet,
			ParallelGateway parallelGateway, SequenceFlow divergeFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      SequenceFlow divergeFlow = null;\n      SequenceFlowToUCFlow divergeFlowToFlow = null;\n      ParallelFlow flow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      SequenceFlowToStep inFlowToStep = null;\n      Flow initFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      SequenceFlow outFlow = null;\n      ParallelGateway parallelConvGateway = null;\n      ParallelGateway parallelGateway = null;\n      ParallelStep parallelStep = null;\n      FlowNodeToStep pgwToParallelStep = null;\n      bpmn2.Process process = null;\n      Step step = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      FlowNodeToStep pcgwToParStep = null;\n      SequenceFlowToStep outFlowToParallelStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __process_flowElements_parallelConvGateway = null;\n      EMoflonEdge outFlowToInitFlow__source__outFlow = null;\n      EMoflonEdge __parallelConvGateway_incoming_inFlow = null;\n      EMoflonEdge __parallelConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_parallelConvGateway = null;\n      EMoflonEdge outFlowToInitFlow__target__initFlow = null;\n      EMoflonEdge pcgwToParStep__source__parallelConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_parallelConvGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __outFlow_sourceRef_parallelConvGateway = null;\n      EMoflonEdge outFlowToParallelStep__target__parallelStep = null;\n      EMoflonEdge pcgwToParStep__target__parallelStep = null;\n      EMoflonEdge outFlowToParallelStep__source__outFlow = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlowToFlow\"));\n\n         // ensure correct type and really bound of object divergeFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         divergeFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof ParallelFlow );\n         flow = (ParallelFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToFlow\"));\n\n         // ensure correct type and really bound of object inFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToStep\"));\n\n         // ensure correct type and really bound of object inFlowToStep\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToStep );\n         inFlowToStep = (SequenceFlowToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"initFlow\"));\n\n         // ensure correct type and really bound of object initFlow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         initFlow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parallelConvGateway\"));\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parallelGateway\"));\n\n         // ensure correct type and really bound of object parallelGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelGateway = (ParallelGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parallelStep\"));\n\n         // ensure correct type and really bound of object parallelStep\n         JavaSDM.ensure ( _TmpObject instanceof ParallelStep );\n         parallelStep = (ParallelStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"pgwToParallelStep\"));\n\n         // ensure correct type and really bound of object pgwToParallelStep\n         JavaSDM.ensure ( _TmpObject instanceof FlowNodeToStep );\n         pgwToParallelStep = (FlowNodeToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof Step );\n         step = (Step) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelGateway and parallelConvGateway \n         JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects step and parallelStep \n         JavaSDM.ensure ( !step.equals (parallelStep) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object pcgwToParStep\n         pcgwToParStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // create object outFlowToParallelStep\n         outFlowToParallelStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n         // create object outFlowToInitFlow\n         outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n\n         // create link\n         pcgwToParStep.setSource( parallelConvGateway);\n\n\n         // create link\n         outFlowToParallelStep.setSource( outFlow);\n\n\n         // create link\n         outFlowToInitFlow.setSource( outFlow);\n\n\n         // create link\n         outFlowToInitFlow.setTarget( initFlow);\n\n\n         // create link\n         pcgwToParStep.setTarget( parallelStep);\n\n\n         // create link\n         outFlowToParallelStep.setTarget( parallelStep);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToParallelStep is really bound\n         JavaSDM.ensure ( outFlowToParallelStep != null );\n         // check object parallelConvGateway is really bound\n         JavaSDM.ensure ( parallelConvGateway != null );\n         // check object pcgwToParStep is really bound\n         JavaSDM.ensure ( pcgwToParStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parallelConvGateway,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,pcgwToParStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToParallelStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlow,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object divergeFlowToFlow is really bound\n         JavaSDM.ensure ( divergeFlowToFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToFlow is really bound\n         JavaSDM.ensure ( inFlowToFlow != null );\n         // check object inFlowToStep is really bound\n         JavaSDM.ensure ( inFlowToStep != null );\n         // check object initFlow is really bound\n         JavaSDM.ensure ( initFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToParallelStep is really bound\n         JavaSDM.ensure ( outFlowToParallelStep != null );\n         // check object parallelConvGateway is really bound\n         JavaSDM.ensure ( parallelConvGateway != null );\n         // check object parallelGateway is really bound\n         JavaSDM.ensure ( parallelGateway != null );\n         // check object parallelStep is really bound\n         JavaSDM.ensure ( parallelStep != null );\n         // check object pcgwToParStep is really bound\n         JavaSDM.ensure ( pcgwToParStep != null );\n         // check object pgwToParallelStep is really bound\n         JavaSDM.ensure ( pgwToParallelStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check isomorphic binding between objects divergeFlowToFlow and divergeFlow \n         JavaSDM.ensure ( !divergeFlowToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and divergeFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and divergeFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects parallelGateway and divergeFlow \n         JavaSDM.ensure ( !parallelGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects parallelStep and divergeFlow \n         JavaSDM.ensure ( !parallelStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and divergeFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and divergeFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects process and divergeFlow \n         JavaSDM.ensure ( !process.equals (divergeFlow) );\n\n         // check isomorphic binding between objects step and divergeFlow \n         JavaSDM.ensure ( !step.equals (divergeFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlowToFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and divergeFlowToFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlowToFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlowToFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and divergeFlowToFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and divergeFlowToFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects parallelGateway and divergeFlowToFlow \n         JavaSDM.ensure ( !parallelGateway.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects parallelStep and divergeFlowToFlow \n         JavaSDM.ensure ( !parallelStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and divergeFlowToFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and divergeFlowToFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects process and divergeFlowToFlow \n         JavaSDM.ensure ( !process.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects step and divergeFlowToFlow \n         JavaSDM.ensure ( !step.equals (divergeFlowToFlow) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and flow \n         JavaSDM.ensure ( !inFlowToFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToStep and flow \n         JavaSDM.ensure ( !inFlowToStep.equals (flow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects lane and flow \n         JavaSDM.ensure ( !lane.equals (flow) );\n\n         // check isomorphic binding between objects laneSet and flow \n         JavaSDM.ensure ( !laneSet.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and flow \n         JavaSDM.ensure ( !outFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and flow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and flow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (flow) );\n\n         // check isomorphic binding between objects parallelConvGateway and flow \n         JavaSDM.ensure ( !parallelConvGateway.equals (flow) );\n\n         // check isomorphic binding between objects parallelGateway and flow \n         JavaSDM.ensure ( !parallelGateway.equals (flow) );\n\n         // check isomorphic binding between objects parallelStep and flow \n         JavaSDM.ensure ( !parallelStep.equals (flow) );\n\n         // check isomorphic binding between objects pcgwToParStep and flow \n         JavaSDM.ensure ( !pcgwToParStep.equals (flow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and flow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and inFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and inFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects lane and inFlow \n         JavaSDM.ensure ( !lane.equals (inFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and inFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and inFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelGateway and inFlow \n         JavaSDM.ensure ( !parallelGateway.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelStep and inFlow \n         JavaSDM.ensure ( !parallelStep.equals (inFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and inFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (inFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and inFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects step and inFlow \n         JavaSDM.ensure ( !step.equals (inFlow) );\n\n         // check isomorphic binding between objects inFlowToStep and inFlowToFlow \n         JavaSDM.ensure ( !inFlowToStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects lane and inFlowToFlow \n         JavaSDM.ensure ( !lane.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlowToFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and inFlowToFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects parallelGateway and inFlowToFlow \n         JavaSDM.ensure ( !parallelGateway.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects parallelStep and inFlowToFlow \n         JavaSDM.ensure ( !parallelStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and inFlowToFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and inFlowToFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and inFlowToFlow \n         JavaSDM.ensure ( !process.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects step and inFlowToFlow \n         JavaSDM.ensure ( !step.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToStep \n         JavaSDM.ensure ( !initFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and inFlowToStep \n         JavaSDM.ensure ( !lane.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects laneSet and inFlowToStep \n         JavaSDM.ensure ( !laneSet.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and inFlowToStep \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects parallelConvGateway and inFlowToStep \n         JavaSDM.ensure ( !parallelConvGateway.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects parallelGateway and inFlowToStep \n         JavaSDM.ensure ( !parallelGateway.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects parallelStep and inFlowToStep \n         JavaSDM.ensure ( !parallelStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects pcgwToParStep and inFlowToStep \n         JavaSDM.ensure ( !pcgwToParStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects pgwToParallelStep and inFlowToStep \n         JavaSDM.ensure ( !pgwToParallelStep.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects process and inFlowToStep \n         JavaSDM.ensure ( !process.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects step and inFlowToStep \n         JavaSDM.ensure ( !step.equals (inFlowToStep) );\n\n         // check isomorphic binding between objects lane and initFlow \n         JavaSDM.ensure ( !lane.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and initFlow \n         JavaSDM.ensure ( !laneSet.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlow and initFlow \n         JavaSDM.ensure ( !outFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and initFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and initFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (initFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and initFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (initFlow) );\n\n         // check isomorphic binding between objects parallelGateway and initFlow \n         JavaSDM.ensure ( !parallelGateway.equals (initFlow) );\n\n         // check isomorphic binding between objects parallelStep and initFlow \n         JavaSDM.ensure ( !parallelStep.equals (initFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and initFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (initFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and initFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (initFlow) );\n\n         // check isomorphic binding between objects process and initFlow \n         JavaSDM.ensure ( !process.equals (initFlow) );\n\n         // check isomorphic binding between objects step and initFlow \n         JavaSDM.ensure ( !step.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and lane \n         JavaSDM.ensure ( !laneSet.equals (lane) );\n\n         // check isomorphic binding between objects outFlow and lane \n         JavaSDM.ensure ( !outFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and lane \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and lane \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (lane) );\n\n         // check isomorphic binding between objects parallelConvGateway and lane \n         JavaSDM.ensure ( !parallelConvGateway.equals (lane) );\n\n         // check isomorphic binding between objects parallelGateway and lane \n         JavaSDM.ensure ( !parallelGateway.equals (lane) );\n\n         // check isomorphic binding between objects parallelStep and lane \n         JavaSDM.ensure ( !parallelStep.equals (lane) );\n\n         // check isomorphic binding between objects pcgwToParStep and lane \n         JavaSDM.ensure ( !pcgwToParStep.equals (lane) );\n\n         // check isomorphic binding between objects pgwToParallelStep and lane \n         JavaSDM.ensure ( !pgwToParallelStep.equals (lane) );\n\n         // check isomorphic binding between objects process and lane \n         JavaSDM.ensure ( !process.equals (lane) );\n\n         // check isomorphic binding between objects step and lane \n         JavaSDM.ensure ( !step.equals (lane) );\n\n         // check isomorphic binding between objects outFlow and laneSet \n         JavaSDM.ensure ( !outFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and laneSet \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and laneSet \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (laneSet) );\n\n         // check isomorphic binding between objects parallelConvGateway and laneSet \n         JavaSDM.ensure ( !parallelConvGateway.equals (laneSet) );\n\n         // check isomorphic binding between objects parallelGateway and laneSet \n         JavaSDM.ensure ( !parallelGateway.equals (laneSet) );\n\n         // check isomorphic binding between objects parallelStep and laneSet \n         JavaSDM.ensure ( !parallelStep.equals (laneSet) );\n\n         // check isomorphic binding between objects pcgwToParStep and laneSet \n         JavaSDM.ensure ( !pcgwToParStep.equals (laneSet) );\n\n         // check isomorphic binding between objects pgwToParallelStep and laneSet \n         JavaSDM.ensure ( !pgwToParallelStep.equals (laneSet) );\n\n         // check isomorphic binding between objects process and laneSet \n         JavaSDM.ensure ( !process.equals (laneSet) );\n\n         // check isomorphic binding between objects step and laneSet \n         JavaSDM.ensure ( !step.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and outFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and outFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (outFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and outFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (outFlow) );\n\n         // check isomorphic binding between objects parallelGateway and outFlow \n         JavaSDM.ensure ( !parallelGateway.equals (outFlow) );\n\n         // check isomorphic binding between objects parallelStep and outFlow \n         JavaSDM.ensure ( !parallelStep.equals (outFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and outFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (outFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and outFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (outFlow) );\n\n         // check isomorphic binding between objects process and outFlow \n         JavaSDM.ensure ( !process.equals (outFlow) );\n\n         // check isomorphic binding between objects step and outFlow \n         JavaSDM.ensure ( !step.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToParallelStep and outFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToParallelStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and outFlowToInitFlow \n         JavaSDM.ensure ( !parallelConvGateway.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects parallelGateway and outFlowToInitFlow \n         JavaSDM.ensure ( !parallelGateway.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects parallelStep and outFlowToInitFlow \n         JavaSDM.ensure ( !parallelStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects pcgwToParStep and outFlowToInitFlow \n         JavaSDM.ensure ( !pcgwToParStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects pgwToParallelStep and outFlowToInitFlow \n         JavaSDM.ensure ( !pgwToParallelStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects step and outFlowToInitFlow \n         JavaSDM.ensure ( !step.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects parallelConvGateway and outFlowToParallelStep \n         JavaSDM.ensure ( !parallelConvGateway.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects parallelGateway and outFlowToParallelStep \n         JavaSDM.ensure ( !parallelGateway.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects parallelStep and outFlowToParallelStep \n         JavaSDM.ensure ( !parallelStep.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects pcgwToParStep and outFlowToParallelStep \n         JavaSDM.ensure ( !pcgwToParStep.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects pgwToParallelStep and outFlowToParallelStep \n         JavaSDM.ensure ( !pgwToParallelStep.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects process and outFlowToParallelStep \n         JavaSDM.ensure ( !process.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects step and outFlowToParallelStep \n         JavaSDM.ensure ( !step.equals (outFlowToParallelStep) );\n\n         // check isomorphic binding between objects parallelGateway and parallelConvGateway \n         JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects parallelStep and parallelConvGateway \n         JavaSDM.ensure ( !parallelStep.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects pcgwToParStep and parallelConvGateway \n         JavaSDM.ensure ( !pcgwToParStep.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects pgwToParallelStep and parallelConvGateway \n         JavaSDM.ensure ( !pgwToParallelStep.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects process and parallelConvGateway \n         JavaSDM.ensure ( !process.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects step and parallelConvGateway \n         JavaSDM.ensure ( !step.equals (parallelConvGateway) );\n\n         // check isomorphic binding between objects parallelStep and parallelGateway \n         JavaSDM.ensure ( !parallelStep.equals (parallelGateway) );\n\n         // check isomorphic binding between objects pcgwToParStep and parallelGateway \n         JavaSDM.ensure ( !pcgwToParStep.equals (parallelGateway) );\n\n         // check isomorphic binding between objects pgwToParallelStep and parallelGateway \n         JavaSDM.ensure ( !pgwToParallelStep.equals (parallelGateway) );\n\n         // check isomorphic binding between objects process and parallelGateway \n         JavaSDM.ensure ( !process.equals (parallelGateway) );\n\n         // check isomorphic binding between objects step and parallelGateway \n         JavaSDM.ensure ( !step.equals (parallelGateway) );\n\n         // check isomorphic binding between objects pcgwToParStep and parallelStep \n         JavaSDM.ensure ( !pcgwToParStep.equals (parallelStep) );\n\n         // check isomorphic binding between objects pgwToParallelStep and parallelStep \n         JavaSDM.ensure ( !pgwToParallelStep.equals (parallelStep) );\n\n         // check isomorphic binding between objects process and parallelStep \n         JavaSDM.ensure ( !process.equals (parallelStep) );\n\n         // check isomorphic binding between objects step and parallelStep \n         JavaSDM.ensure ( !step.equals (parallelStep) );\n\n         // check isomorphic binding between objects pgwToParallelStep and pcgwToParStep \n         JavaSDM.ensure ( !pgwToParallelStep.equals (pcgwToParStep) );\n\n         // check isomorphic binding between objects process and pcgwToParStep \n         JavaSDM.ensure ( !process.equals (pcgwToParStep) );\n\n         // check isomorphic binding between objects step and pcgwToParStep \n         JavaSDM.ensure ( !step.equals (pcgwToParStep) );\n\n         // check isomorphic binding between objects process and pgwToParallelStep \n         JavaSDM.ensure ( !process.equals (pgwToParallelStep) );\n\n         // check isomorphic binding between objects step and pgwToParallelStep \n         JavaSDM.ensure ( !step.equals (pgwToParallelStep) );\n\n         // check isomorphic binding between objects step and process \n         JavaSDM.ensure ( !step.equals (process) );\n\n         // create object __process_flowElements_parallelConvGateway\n         __process_flowElements_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parallelConvGateway_incoming_inFlow\n         __parallelConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parallelConvGateway_outgoing_outFlow\n         __parallelConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __lane_flowNodeRefs_parallelConvGateway\n         __lane_flowNodeRefs_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object pcgwToParStep__source__parallelConvGateway\n         pcgwToParStep__source__parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __inFlow_targetRef_parallelConvGateway\n         __inFlow_targetRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_outFlow\n         __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __outFlow_sourceRef_parallelConvGateway\n         __outFlow_sourceRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToParallelStep__target__parallelStep\n         outFlowToParallelStep__target__parallelStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object pcgwToParStep__target__parallelStep\n         pcgwToParStep__target__parallelStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToParallelStep__source__outFlow\n         outFlowToParallelStep__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"ParallelConvergingGatewayRule\");\n         // assign attribute __process_flowElements_parallelConvGateway\n         __process_flowElements_parallelConvGateway.setName (\"flowElements\");\n         // assign attribute __process_flowElements_outFlow\n         __process_flowElements_outFlow.setName (\"flowElements\");\n         // assign attribute __inFlow_targetRef_parallelConvGateway\n         __inFlow_targetRef_parallelConvGateway.setName (\"targetRef\");\n         // assign attribute __parallelConvGateway_incoming_inFlow\n         __parallelConvGateway_incoming_inFlow.setName (\"incoming\");\n         // assign attribute __outFlow_sourceRef_parallelConvGateway\n         __outFlow_sourceRef_parallelConvGateway.setName (\"sourceRef\");\n         // assign attribute __parallelConvGateway_outgoing_outFlow\n         __parallelConvGateway_outgoing_outFlow.setName (\"outgoing\");\n         // assign attribute pcgwToParStep__source__parallelConvGateway\n         pcgwToParStep__source__parallelConvGateway.setName (\"source\");\n         // assign attribute pcgwToParStep__target__parallelStep\n         pcgwToParStep__target__parallelStep.setName (\"target\");\n         // assign attribute outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow.setName (\"target\");\n         // assign attribute outFlowToParallelStep__source__outFlow\n         outFlowToParallelStep__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToParallelStep__target__parallelStep\n         outFlowToParallelStep__target__parallelStep.setName (\"target\");\n         // assign attribute __lane_flowNodeRefs_parallelConvGateway\n         __lane_flowNodeRefs_parallelConvGateway.setName (\"flowNodeRefs\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_parallelConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parallelConvGateway_incoming_inFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parallelConvGateway_outgoing_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__lane_flowNodeRefs_parallelConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__target__initFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,pcgwToParStep__source__parallelConvGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__inFlow_targetRef_parallelConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__outFlow_sourceRef_parallelConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToParallelStep__target__parallelStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,pcgwToParStep__target__parallelStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToParallelStep__source__outFlow,\"createdEdges\");\n\n         // create link\n         __process_flowElements_parallelConvGateway.setSrc( process);\n\n\n         // create link\n         __process_flowElements_outFlow.setSrc( process);\n\n\n         // create link\n         __inFlow_targetRef_parallelConvGateway.setSrc( inFlow);\n\n\n         // create link\n         __parallelConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n         // create link\n         __parallelConvGateway_outgoing_outFlow.setSrc( parallelConvGateway);\n\n\n         // create link\n         __process_flowElements_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n         // create link\n         __inFlow_targetRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n         // create link\n         __outFlow_sourceRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n         // create link\n         __parallelConvGateway_incoming_inFlow.setSrc( parallelConvGateway);\n\n\n         // create link\n         __lane_flowNodeRefs_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n         // create link\n         pcgwToParStep__source__parallelConvGateway.setTrg( parallelConvGateway);\n\n\n         // create link\n         __parallelConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n         // create link\n         __outFlow_sourceRef_parallelConvGateway.setSrc( outFlow);\n\n\n         // create link\n         outFlowToParallelStep__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         __process_flowElements_outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setTrg( initFlow);\n\n\n         // create link\n         pcgwToParStep__target__parallelStep.setTrg( parallelStep);\n\n\n         // create link\n         outFlowToParallelStep__target__parallelStep.setTrg( parallelStep);\n\n\n         // create link\n         pcgwToParStep__source__parallelConvGateway.setSrc( pcgwToParStep);\n\n\n         // create link\n         pcgwToParStep__target__parallelStep.setSrc( pcgwToParStep);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToParallelStep__source__outFlow.setSrc( outFlowToParallelStep);\n\n\n         // create link\n         outFlowToParallelStep__target__parallelStep.setSrc( outFlowToParallelStep);\n\n\n         // create link\n         __lane_flowNodeRefs_parallelConvGateway.setSrc( lane);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,process,inFlow,parallelConvGateway,outFlow,flow,inFlowToFlow,step,inFlowToStep,initFlow,parallelStep,pcgwToParStep,outFlowToInitFlow,outFlowToParallelStep,lane,laneSet,parallelGateway,pgwToParallelStep,divergeFlow,divergeFlowToFlow);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      SequenceFlow divergeFlow = null;\n      SequenceFlow inFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      SequenceFlow outFlow = null;\n      ParallelGateway parallelConvGateway = null;\n      ParallelGateway parallelGateway = null;\n      bpmn2.Process process = null;\n      Step nextStep = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __process_flowElements_parallelConvGateway = null;\n      EMoflonEdge __process_flowElements_parallelGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __inFlow_targetRef_parallelConvGateway = null;\n      EMoflonEdge __parallelConvGateway_incoming_inFlow = null;\n      EMoflonEdge __inFlowToStep_source_inFlow = null;\n      EMoflonEdge __inFlowToFlow_source_inFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_parallelConvGateway = null;\n      EMoflonEdge __parallelConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __outFlow_sourceRef_parallelConvGateway = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __divergeFlowToFlow_target_flow = null;\n      EMoflonEdge __parallelStep_invokedFlows_flow = null;\n      EMoflonEdge __inFlowToFlow_target_flow = null;\n      EMoflonEdge __inFlowToStep_target_step = null;\n      EMoflonEdge __initFlow_steps_parallelStep = null;\n      EMoflonEdge __pgwToParallelStep_target_parallelStep = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      EMoflonEdge __parallelGateway_outgoing_divergeFlow = null;\n      EMoflonEdge __divergeFlow_sourceRef_parallelGateway = null;\n      EMoflonEdge __pgwToParallelStep_source_parallelGateway = null;\n      EMoflonEdge __divergeFlowToFlow_source_divergeFlow = null;\n      CSP csp = null;\n      Flow initFlow = null;\n      ParallelStep parallelStep = null;\n      Iterator fujaba__IterParallelGatewayToPgwToParallelStep = null;\n      FlowNodeToStep pgwToParallelStep = null;\n      Step step = null;\n      Iterator fujaba__IterInFlowToInFlowToStep = null;\n      SequenceFlowToStep inFlowToStep = null;\n      ParallelFlow flow = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToFlow = null;\n      SequenceFlowToUCFlow divergeFlowToFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"ParallelConvergingGatewayRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (match.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (match.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"parallelConvGateway\"));\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"parallelGateway\"));\n\n         // ensure correct type and really bound of object parallelGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelGateway = (ParallelGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects parallelGateway and parallelConvGateway \n         JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n         // iterate to-many link source from divergeFlow to divergeFlowToFlow\n         fujaba__Success = false;\n\n         fujaba__IterDivergeFlowToDivergeFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n         while ( fujaba__IterDivergeFlowToDivergeFlowToFlow.hasNext () )\n         {\n            try\n            {\n               divergeFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterDivergeFlowToDivergeFlowToFlow.next ();\n\n               // check object divergeFlowToFlow is really bound\n               JavaSDM.ensure ( divergeFlowToFlow != null );\n               // iterate to-many link source from inFlow to inFlowToFlow\n               fujaba__Success = false;\n\n               fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n               while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n               {\n                  try\n                  {\n                     inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n                     // check object inFlowToFlow is really bound\n                     JavaSDM.ensure ( inFlowToFlow != null );\n                     // check isomorphic binding between objects inFlowToFlow and divergeFlowToFlow \n                     JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToFlow) );\n\n                     // bind object\n                     _TmpObject = inFlowToFlow.getTarget ();\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof ParallelFlow );\n                     flow = (ParallelFlow) _TmpObject;\n\n                     // check link target from divergeFlowToFlow to flow\n                     JavaSDM.ensure (flow.equals (divergeFlowToFlow.getTarget ()\n                     ));\n\n                     // iterate to-many link source from inFlow to inFlowToStep\n                     fujaba__Success = false;\n\n                     fujaba__IterInFlowToInFlowToStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToStep.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterInFlowToInFlowToStep.hasNext () )\n                     {\n                        try\n                        {\n                           inFlowToStep = (SequenceFlowToStep) fujaba__IterInFlowToInFlowToStep.next ();\n\n                           // check object inFlowToStep is really bound\n                           JavaSDM.ensure ( inFlowToStep != null );\n                           // bind object\n                           step = inFlowToStep.getTarget ();\n\n                           // check object step is really bound\n                           JavaSDM.ensure ( step != null );\n\n                           // iterate to-many link source from parallelGateway to pgwToParallelStep\n                           fujaba__Success = false;\n\n                           fujaba__IterParallelGatewayToPgwToParallelStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelGateway,FlowNodeToStep.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterParallelGatewayToPgwToParallelStep.hasNext () )\n                           {\n                              try\n                              {\n                                 pgwToParallelStep = (FlowNodeToStep) fujaba__IterParallelGatewayToPgwToParallelStep.next ();\n\n                                 // check object pgwToParallelStep is really bound\n                                 JavaSDM.ensure ( pgwToParallelStep != null );\n                                 // bind object\n                                 _TmpObject = pgwToParallelStep.getTarget ();\n\n                                 // ensure correct type and really bound of object parallelStep\n                                 JavaSDM.ensure ( _TmpObject instanceof ParallelStep );\n                                 parallelStep = (ParallelStep) _TmpObject;\n\n                                 // check isomorphic binding between objects step and parallelStep \n                                 JavaSDM.ensure ( !step.equals (parallelStep) );\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       nextStep = step.getNext ();\n\n                                       // check object nextStep is really bound\n                                       JavaSDM.ensure ( nextStep != null );\n\n                                       // check isomorphic binding between objects nextStep and parallelStep \n                                       JavaSDM.ensure ( !nextStep.equals (parallelStep) );\n\n                                       // check isomorphic binding between objects nextStep and step \n                                       JavaSDM.ensure ( !nextStep.equals (step) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object divergeFlowToFlow is really bound\n                                    JavaSDM.ensure ( divergeFlowToFlow != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object inFlowToFlow is really bound\n                                    JavaSDM.ensure ( inFlowToFlow != null );\n                                    // check object inFlowToStep is really bound\n                                    JavaSDM.ensure ( inFlowToStep != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object parallelConvGateway is really bound\n                                    JavaSDM.ensure ( parallelConvGateway != null );\n                                    // check object parallelGateway is really bound\n                                    JavaSDM.ensure ( parallelGateway != null );\n                                    // check object parallelStep is really bound\n                                    JavaSDM.ensure ( parallelStep != null );\n                                    // check object pgwToParallelStep is really bound\n                                    JavaSDM.ensure ( pgwToParallelStep != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check object step is really bound\n                                    JavaSDM.ensure ( step != null );\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects inFlowToFlow and divergeFlowToFlow \n                                    JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToFlow) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                    JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                    // check isomorphic binding between objects step and parallelStep \n                                    JavaSDM.ensure ( !step.equals (parallelStep) );\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from parallelConvGateway to process\n                                    JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from parallelGateway to process\n                                    JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                    ));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link source from divergeFlowToFlow to divergeFlow\n                                    JavaSDM.ensure (divergeFlow.equals (divergeFlowToFlow.getSource ()\n                                    ));\n\n                                    // check link source from inFlowToFlow to inFlow\n                                    JavaSDM.ensure (inFlow.equals (inFlowToFlow.getSource ()\n                                    ));\n\n                                    // check link source from inFlowToStep to inFlow\n                                    JavaSDM.ensure (inFlow.equals (inFlowToStep.getSource ()\n                                    ));\n\n                                    // check link source from pgwToParallelStep to parallelGateway\n                                    JavaSDM.ensure (parallelGateway.equals (pgwToParallelStep.getSource ()\n                                    ));\n\n                                    // check link sourceRef from divergeFlow to parallelGateway\n                                    JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link sourceRef from outFlow to parallelConvGateway\n                                    JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link steps from step to flow\n                                    JavaSDM.ensure (flow.equals (step.eContainer()\n                                    ));\n\n                                    // bind object\n                                    initFlow = parallelStep.eContainer() instanceof Flow ? (Flow) parallelStep.eContainer() : null;\n\n                                    // check object initFlow is really bound\n                                    JavaSDM.ensure ( initFlow != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(initFlow.getSteps().contains(parallelStep));\n\n                                    // check isomorphic binding between objects initFlow and flow \n                                    JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                    // check link target from divergeFlowToFlow to flow\n                                    JavaSDM.ensure (flow.equals (divergeFlowToFlow.getTarget ()\n                                    ));\n\n                                    // check link target from inFlowToFlow to flow\n                                    JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                    ));\n\n                                    // check link target from inFlowToStep to step\n                                    JavaSDM.ensure (step.equals (inFlowToStep.getTarget ()\n                                    ));\n\n                                    // check link target from pgwToParallelStep to parallelStep\n                                    JavaSDM.ensure (parallelStep.equals (pgwToParallelStep.getTarget ()\n                                    ));\n\n                                    // check link targetRef from inFlow to parallelConvGateway\n                                    JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to parallelConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                    // check link invokedFlows from parallelStep to flow\n                                    JavaSDM.ensure (parallelStep.getInvokedFlows ().contains (flow));\n\n                                    // create object __process_flowElements_divergeFlow\n                                    __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_laneSets_laneSet\n                                    __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __process_flowElements_inFlow\n                                    __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_parallelConvGateway\n                                    __process_flowElements_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_parallelGateway\n                                    __process_flowElements_parallelGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_outFlow\n                                    __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlow_targetRef_parallelConvGateway\n                                    __inFlow_targetRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parallelConvGateway_incoming_inFlow\n                                    __parallelConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToStep_source_inFlow\n                                    __inFlowToStep_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToFlow_source_inFlow\n                                    __inFlowToFlow_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __lane_flowNodeRefs_parallelConvGateway\n                                    __lane_flowNodeRefs_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parallelConvGateway_outgoing_outFlow\n                                    __parallelConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __outFlow_sourceRef_parallelConvGateway\n                                    __outFlow_sourceRef_parallelConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flow_steps_step\n                                    __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlowToFlow_target_flow\n                                    __divergeFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parallelStep_invokedFlows_flow\n                                    __parallelStep_invokedFlows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToFlow_target_flow\n                                    __inFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToStep_target_step\n                                    __inFlowToStep_target_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __initFlow_steps_parallelStep\n                                    __initFlow_steps_parallelStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __pgwToParallelStep_target_parallelStep\n                                    __pgwToParallelStep_target_parallelStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __laneSet_lanes_lane\n                                    __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parallelGateway_outgoing_divergeFlow\n                                    __parallelGateway_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlow_sourceRef_parallelGateway\n                                    __divergeFlow_sourceRef_parallelGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __pgwToParallelStep_source_parallelGateway\n                                    __pgwToParallelStep_source_parallelGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlowToFlow_source_divergeFlow\n                                    __divergeFlowToFlow_source_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __process_flowElements_inFlow\n                                    __process_flowElements_inFlow.setName (\"flowElements\");\n                                    // assign attribute __process_laneSets_laneSet\n                                    __process_laneSets_laneSet.setName (\"laneSets\");\n                                    // assign attribute __process_flowElements_parallelConvGateway\n                                    __process_flowElements_parallelConvGateway.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_outFlow\n                                    __process_flowElements_outFlow.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_divergeFlow\n                                    __process_flowElements_divergeFlow.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_parallelGateway\n                                    __process_flowElements_parallelGateway.setName (\"flowElements\");\n                                    // assign attribute __inFlow_targetRef_parallelConvGateway\n                                    __inFlow_targetRef_parallelConvGateway.setName (\"targetRef\");\n                                    // assign attribute __parallelConvGateway_incoming_inFlow\n                                    __parallelConvGateway_incoming_inFlow.setName (\"incoming\");\n                                    // assign attribute __outFlow_sourceRef_parallelConvGateway\n                                    __outFlow_sourceRef_parallelConvGateway.setName (\"sourceRef\");\n                                    // assign attribute __parallelConvGateway_outgoing_outFlow\n                                    __parallelConvGateway_outgoing_outFlow.setName (\"outgoing\");\n                                    // assign attribute __flow_steps_step\n                                    __flow_steps_step.setName (\"steps\");\n                                    // assign attribute __inFlowToFlow_source_inFlow\n                                    __inFlowToFlow_source_inFlow.setName (\"source\");\n                                    // assign attribute __inFlowToFlow_target_flow\n                                    __inFlowToFlow_target_flow.setName (\"target\");\n                                    // assign attribute __inFlowToStep_source_inFlow\n                                    __inFlowToStep_source_inFlow.setName (\"source\");\n                                    // assign attribute __inFlowToStep_target_step\n                                    __inFlowToStep_target_step.setName (\"target\");\n                                    // assign attribute __initFlow_steps_parallelStep\n                                    __initFlow_steps_parallelStep.setName (\"steps\");\n                                    // assign attribute __parallelStep_invokedFlows_flow\n                                    __parallelStep_invokedFlows_flow.setName (\"invokedFlows\");\n                                    // assign attribute __lane_flowNodeRefs_parallelConvGateway\n                                    __lane_flowNodeRefs_parallelConvGateway.setName (\"flowNodeRefs\");\n                                    // assign attribute __laneSet_lanes_lane\n                                    __laneSet_lanes_lane.setName (\"lanes\");\n                                    // assign attribute __divergeFlow_sourceRef_parallelGateway\n                                    __divergeFlow_sourceRef_parallelGateway.setName (\"sourceRef\");\n                                    // assign attribute __parallelGateway_outgoing_divergeFlow\n                                    __parallelGateway_outgoing_divergeFlow.setName (\"outgoing\");\n                                    // assign attribute __pgwToParallelStep_target_parallelStep\n                                    __pgwToParallelStep_target_parallelStep.setName (\"target\");\n                                    // assign attribute __pgwToParallelStep_source_parallelGateway\n                                    __pgwToParallelStep_source_parallelGateway.setName (\"source\");\n                                    // assign attribute __divergeFlowToFlow_source_divergeFlow\n                                    __divergeFlowToFlow_source_divergeFlow.setName (\"source\");\n                                    // assign attribute __divergeFlowToFlow_target_flow\n                                    __divergeFlowToFlow_target_flow.setName (\"target\");\n\n                                    // create link\n                                    __process_flowElements_divergeFlow.setSrc( process);\n\n\n                                    // create link\n                                    __process_laneSets_laneSet.setSrc( process);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(process);\n\n\n                                    // create link\n                                    __process_flowElements_inFlow.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_parallelConvGateway.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_parallelGateway.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_outFlow.setSrc( process);\n\n\n                                    // create link\n                                    __inFlow_targetRef_parallelConvGateway.setSrc( inFlow);\n\n\n                                    // create link\n                                    __parallelConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    __inFlowToStep_source_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                                    // create link\n                                    __process_flowElements_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    __inFlowToFlow_source_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    __lane_flowNodeRefs_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n                                    // create link\n                                    __parallelConvGateway_outgoing_outFlow.setSrc( parallelConvGateway);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parallelConvGateway);\n\n\n                                    // create link\n                                    __outFlow_sourceRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n                                    // create link\n                                    __process_flowElements_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n                                    // create link\n                                    __inFlow_targetRef_parallelConvGateway.setTrg( parallelConvGateway);\n\n\n                                    // create link\n                                    __parallelConvGateway_incoming_inFlow.setSrc( parallelConvGateway);\n\n\n                                    // create link\n                                    __outFlow_sourceRef_parallelConvGateway.setSrc( outFlow);\n\n\n                                    // create link\n                                    __parallelConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n                                    // create link\n                                    __process_flowElements_outFlow.setTrg( outFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(outFlow);\n\n\n                                    // create link\n                                    __flow_steps_step.setSrc( flow);\n\n\n                                    // create link\n                                    __divergeFlowToFlow_target_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __parallelStep_invokedFlows_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __inFlowToFlow_target_flow.setTrg( flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    __inFlowToFlow_target_flow.setSrc( inFlowToFlow);\n\n\n                                    // create link\n                                    __inFlowToFlow_source_inFlow.setSrc( inFlowToFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(inFlowToFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(step);\n\n\n                                    // create link\n                                    __inFlowToStep_target_step.setTrg( step);\n\n\n                                    // create link\n                                    __flow_steps_step.setTrg( step);\n\n\n                                    // create link\n                                    __inFlowToStep_source_inFlow.setSrc( inFlowToStep);\n\n\n                                    // create link\n                                    __inFlowToStep_target_step.setSrc( inFlowToStep);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(inFlowToStep);\n\n\n                                    // create link\n                                    __initFlow_steps_parallelStep.setSrc( initFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(initFlow);\n\n\n                                    // create link\n                                    __parallelStep_invokedFlows_flow.setSrc( parallelStep);\n\n\n                                    // create link\n                                    __initFlow_steps_parallelStep.setTrg( parallelStep);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parallelStep);\n\n\n                                    // create link\n                                    __pgwToParallelStep_target_parallelStep.setTrg( parallelStep);\n\n\n                                    // create link\n                                    __laneSet_lanes_lane.setTrg( lane);\n\n\n                                    // create link\n                                    __lane_flowNodeRefs_parallelConvGateway.setSrc( lane);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(lane);\n\n\n                                    // create link\n                                    __process_laneSets_laneSet.setTrg( laneSet);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(laneSet);\n\n\n                                    // create link\n                                    __laneSet_lanes_lane.setSrc( laneSet);\n\n\n                                    // create link\n                                    __parallelGateway_outgoing_divergeFlow.setSrc( parallelGateway);\n\n\n                                    // create link\n                                    __process_flowElements_parallelGateway.setTrg( parallelGateway);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parallelGateway);\n\n\n                                    // create link\n                                    __divergeFlow_sourceRef_parallelGateway.setTrg( parallelGateway);\n\n\n                                    // create link\n                                    __pgwToParallelStep_source_parallelGateway.setTrg( parallelGateway);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(pgwToParallelStep);\n\n\n                                    // create link\n                                    __pgwToParallelStep_target_parallelStep.setSrc( pgwToParallelStep);\n\n\n                                    // create link\n                                    __pgwToParallelStep_source_parallelGateway.setSrc( pgwToParallelStep);\n\n\n                                    // create link\n                                    __parallelGateway_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(divergeFlow);\n\n\n                                    // create link\n                                    __divergeFlowToFlow_source_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    __divergeFlow_sourceRef_parallelGateway.setSrc( divergeFlow);\n\n\n                                    // create link\n                                    __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(divergeFlowToFlow);\n\n\n                                    // create link\n                                    __divergeFlowToFlow_target_flow.setSrc( divergeFlowToFlow);\n\n\n                                    // create link\n                                    __divergeFlowToFlow_source_divergeFlow.setSrc( divergeFlowToFlow);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlow_targetRef_parallelConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parallelStep_invokedFlows_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__outFlow_sourceRef_parallelConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlow_sourceRef_parallelGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_parallelGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_source_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parallelGateway_outgoing_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToFlow_source_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_parallelConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__pgwToParallelStep_target_parallelStep,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToFlow_target_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parallelConvGateway_outgoing_outFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_target_step,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToStep_source_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_laneSets_laneSet,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__lane_flowNodeRefs_parallelConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_target_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__initFlow_steps_parallelStep,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__laneSet_lanes_lane,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_outFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__pgwToParallelStep_source_parallelGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parallelConvGateway_incoming_inFlow,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,process,inFlow,parallelConvGateway,outFlow,flow,inFlowToFlow,step,inFlowToStep,initFlow,parallelStep,lane,laneSet,parallelGateway,pgwToParallelStep,divergeFlow,divergeFlowToFlow));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"ParallelConvergingGatewayRule\");\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n\n                                          // create link\n                                          ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"process\", process);\nmatch.registerObject(\"inFlow\", inFlow);\nmatch.registerObject(\"parallelConvGateway\", parallelConvGateway);\nmatch.registerObject(\"outFlow\", outFlow);\nmatch.registerObject(\"lane\", lane);\nmatch.registerObject(\"laneSet\", laneSet);\nmatch.registerObject(\"parallelGateway\", parallelGateway);\nmatch.registerObject(\"divergeFlow\", divergeFlow);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, ParallelGateway parallelConvGateway,
			SequenceFlow outFlow, Lane lane, LaneSet laneSet,
			ParallelGateway parallelGateway, SequenceFlow divergeFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Converging\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"Diverging\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_parallelConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"parallelConvGateway.gatewayDirection\", true, csp);\r\nvar_parallelConvGateway_gatewayDirection.setValue(parallelConvGateway.getGatewayDirection());\r\nvar_parallelConvGateway_gatewayDirection.setType(\"EObject\");\r\nVariable var_parallelGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"parallelGateway.gatewayDirection\", true, csp);\r\nvar_parallelGateway_gatewayDirection.setValue(parallelGateway.getGatewayDirection());\r\nvar_parallelGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();EqGatewayDirection eqGatewayDirection_0 = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\ncsp.getConstraints().add(eqGatewayDirection_0);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_parallelConvGateway_gatewayDirection,literal0);\r\neqGatewayDirection_0.setRuleName(\"\");\r\neqGatewayDirection_0.solve(var_parallelGateway_gatewayDirection,literal1);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, ParallelGateway parallelConvGateway,
			SequenceFlow outFlow, Lane lane, LaneSet laneSet,
			ParallelGateway parallelGateway, SequenceFlow divergeFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"parallelConvGateway\",parallelConvGateway);\r\nisApplicableMatch.registerObject(\"outFlow\",outFlow);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"inFlowToStep\",inFlowToStep);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"parallelStep\",parallelStep);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nisApplicableMatch.registerObject(\"parallelGateway\",parallelGateway);\r\nisApplicableMatch.registerObject(\"pgwToParallelStep\",pgwToParallelStep);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"divergeFlowToFlow\",divergeFlowToFlow);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, SequenceFlow inFlow,
			ParallelGateway parallelConvGateway, SequenceFlow outFlow,
			ParallelFlow flow, SequenceFlowToUCFlow inFlowToFlow, Step step,
			SequenceFlowToStep inFlowToStep, Flow initFlow,
			ParallelStep parallelStep, Lane lane, LaneSet laneSet,
			ParallelGateway parallelGateway, FlowNodeToStep pgwToParallelStep,
			SequenceFlow divergeFlow, SequenceFlowToUCFlow divergeFlowToFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"parallelConvGateway\", parallelConvGateway);\nruleresult.registerObject(\"outFlow\", outFlow);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"inFlowToFlow\", inFlowToFlow);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"inFlowToStep\", inFlowToStep);\nruleresult.registerObject(\"initFlow\", initFlow);\nruleresult.registerObject(\"parallelStep\", parallelStep);\nruleresult.registerObject(\"pcgwToParStep\", pcgwToParStep);\nruleresult.registerObject(\"outFlowToInitFlow\", outFlowToInitFlow);\nruleresult.registerObject(\"outFlowToParallelStep\", outFlowToParallelStep);\nruleresult.registerObject(\"lane\", lane);\nruleresult.registerObject(\"laneSet\", laneSet);\nruleresult.registerObject(\"parallelGateway\", parallelGateway);\nruleresult.registerObject(\"pgwToParallelStep\", pgwToParallelStep);\nruleresult.registerObject(\"divergeFlow\", divergeFlow);\nruleresult.registerObject(\"divergeFlowToFlow\", divergeFlowToFlow);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject process,
			EObject inFlow, EObject parallelConvGateway, EObject outFlow,
			EObject flow, EObject inFlowToFlow, EObject step,
			EObject inFlowToStep, EObject initFlow, EObject parallelStep,
			EObject pcgwToParStep, EObject outFlowToInitFlow,
			EObject outFlowToParallelStep, EObject lane, EObject laneSet,
			EObject parallelGateway, EObject pgwToParallelStep,
			EObject divergeFlow, EObject divergeFlowToFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"parallelConvGateway\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getParallelGateway()) && match.getObject(\"outFlow\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getSequenceFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_800828 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_140476 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_363880 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_363880 = null;\n      Match match = null;\n      Iterator fujaba__IterParallelConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ParallelGateway parallelConvGateway = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      bpmn2.Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // iterate to-many link laneSets from process to laneSet\n         fujaba__Success = false;\n\n         fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n         while ( fujaba__IterProcessToLaneSet.hasNext () )\n         {\n            try\n            {\n               laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n               // bind object\n               _TmpObject = _edge_flowElements.getTrg ();\n\n               // ensure correct type and really bound of object parallelConvGateway\n               JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n               parallelConvGateway = (ParallelGateway) _TmpObject;\n\n               // check link flowElements from parallelConvGateway to process\n               JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // bind object\n                     _TmpObject = divergeFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object parallelGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                     parallelGateway = (ParallelGateway) _TmpObject;\n\n                     // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                     JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                     // check link flowElements from parallelGateway to process\n                     JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                           // ensure correct type and really bound of object inFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           inFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check link targetRef from inFlow to parallelConvGateway\n                           JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                                 // ensure correct type and really bound of object outFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 outFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link sourceRef from outFlow to parallelConvGateway\n                                 JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                 ));\n\n                                 // iterate to-many link flowNodeRefs from parallelConvGateway to lane\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParallelConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                                 while ( fujaba__IterParallelConvGatewayToLane.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       lane = (Lane) fujaba__IterParallelConvGatewayToLane.next ();\n\n                                       // check object lane is really bound\n                                       JavaSDM.ensure ( lane != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_800828 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_800828 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_800828 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_800828.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_800828 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_800828.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_parallelConvGateway_flowElements_140476 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                             // check object __DEC_parallelConvGateway_flowElements_140476 is really bound\n                                             JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_140476 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_140476.getFlowElements().contains(parallelConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_140476 and process \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_140476.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link default from outFlow\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_363880\n                                             fujaba__Success = false;\n\n                                             fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_363880 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_363880.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_parallelConvGateway_targetRef_363880 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_363880.next ();\n\n                                                   // check object __DEC_parallelConvGateway_targetRef_363880 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_363880 != null );\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_363880 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_363880.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_363880 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_363880.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_363880 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_363880.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowElements is really bound\n                                          JavaSDM.ensure ( _edge_flowElements != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object parallelConvGateway is really bound\n                                          JavaSDM.ensure ( parallelConvGateway != null );\n                                          // check object parallelGateway is really bound\n                                          JavaSDM.ensure ( parallelGateway != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                          JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelConvGateway to process\n                                          JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelGateway to process\n                                          JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link sourceRef from divergeFlow to parallelGateway\n                                          JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link sourceRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowElements to process\n                                          JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                          ));\n\n                                          // check link targetRef from inFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link targetRef from divergeFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link targetRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link trg from _edge_flowElements to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (_edge_flowElements.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to parallelConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_54(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_741560 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_230943 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_563367 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_563367 = null;\n      Match match = null;\n      Iterator fujaba__IterParallelConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToParallelConvGateway = null;\n      ParallelGateway parallelConvGateway = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToParallelGateway = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      bpmn2.Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // iterate to-many link laneSets from process to laneSet\n         fujaba__Success = false;\n\n         fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n         while ( fujaba__IterProcessToLaneSet.hasNext () )\n         {\n            try\n            {\n               laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n               // iterate to-many link flowElements from process to parallelGateway\n               fujaba__Success = false;\n\n               fujaba__IterProcessToParallelGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToParallelGateway.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToParallelGateway.next ();\n\n                     // ensure correct type and really bound of object parallelGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                     parallelGateway = (ParallelGateway) _TmpObject;\n                     // bind object\n                     _TmpObject = _edge_flowElements.getTrg ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n\n                     // check link flowElements from outFlow to process\n                     JavaSDM.ensure (process.equals (outFlow.eContainer()\n                     ));\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects outFlow and divergeFlow \n                           JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                           // check link sourceRef from divergeFlow to parallelGateway\n                           JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to inFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToInFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                                 // ensure correct type and really bound of object inFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 inFlow = (SequenceFlow) _TmpObject;\n                                 // check isomorphic binding between objects inFlow and divergeFlow \n                                 JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // iterate to-many link flowElements from process to parallelConvGateway\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToParallelConvGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n                                 while ( fujaba__IterProcessToParallelConvGateway.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterProcessToParallelConvGateway.next ();\n\n                                       // ensure correct type and really bound of object parallelConvGateway\n                                       JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                                       parallelConvGateway = (ParallelGateway) _TmpObject;\n                                       // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                       JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                       // check link sourceRef from outFlow to parallelConvGateway\n                                       JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                       ));\n\n                                       // check link targetRef from inFlow to parallelConvGateway\n                                       JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                       ));\n\n                                       // iterate to-many link flowNodeRefs from parallelConvGateway to lane\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParallelConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                                       while ( fujaba__IterParallelConvGatewayToLane.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             lane = (Lane) fujaba__IterParallelConvGatewayToLane.next ();\n\n                                             // check object lane is really bound\n                                             JavaSDM.ensure ( lane != null );\n                                             // check link lanes from lane to laneSet\n                                             JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_741560 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_741560 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_741560 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_741560.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_741560 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_741560.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_parallelConvGateway_flowElements_230943 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_parallelConvGateway_flowElements_230943 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_230943 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_230943.getFlowElements().contains(parallelConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_230943 and process \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_230943.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link default from outFlow\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_563367\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_563367 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_563367.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_parallelConvGateway_targetRef_563367 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_563367.next ();\n\n                                                         // check object __DEC_parallelConvGateway_targetRef_563367 is really bound\n                                                         JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_563367 != null );\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_563367 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_563367.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_563367 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_563367.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_563367 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_563367.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_flowElements is really bound\n                                                JavaSDM.ensure ( _edge_flowElements != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object parallelConvGateway is really bound\n                                                JavaSDM.ensure ( parallelConvGateway != null );\n                                                // check object parallelGateway is really bound\n                                                JavaSDM.ensure ( parallelGateway != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                                JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from inFlow to process\n                                                JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from parallelConvGateway to process\n                                                JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from parallelGateway to process\n                                                JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                                ));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link sourceRef from divergeFlow to parallelGateway\n                                                JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link sourceRef from outFlow to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_flowElements to process\n                                                JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                                ));\n\n                                                // check link targetRef from inFlow to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link targetRef from divergeFlow to parallelConvGateway\n                                                JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link targetRef from outFlow to parallelConvGateway\n                                                JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link trg from _edge_flowElements to outFlow\n                                                JavaSDM.ensure (outFlow.equals (_edge_flowElements.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to parallelConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_55(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_681730 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_826099 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_529741 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_529741 = null;\n      Match match = null;\n      Iterator fujaba__IterLaneSetToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ParallelGateway parallelConvGateway = null;\n      bpmn2.Process process = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = inFlow.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) inFlow.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(inFlow));\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n\n         // check link flowElements from parallelConvGateway to process\n         JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n         ));\n\n         // check link targetRef from inFlow to parallelConvGateway\n         JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects inFlow and divergeFlow \n               JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n               // bind object\n               _TmpObject = divergeFlow.getSourceRef ();\n\n               // ensure correct type and really bound of object parallelGateway\n               JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n               parallelGateway = (ParallelGateway) _TmpObject;\n\n               // check isomorphic binding between objects parallelGateway and parallelConvGateway \n               JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n               // check link flowElements from parallelGateway to process\n               JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to outFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToOutFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and divergeFlow \n                     JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // check link sourceRef from outFlow to parallelConvGateway\n                     JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link laneSets from process to laneSet\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                     while ( fujaba__IterProcessToLaneSet.hasNext () )\n                     {\n                        try\n                        {\n                           laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n                           // iterate to-many link lanes from laneSet to lane\n                           fujaba__Success = false;\n\n                           fujaba__IterLaneSetToLane = new ArrayList(laneSet.getLanes()).iterator ();\n\n                           while ( fujaba__IterLaneSetToLane.hasNext () )\n                           {\n                              try\n                              {\n                                 lane = (Lane) fujaba__IterLaneSetToLane.next ();\n\n                                 // check object lane is really bound\n                                 JavaSDM.ensure ( lane != null );\n                                 // check link flowNodeRefs from lane to parallelConvGateway\n                                 JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_681730 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_681730 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_681730 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_681730.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_681730 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_681730.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_parallelConvGateway_flowElements_826099 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                       // check object __DEC_parallelConvGateway_flowElements_826099 is really bound\n                                       JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_826099 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_826099.getFlowElements().contains(parallelConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_826099 and process \n                                       JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_826099.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link default from outFlow\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_529741\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_529741 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_529741.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_parallelConvGateway_targetRef_529741 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_529741.next ();\n\n                                             // check object __DEC_parallelConvGateway_targetRef_529741 is really bound\n                                             JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_529741 != null );\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_529741 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_529741.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_529741 and inFlow \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_529741.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_529741 and outFlow \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_529741.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_targetRef is really bound\n                                    JavaSDM.ensure ( _edge_targetRef != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object parallelConvGateway is really bound\n                                    JavaSDM.ensure ( parallelConvGateway != null );\n                                    // check object parallelGateway is really bound\n                                    JavaSDM.ensure ( parallelGateway != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                    JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from parallelConvGateway to process\n                                    JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from parallelGateway to process\n                                    JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                    ));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link sourceRef from divergeFlow to parallelGateway\n                                    JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link sourceRef from outFlow to parallelConvGateway\n                                    JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_targetRef to inFlow\n                                    JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                    ));\n\n                                    // check link targetRef from inFlow to parallelConvGateway\n                                    JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link targetRef from divergeFlow to parallelConvGateway\n                                    JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link targetRef from outFlow to parallelConvGateway\n                                    JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link trg from _edge_targetRef to parallelConvGateway\n                                    JavaSDM.ensure (parallelConvGateway.equals (_edge_targetRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to parallelConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_56(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_89647 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_969846 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_260058 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_260058 = null;\n      Match match = null;\n      Iterator fujaba__IterParallelConvGatewayTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      Iterator fujaba__IterParallelConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToParallelGateway = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterParallelConvGatewayToLane = null;\n      Lane lane = null;\n      ParallelGateway parallelConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getTrg ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n\n         // check link targetRef from inFlow to parallelConvGateway\n         JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from parallelConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterParallelConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterParallelConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterParallelConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = parallelConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) parallelConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(parallelConvGateway));\n\n               // check link flowElements from inFlow to process\n               JavaSDM.ensure (process.equals (inFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and divergeFlow \n                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                     // iterate to-many link flowElements from process to parallelGateway\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToParallelGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToParallelGateway.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToParallelGateway.next ();\n\n                           // ensure correct type and really bound of object parallelGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                           parallelGateway = (ParallelGateway) _TmpObject;\n                           // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                           JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                           // check link sourceRef from divergeFlow to parallelGateway\n                           JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link sourceRef from parallelConvGateway to outFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParallelConvGatewayToOutFlow = new ArrayList(parallelConvGateway.getOutgoing()).iterator ();\n\n                                 while ( fujaba__IterParallelConvGatewayToOutFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       outFlow = (SequenceFlow) fujaba__IterParallelConvGatewayToOutFlow.next ();\n\n                                       // check object outFlow is really bound\n                                       JavaSDM.ensure ( outFlow != null );\n                                       // check isomorphic binding between objects outFlow and divergeFlow \n                                       JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from outFlow to process\n                                       JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                       ));\n\n                                       // iterate to-many link trg from parallelConvGateway to _edge_targetRef\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParallelConvGatewayTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterParallelConvGatewayTo_edge_targetRef.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_targetRef = (EMoflonEdge) fujaba__IterParallelConvGatewayTo_edge_targetRef.next ();\n\n                                             // check object _edge_targetRef is really bound\n                                             JavaSDM.ensure ( _edge_targetRef != null );\n                                             // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                             JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                             // check link src from _edge_targetRef to inFlow\n                                             JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_89647 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_89647 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_89647 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_89647.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_89647 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_89647.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_parallelConvGateway_flowElements_969846 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_parallelConvGateway_flowElements_969846 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_969846 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_969846.getFlowElements().contains(parallelConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_969846 and process \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_969846.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link default from outFlow\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_260058\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_260058 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_260058.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_parallelConvGateway_targetRef_260058 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_260058.next ();\n\n                                                         // check object __DEC_parallelConvGateway_targetRef_260058 is really bound\n                                                         JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_260058 != null );\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_260058 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_260058.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_260058 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_260058.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_260058 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_260058.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_incoming is really bound\n                                                JavaSDM.ensure ( _edge_incoming != null );\n                                                // check object _edge_targetRef is really bound\n                                                JavaSDM.ensure ( _edge_targetRef != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object parallelConvGateway is really bound\n                                                JavaSDM.ensure ( parallelConvGateway != null );\n                                                // check object parallelGateway is really bound\n                                                JavaSDM.ensure ( parallelGateway != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                                JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                                JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from inFlow to process\n                                                JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from parallelConvGateway to process\n                                                JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from parallelGateway to process\n                                                JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                                ));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link sourceRef from divergeFlow to parallelGateway\n                                                JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link sourceRef from outFlow to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_incoming to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (_edge_incoming.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_targetRef to inFlow\n                                                JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                                ));\n\n                                                // check link targetRef from inFlow to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link targetRef from divergeFlow to parallelConvGateway\n                                                JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link targetRef from outFlow to parallelConvGateway\n                                                JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link trg from _edge_incoming to inFlow\n                                                JavaSDM.ensure (inFlow.equals (_edge_incoming.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_targetRef to parallelConvGateway\n                                                JavaSDM.ensure (parallelConvGateway.equals (_edge_targetRef.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to parallelConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_57(EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_739910 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_100467 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_946614 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_946614 = null;\n      Match match = null;\n      Iterator fujaba__IterParallelConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToParallelGateway = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterParallelConvGatewayToLane = null;\n      Lane lane = null;\n      ParallelGateway parallelConvGateway = null;\n      SequenceFlow outFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sourceRef is really bound\n         JavaSDM.ensure ( _edge_sourceRef != null );\n         // bind object\n         _TmpObject = _edge_sourceRef.getSrc ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_sourceRef.getTrg ();\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n\n         // check link sourceRef from outFlow to parallelConvGateway\n         JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from parallelConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterParallelConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterParallelConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterParallelConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = parallelConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) parallelConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(parallelConvGateway));\n\n               // check link flowElements from outFlow to process\n               JavaSDM.ensure (process.equals (outFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and divergeFlow \n                     JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                     // iterate to-many link flowElements from process to parallelGateway\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToParallelGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToParallelGateway.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToParallelGateway.next ();\n\n                           // ensure correct type and really bound of object parallelGateway\n                           JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                           parallelGateway = (ParallelGateway) _TmpObject;\n                           // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                           JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                           // check link sourceRef from divergeFlow to parallelGateway\n                           JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link targetRef from parallelConvGateway to inFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParallelConvGatewayToInFlow = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                 while ( fujaba__IterParallelConvGatewayToInFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       inFlow = (SequenceFlow) fujaba__IterParallelConvGatewayToInFlow.next ();\n\n                                       // check object inFlow is really bound\n                                       JavaSDM.ensure ( inFlow != null );\n                                       // check isomorphic binding between objects inFlow and divergeFlow \n                                       JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from inFlow to process\n                                       JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_739910 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_739910 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_739910 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_739910.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_739910 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_739910.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_parallelConvGateway_flowElements_100467 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                             // check object __DEC_parallelConvGateway_flowElements_100467 is really bound\n                                             JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_100467 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_100467.getFlowElements().contains(parallelConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_100467 and process \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_100467.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link default from outFlow\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_946614\n                                             fujaba__Success = false;\n\n                                             fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_946614 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_946614.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_parallelConvGateway_targetRef_946614 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_946614.next ();\n\n                                                   // check object __DEC_parallelConvGateway_targetRef_946614 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_946614 != null );\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_946614 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_946614.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_946614 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_946614.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_946614 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_946614.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_sourceRef is really bound\n                                          JavaSDM.ensure ( _edge_sourceRef != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object parallelConvGateway is really bound\n                                          JavaSDM.ensure ( parallelConvGateway != null );\n                                          // check object parallelGateway is really bound\n                                          JavaSDM.ensure ( parallelGateway != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                          JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelConvGateway to process\n                                          JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelGateway to process\n                                          JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link sourceRef from divergeFlow to parallelGateway\n                                          JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link sourceRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_sourceRef to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                          ));\n\n                                          // check link targetRef from inFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link targetRef from divergeFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link targetRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link trg from _edge_sourceRef to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (_edge_sourceRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to parallelConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_58(
			EMoflonEdge _edge_sourceRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_154007 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_731206 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_657110 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_657110 = null;\n      Match match = null;\n      Iterator fujaba__IterOutFlowTo_edge_sourceRef = null;\n      EMoflonEdge _edge_sourceRef = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterParallelConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      SequenceFlow outFlow = null;\n      ParallelGateway parallelConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_outgoing is really bound\n         JavaSDM.ensure ( _edge_outgoing != null );\n         // bind object\n         _TmpObject = _edge_outgoing.getSrc ();\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_outgoing.getTrg ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = outFlow.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) outFlow.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(outFlow));\n\n         // check link flowElements from parallelConvGateway to process\n         JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n         ));\n\n         // check link sourceRef from outFlow to parallelConvGateway\n         JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects outFlow and divergeFlow \n               JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n               // bind object\n               _TmpObject = divergeFlow.getSourceRef ();\n\n               // ensure correct type and really bound of object parallelGateway\n               JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n               parallelGateway = (ParallelGateway) _TmpObject;\n\n               // check isomorphic binding between objects parallelGateway and parallelConvGateway \n               JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n               // check link flowElements from parallelGateway to process\n               JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to inFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToInFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                     // ensure correct type and really bound of object inFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     inFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and divergeFlow \n                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                     // check isomorphic binding between objects outFlow and inFlow \n                     JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                     // check link targetRef from inFlow to parallelConvGateway\n                     JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                     ));\n\n                     // iterate to-many link flowNodeRefs from parallelConvGateway to lane\n                     fujaba__Success = false;\n\n                     fujaba__IterParallelConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parallelConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                     while ( fujaba__IterParallelConvGatewayToLane.hasNext () )\n                     {\n                        try\n                        {\n                           lane = (Lane) fujaba__IterParallelConvGatewayToLane.next ();\n\n                           // check object lane is really bound\n                           JavaSDM.ensure ( lane != null );\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link src from outFlow to _edge_sourceRef\n                                 fujaba__Success = false;\n\n                                 fujaba__IterOutFlowTo_edge_sourceRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterOutFlowTo_edge_sourceRef.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_sourceRef = (EMoflonEdge) fujaba__IterOutFlowTo_edge_sourceRef.next ();\n\n                                       // check object _edge_sourceRef is really bound\n                                       JavaSDM.ensure ( _edge_sourceRef != null );\n                                       // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                       JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                       // check link trg from _edge_sourceRef to parallelConvGateway\n                                       JavaSDM.ensure (parallelConvGateway.equals (_edge_sourceRef.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_154007 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_154007 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_154007 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_154007.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_154007 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_154007.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_parallelConvGateway_flowElements_731206 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                             // check object __DEC_parallelConvGateway_flowElements_731206 is really bound\n                                             JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_731206 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_731206.getFlowElements().contains(parallelConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_731206 and process \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_731206.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link default from outFlow\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_657110\n                                             fujaba__Success = false;\n\n                                             fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_657110 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_657110.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_parallelConvGateway_targetRef_657110 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_657110.next ();\n\n                                                   // check object __DEC_parallelConvGateway_targetRef_657110 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_657110 != null );\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_657110 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_657110.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_657110 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_657110.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_657110 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_657110.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_outgoing is really bound\n                                          JavaSDM.ensure ( _edge_outgoing != null );\n                                          // check object _edge_sourceRef is really bound\n                                          JavaSDM.ensure ( _edge_sourceRef != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object parallelConvGateway is really bound\n                                          JavaSDM.ensure ( parallelConvGateway != null );\n                                          // check object parallelGateway is really bound\n                                          JavaSDM.ensure ( parallelGateway != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                          JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                          JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelConvGateway to process\n                                          JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelGateway to process\n                                          JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link sourceRef from divergeFlow to parallelGateway\n                                          JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link sourceRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_outgoing to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (_edge_outgoing.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_sourceRef to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                          ));\n\n                                          // check link targetRef from inFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link targetRef from divergeFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link targetRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link trg from _edge_outgoing to outFlow\n                                          JavaSDM.ensure (outFlow.equals (_edge_outgoing.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_sourceRef to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (_edge_sourceRef.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to parallelConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_59(EMoflonEdge _edge_outgoing);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_28653 = null;\n      FlowElementsContainer __DEC_parallelConvGateway_flowElements_83768 = null;\n      Iterator fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_556657 = null;\n      SequenceFlow __DEC_parallelConvGateway_targetRef_556657 = null;\n      Match match = null;\n      Iterator fujaba__IterParallelConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterParallelConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToParallelGateway = null;\n      ParallelGateway parallelGateway = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      ParallelGateway parallelConvGateway = null;\n      Lane lane = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowNodeRefs is really bound\n         JavaSDM.ensure ( _edge_flowNodeRefs != null );\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getSrc ();\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getTrg ();\n\n         // ensure correct type and really bound of object parallelConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n         parallelConvGateway = (ParallelGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = parallelConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) parallelConvGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(parallelConvGateway));\n\n         // check link flowNodeRefs from lane to parallelConvGateway\n         JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // iterate to-many link flowElements from process to parallelGateway\n               fujaba__Success = false;\n\n               fujaba__IterProcessToParallelGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToParallelGateway.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToParallelGateway.next ();\n\n                     // ensure correct type and really bound of object parallelGateway\n                     JavaSDM.ensure ( _TmpObject instanceof ParallelGateway );\n                     parallelGateway = (ParallelGateway) _TmpObject;\n                     // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                     JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                     // check link sourceRef from divergeFlow to parallelGateway\n                     JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link laneSets from process to laneSet\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                     while ( fujaba__IterProcessToLaneSet.hasNext () )\n                     {\n                        try\n                        {\n                           laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n                           // check link lanes from lane to laneSet\n                           JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                           ));\n\n                           // iterate to-many link sourceRef from parallelConvGateway to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterParallelConvGatewayToOutFlow = new ArrayList(parallelConvGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterParallelConvGatewayToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 outFlow = (SequenceFlow) fujaba__IterParallelConvGatewayToOutFlow.next ();\n\n                                 // check object outFlow is really bound\n                                 JavaSDM.ensure ( outFlow != null );\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check link flowElements from outFlow to process\n                                 JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                 ));\n\n                                 // iterate to-many link targetRef from parallelConvGateway to inFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParallelConvGatewayToInFlow = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                 while ( fujaba__IterParallelConvGatewayToInFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       inFlow = (SequenceFlow) fujaba__IterParallelConvGatewayToInFlow.next ();\n\n                                       // check object inFlow is really bound\n                                       JavaSDM.ensure ( inFlow != null );\n                                       // check isomorphic binding between objects inFlow and divergeFlow \n                                       JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from inFlow to process\n                                       JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_28653 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_28653 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_28653 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_28653.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_28653 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_28653.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_parallelConvGateway_flowElements_83768 = parallelConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) parallelConvGateway.eContainer() : null;\n\n                                             // check object __DEC_parallelConvGateway_flowElements_83768 is really bound\n                                             JavaSDM.ensure ( __DEC_parallelConvGateway_flowElements_83768 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_parallelConvGateway_flowElements_83768.getFlowElements().contains(parallelConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_parallelConvGateway_flowElements_83768 and process \n                                             JavaSDM.ensure ( !__DEC_parallelConvGateway_flowElements_83768.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link default from outFlow\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link targetRef from parallelConvGateway to __DEC_parallelConvGateway_targetRef_556657\n                                             fujaba__Success = false;\n\n                                             fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_556657 = new ArrayList(parallelConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_556657.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_parallelConvGateway_targetRef_556657 = (SequenceFlow) fujaba__IterParallelConvGatewayTo__DEC_parallelConvGateway_targetRef_556657.next ();\n\n                                                   // check object __DEC_parallelConvGateway_targetRef_556657 is really bound\n                                                   JavaSDM.ensure ( __DEC_parallelConvGateway_targetRef_556657 != null );\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_556657 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_556657.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_556657 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_556657.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_parallelConvGateway_targetRef_556657 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_parallelConvGateway_targetRef_556657.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowNodeRefs is really bound\n                                          JavaSDM.ensure ( _edge_flowNodeRefs != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object parallelConvGateway is really bound\n                                          JavaSDM.ensure ( parallelConvGateway != null );\n                                          // check object parallelGateway is really bound\n                                          JavaSDM.ensure ( parallelGateway != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check isomorphic binding between objects parallelGateway and parallelConvGateway \n                                          JavaSDM.ensure ( !parallelGateway.equals (parallelConvGateway) );\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelConvGateway to process\n                                          JavaSDM.ensure (process.equals (parallelConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from parallelGateway to process\n                                          JavaSDM.ensure (process.equals (parallelGateway.eContainer()\n                                          ));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link sourceRef from divergeFlow to parallelGateway\n                                          JavaSDM.ensure (parallelGateway.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link sourceRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowNodeRefs to lane\n                                          JavaSDM.ensure (lane.equals (_edge_flowNodeRefs.getSrc ()\n                                          ));\n\n                                          // check link targetRef from inFlow to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link targetRef from divergeFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link targetRef from outFlow to parallelConvGateway\n                                          JavaSDM.ensure (!(parallelConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link trg from _edge_flowNodeRefs to parallelConvGateway\n                                          JavaSDM.ensure (parallelConvGateway.equals (_edge_flowNodeRefs.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to parallelConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (parallelConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,parallelConvGateway,outFlow,lane,laneSet,parallelGateway,divergeFlow);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_60(
			EMoflonEdge _edge_flowNodeRefs);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // ParallelConvergingGatewayRule
