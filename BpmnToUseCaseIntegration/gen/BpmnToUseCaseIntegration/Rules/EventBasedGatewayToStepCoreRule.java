/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackageDeclaration;
import BpmnToUseCaseIntegration.DocumentRootToUseCasesModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.IntermediateCatchEventToAlternativeFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SequenceFlowToAlternativeFlowAlternative;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;
import bpmn2.UserTask;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Event Based Gateway To Step Core Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getEventBasedGatewayToStepCoreRule()
 * @model
 * @generated
 */
public interface EventBasedGatewayToStepCoreRule extends EObject, AbstractRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __process_flowElements_eventBasedGateway = null;\n      EMoflonEdge __inFlow_targetRef_eventBasedGateway = null;\n      EMoflonEdge __eventBasedGateway_incoming_inFlow = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object eventBasedGateway is really bound\n         JavaSDM.ensure ( eventBasedGateway != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,process,inFlow,eventBasedGateway));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object eventBasedGateway is really bound\n            JavaSDM.ensure ( eventBasedGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // create object __process_flowElements_eventBasedGateway\n            __process_flowElements_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __inFlow_targetRef_eventBasedGateway\n            __inFlow_targetRef_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __eventBasedGateway_incoming_inFlow\n            __eventBasedGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_eventBasedGateway\n            __process_flowElements_eventBasedGateway.setName (\"flowElements\");\n            // assign attribute __inFlow_targetRef_eventBasedGateway\n            __inFlow_targetRef_eventBasedGateway.setName (\"targetRef\");\n            // assign attribute __eventBasedGateway_incoming_inFlow\n            __eventBasedGateway_incoming_inFlow.setName (\"incoming\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_eventBasedGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__inFlow_targetRef_eventBasedGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__eventBasedGateway_incoming_inFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,eventBasedGateway,\"toBeTranslatedNodes\");\n\n            // create link\n            __process_flowElements_eventBasedGateway.setSrc( process);\n\n\n            // create link\n            __inFlow_targetRef_eventBasedGateway.setSrc( inFlow);\n\n\n            // create link\n            __eventBasedGateway_incoming_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __process_flowElements_eventBasedGateway.setTrg( eventBasedGateway);\n\n\n            // create link\n            __eventBasedGateway_incoming_inFlow.setSrc( eventBasedGateway);\n\n\n            // create link\n            __inFlow_targetRef_eventBasedGateway.setTrg( eventBasedGateway);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object eventBasedGateway is really bound\n            JavaSDM.ensure ( eventBasedGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // create object __process_flowElements_inFlow\n            __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_inFlow\n            __process_flowElements_inFlow.setName (\"flowElements\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,inFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_inFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,process,\"contextNodes\");\n\n            // create link\n            __process_flowElements_inFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_inFlow.setTrg( inFlow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,process,inFlow,eventBasedGateway);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, EventBasedGateway eventBasedGateway);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      EventBasedGateway eventBasedGateway = null;\n      Flow flow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      Process process = null;\n      ProcessToActor processToActor = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      FlowNodeToStep ebgToNormalStep = null;\n      NormalStep normalStep = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge ebgToNormalStep__source__eventBasedGateway = null;\n      EMoflonEdge __process_flowElements_eventBasedGateway = null;\n      EMoflonEdge ebgToNormalStep__target__normalStep = null;\n      EMoflonEdge flow__steps__normalStep = null;\n      EMoflonEdge __eventBasedGateway_incoming_inFlow = null;\n      EMoflonEdge __inFlow_targetRef_eventBasedGateway = null;\n      EMoflonEdge normalStep__actor__actor = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"eventBasedGateway\"));\n\n         // ensure correct type and really bound of object eventBasedGateway\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventBasedGateway = (EventBasedGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToFlow\"));\n\n         // ensure correct type and really bound of object inFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"processToActor\"));\n\n         // ensure correct type and really bound of object processToActor\n         JavaSDM.ensure ( _TmpObject instanceof ProcessToActor );\n         processToActor = (ProcessToActor) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object ebgToNormalStep\n         ebgToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // create object normalStep\n         normalStep = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // assign attribute normalStep\n         normalStep.setName ((java.lang.String)csp.getAttributeVariable(\"normalStep\",\"name\").getValue());\n         // assign attribute normalStep\n         normalStep.setLabel ((java.lang.String)csp.getAttributeVariable(\"normalStep\",\"label\").getValue());\n\n         // create link\n         ebgToNormalStep.setSource( eventBasedGateway);\n\n\n         // create link\n         normalStep.setActor( actor);\n\n\n         // create link\n         ebgToNormalStep.setTarget( normalStep);\n\n\n         // create link\n         flow.getSteps().add(normalStep);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ebgToNormalStep is really bound\n         JavaSDM.ensure ( ebgToNormalStep != null );\n         // check object eventBasedGateway is really bound\n         JavaSDM.ensure ( eventBasedGateway != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,eventBasedGateway,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,normalStep,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object ebgToNormalStep is really bound\n         JavaSDM.ensure ( ebgToNormalStep != null );\n         // check object eventBasedGateway is really bound\n         JavaSDM.ensure ( eventBasedGateway != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToFlow is really bound\n         JavaSDM.ensure ( inFlowToFlow != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object processToActor is really bound\n         JavaSDM.ensure ( processToActor != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check isomorphic binding between objects ebgToNormalStep and actor \n         JavaSDM.ensure ( !ebgToNormalStep.equals (actor) );\n\n         // check isomorphic binding between objects eventBasedGateway and actor \n         JavaSDM.ensure ( !eventBasedGateway.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects inFlow and actor \n         JavaSDM.ensure ( !inFlow.equals (actor) );\n\n         // check isomorphic binding between objects inFlowToFlow and actor \n         JavaSDM.ensure ( !inFlowToFlow.equals (actor) );\n\n         // check isomorphic binding between objects normalStep and actor \n         JavaSDM.ensure ( !normalStep.equals (actor) );\n\n         // check isomorphic binding between objects process and actor \n         JavaSDM.ensure ( !process.equals (actor) );\n\n         // check isomorphic binding between objects processToActor and actor \n         JavaSDM.ensure ( !processToActor.equals (actor) );\n\n         // check isomorphic binding between objects eventBasedGateway and ebgToNormalStep \n         JavaSDM.ensure ( !eventBasedGateway.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects flow and ebgToNormalStep \n         JavaSDM.ensure ( !flow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects inFlow and ebgToNormalStep \n         JavaSDM.ensure ( !inFlow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and ebgToNormalStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects normalStep and ebgToNormalStep \n         JavaSDM.ensure ( !normalStep.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects process and ebgToNormalStep \n         JavaSDM.ensure ( !process.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects processToActor and ebgToNormalStep \n         JavaSDM.ensure ( !processToActor.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects flow and eventBasedGateway \n         JavaSDM.ensure ( !flow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlow and eventBasedGateway \n         JavaSDM.ensure ( !inFlow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlowToFlow and eventBasedGateway \n         JavaSDM.ensure ( !inFlowToFlow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects normalStep and eventBasedGateway \n         JavaSDM.ensure ( !normalStep.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects process and eventBasedGateway \n         JavaSDM.ensure ( !process.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects processToActor and eventBasedGateway \n         JavaSDM.ensure ( !processToActor.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and flow \n         JavaSDM.ensure ( !inFlowToFlow.equals (flow) );\n\n         // check isomorphic binding between objects normalStep and flow \n         JavaSDM.ensure ( !normalStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects processToActor and flow \n         JavaSDM.ensure ( !processToActor.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and inFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects processToActor and inFlow \n         JavaSDM.ensure ( !processToActor.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlowToFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and inFlowToFlow \n         JavaSDM.ensure ( !process.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects processToActor and inFlowToFlow \n         JavaSDM.ensure ( !processToActor.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and normalStep \n         JavaSDM.ensure ( !process.equals (normalStep) );\n\n         // check isomorphic binding between objects processToActor and normalStep \n         JavaSDM.ensure ( !processToActor.equals (normalStep) );\n\n         // check isomorphic binding between objects processToActor and process \n         JavaSDM.ensure ( !processToActor.equals (process) );\n\n         // create object ebgToNormalStep__source__eventBasedGateway\n         ebgToNormalStep__source__eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_eventBasedGateway\n         __process_flowElements_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ebgToNormalStep__target__normalStep\n         ebgToNormalStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__normalStep\n         flow__steps__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __eventBasedGateway_incoming_inFlow\n         __eventBasedGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __inFlow_targetRef_eventBasedGateway\n         __inFlow_targetRef_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object normalStep__actor__actor\n         normalStep__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"EventBasedGatewayToStepCoreRule\");\n         // assign attribute __process_flowElements_eventBasedGateway\n         __process_flowElements_eventBasedGateway.setName (\"flowElements\");\n         // assign attribute __inFlow_targetRef_eventBasedGateway\n         __inFlow_targetRef_eventBasedGateway.setName (\"targetRef\");\n         // assign attribute __eventBasedGateway_incoming_inFlow\n         __eventBasedGateway_incoming_inFlow.setName (\"incoming\");\n         // assign attribute normalStep__actor__actor\n         normalStep__actor__actor.setName (\"actor\");\n         // assign attribute flow__steps__normalStep\n         flow__steps__normalStep.setName (\"steps\");\n         // assign attribute ebgToNormalStep__source__eventBasedGateway\n         ebgToNormalStep__source__eventBasedGateway.setName (\"source\");\n         // assign attribute ebgToNormalStep__target__normalStep\n         ebgToNormalStep__target__normalStep.setName (\"target\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep__source__eventBasedGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_eventBasedGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__eventBasedGateway_incoming_inFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__inFlow_targetRef_eventBasedGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,normalStep__actor__actor,\"createdEdges\");\n\n         // create link\n         __process_flowElements_eventBasedGateway.setSrc( process);\n\n\n         // create link\n         __inFlow_targetRef_eventBasedGateway.setSrc( inFlow);\n\n\n         // create link\n         __eventBasedGateway_incoming_inFlow.setTrg( inFlow);\n\n\n         // create link\n         ebgToNormalStep__source__eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         __eventBasedGateway_incoming_inFlow.setSrc( eventBasedGateway);\n\n\n         // create link\n         __process_flowElements_eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         __inFlow_targetRef_eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         normalStep__actor__actor.setTrg( actor);\n\n\n         // create link\n         normalStep__actor__actor.setSrc( normalStep);\n\n\n         // create link\n         ebgToNormalStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         flow__steps__normalStep.setTrg( normalStep);\n\n\n         // create link\n         flow__steps__normalStep.setSrc( flow);\n\n\n         // create link\n         ebgToNormalStep__target__normalStep.setSrc( ebgToNormalStep);\n\n\n         // create link\n         ebgToNormalStep__source__eventBasedGateway.setSrc( ebgToNormalStep);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,process,inFlow,eventBasedGateway,actor,processToActor,normalStep,flow,inFlowToFlow,ebgToNormalStep);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      EventBasedGateway eventBasedGateway = null;\n      SequenceFlow inFlow = null;\n      Process process = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __processToActor_source_process = null;\n      EMoflonEdge __process_flowElements_eventBasedGateway = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __eventBasedGateway_incoming_inFlow = null;\n      EMoflonEdge __inFlowToFlow_source_inFlow = null;\n      EMoflonEdge __inFlow_targetRef_eventBasedGateway = null;\n      EMoflonEdge __processToActor_target_actor = null;\n      EMoflonEdge __inFlowToFlow_target_flow = null;\n      CSP csp = null;\n      Actor actor = null;\n      Iterator fujaba__IterProcessToProcessToActor = null;\n      ProcessToActor processToActor = null;\n      Flow flow = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"EventBasedGatewayToStepCoreRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"eventBasedGateway\"));\n\n         // ensure correct type and really bound of object eventBasedGateway\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventBasedGateway = (EventBasedGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // iterate to-many link source from inFlow to inFlowToFlow\n         fujaba__Success = false;\n\n         fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n         while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n         {\n            try\n            {\n               inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n               // check object inFlowToFlow is really bound\n               JavaSDM.ensure ( inFlowToFlow != null );\n               // bind object\n               flow = inFlowToFlow.getTarget ();\n\n               // check object flow is really bound\n               JavaSDM.ensure ( flow != null );\n\n               // iterate to-many link source from process to processToActor\n               fujaba__Success = false;\n\n               fujaba__IterProcessToProcessToActor = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(process,ProcessToActor.class,\"source\")).iterator ();\n\n               while ( fujaba__IterProcessToProcessToActor.hasNext () )\n               {\n                  try\n                  {\n                     processToActor = (ProcessToActor) fujaba__IterProcessToProcessToActor.next ();\n\n                     // check object processToActor is really bound\n                     JavaSDM.ensure ( processToActor != null );\n                     // bind object\n                     actor = processToActor.getTarget ();\n\n                     // check object actor is really bound\n                     JavaSDM.ensure ( actor != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object eventBasedGateway is really bound\n                        JavaSDM.ensure ( eventBasedGateway != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object inFlow is really bound\n                        JavaSDM.ensure ( inFlow != null );\n                        // check object inFlowToFlow is really bound\n                        JavaSDM.ensure ( inFlowToFlow != null );\n                        // check object process is really bound\n                        JavaSDM.ensure ( process != null );\n                        // check object processToActor is really bound\n                        JavaSDM.ensure ( processToActor != null );\n                        // check link flowElements from eventBasedGateway to process\n                        JavaSDM.ensure (process.equals (eventBasedGateway.eContainer()\n                        ));\n\n                        // check link flowElements from inFlow to process\n                        JavaSDM.ensure (process.equals (inFlow.eContainer()\n                        ));\n\n                        // check link incoming from inFlow to eventBasedGateway\n                        JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n                        ));\n\n                        // check link source from inFlowToFlow to inFlow\n                        JavaSDM.ensure (inFlow.equals (inFlowToFlow.getSource ()\n                        ));\n\n                        // check link source from processToActor to process\n                        JavaSDM.ensure (process.equals (processToActor.getSource ()\n                        ));\n\n                        // check link target from inFlowToFlow to flow\n                        JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                        ));\n\n                        // check link target from processToActor to actor\n                        JavaSDM.ensure (actor.equals (processToActor.getTarget ()\n                        ));\n\n                        // create object __process_flowElements_inFlow\n                        __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __processToActor_source_process\n                        __processToActor_source_process = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __process_flowElements_eventBasedGateway\n                        __process_flowElements_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object isApplicableMatch\n                        isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                        // create object __eventBasedGateway_incoming_inFlow\n                        __eventBasedGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __inFlowToFlow_source_inFlow\n                        __inFlowToFlow_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __inFlow_targetRef_eventBasedGateway\n                        __inFlow_targetRef_eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __processToActor_target_actor\n                        __processToActor_target_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __inFlowToFlow_target_flow\n                        __inFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // assign attribute __process_flowElements_inFlow\n                        __process_flowElements_inFlow.setName (\"flowElements\");\n                        // assign attribute __process_flowElements_eventBasedGateway\n                        __process_flowElements_eventBasedGateway.setName (\"flowElements\");\n                        // assign attribute __inFlow_targetRef_eventBasedGateway\n                        __inFlow_targetRef_eventBasedGateway.setName (\"targetRef\");\n                        // assign attribute __eventBasedGateway_incoming_inFlow\n                        __eventBasedGateway_incoming_inFlow.setName (\"incoming\");\n                        // assign attribute __processToActor_source_process\n                        __processToActor_source_process.setName (\"source\");\n                        // assign attribute __processToActor_target_actor\n                        __processToActor_target_actor.setName (\"target\");\n                        // assign attribute __inFlowToFlow_source_inFlow\n                        __inFlowToFlow_source_inFlow.setName (\"source\");\n                        // assign attribute __inFlowToFlow_target_flow\n                        __inFlowToFlow_target_flow.setName (\"target\");\n\n                        // create link\n                        __process_flowElements_inFlow.setSrc( process);\n\n\n                        // create link\n                        __processToActor_source_process.setTrg( process);\n\n\n                        // create link\n                        __process_flowElements_eventBasedGateway.setSrc( process);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(process);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                        // create link\n                        __eventBasedGateway_incoming_inFlow.setTrg( inFlow);\n\n\n                        // create link\n                        __inFlowToFlow_source_inFlow.setTrg( inFlow);\n\n\n                        // create link\n                        __process_flowElements_inFlow.setTrg( inFlow);\n\n\n                        // create link\n                        __inFlow_targetRef_eventBasedGateway.setSrc( inFlow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(eventBasedGateway);\n\n\n                        // create link\n                        __eventBasedGateway_incoming_inFlow.setSrc( eventBasedGateway);\n\n\n                        // create link\n                        __process_flowElements_eventBasedGateway.setTrg( eventBasedGateway);\n\n\n                        // create link\n                        __inFlow_targetRef_eventBasedGateway.setTrg( eventBasedGateway);\n\n\n                        // create link\n                        __processToActor_target_actor.setTrg( actor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(actor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(processToActor);\n\n\n                        // create link\n                        __processToActor_target_actor.setSrc( processToActor);\n\n\n                        // create link\n                        __processToActor_source_process.setSrc( processToActor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(flow);\n\n\n                        // create link\n                        __inFlowToFlow_target_flow.setTrg( flow);\n\n\n                        // create link\n                        __inFlowToFlow_target_flow.setSrc( inFlowToFlow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(inFlowToFlow);\n\n\n                        // create link\n                        __inFlowToFlow_source_inFlow.setSrc( inFlowToFlow);\n\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__eventBasedGateway_incoming_inFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__processToActor_target_actor,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlow_targetRef_eventBasedGateway,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_eventBasedGateway,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__processToActor_source_process,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_source_inFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_inFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_target_flow,\"allContextElements\");\n                        // story node \'solve CSP\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,process,inFlow,eventBasedGateway,actor,processToActor,flow,inFlowToFlow));\n\n                           // ensure correct type and really bound of object csp\n                           JavaSDM.ensure ( _TmpObject instanceof CSP );\n                           csp = (CSP) _TmpObject;\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        // statement node \'check CSP\'\n                        fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                        if (fujaba__Success)\n                        {\n                           // story node \'add match to rule result\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object isApplicableMatch is really bound\n                              JavaSDM.ensure ( isApplicableMatch != null );\n                              // check object ruleresult is really bound\n                              JavaSDM.ensure ( ruleresult != null );\n                              // assign attribute ruleresult\n                              ruleresult.setSuccess (true);\n                              // assign attribute isApplicableMatch\n                              isApplicableMatch.setRuleName (\"EventBasedGatewayToStepCoreRule\");\n\n                              // create link\n                              isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"process\", process);\nmatch.registerObject(\"inFlow\", inFlow);\nmatch.registerObject(\"eventBasedGateway\", eventBasedGateway);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, EventBasedGateway eventBasedGateway);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Diverging\");\r\n\r\n// Create attribute variables\r\nVariable var_eventBasedGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.gatewayDirection\", true, csp);\r\nvar_eventBasedGateway_gatewayDirection.setValue(eventBasedGateway.getGatewayDirection());\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_eventBasedGateway_gatewayDirection,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, bpmn2.Process process,
			SequenceFlow inFlow, EventBasedGateway eventBasedGateway);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_eventBasedGateway_id = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.id\", true, csp);\r\nvar_eventBasedGateway_id.setValue(eventBasedGateway.getId());\r\nVariable var_eventBasedGateway_name = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.name\", true, csp);\r\nvar_eventBasedGateway_name.setValue(eventBasedGateway.getName());\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_normalStep_name = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.name\", csp);\r\nVariable var_normalStep_label = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.label\", csp);\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_eventBasedGateway_id,var_normalStep_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_eventBasedGateway_name,var_normalStep_label);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"eventBasedGateway\",eventBasedGateway);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"processToActor\",processToActor);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, SequenceFlow inFlow,
			EventBasedGateway eventBasedGateway, Actor actor,
			ProcessToActor processToActor, Flow flow,
			SequenceFlowToUCFlow inFlowToFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"eventBasedGateway\", eventBasedGateway);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"processToActor\", processToActor);\nruleresult.registerObject(\"normalStep\", normalStep);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"inFlowToFlow\", inFlowToFlow);\nruleresult.registerObject(\"ebgToNormalStep\", ebgToNormalStep);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject process,
			EObject inFlow, EObject eventBasedGateway, EObject actor,
			EObject processToActor, EObject normalStep, EObject flow,
			EObject inFlowToFlow, EObject ebgToNormalStep);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"eventBasedGateway\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getEventBasedGateway());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __normalStep_actor_actor = null;\n      EMoflonEdge __flow_steps_normalStep = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,actor,normalStep,flow));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object normalStep is really bound\n            JavaSDM.ensure ( normalStep != null );\n            // create object __normalStep_actor_actor\n            __normalStep_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_normalStep\n            __flow_steps_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __normalStep_actor_actor\n            __normalStep_actor_actor.setName (\"actor\");\n            // assign attribute __flow_steps_normalStep\n            __flow_steps_normalStep.setName (\"steps\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__normalStep_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,normalStep,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_normalStep,\"toBeTranslatedEdges\");\n\n            // create link\n            __normalStep_actor_actor.setTrg( actor);\n\n\n            // create link\n            __flow_steps_normalStep.setTrg( normalStep);\n\n\n            // create link\n            __normalStep_actor_actor.setSrc( normalStep);\n\n\n            // create link\n            __flow_steps_normalStep.setSrc( flow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object normalStep is really bound\n            JavaSDM.ensure ( normalStep != null );\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,actor,normalStep,flow);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Actor actor, NormalStep normalStep,
			Flow flow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      Flow flow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      NormalStep normalStep = null;\n      Process process = null;\n      ProcessToActor processToActor = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      EventBasedGateway eventBasedGateway = null;\n      FlowNodeToStep ebgToNormalStep = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge eventBasedGateway__incoming__inFlow = null;\n      EMoflonEdge inFlow__targetRef__eventBasedGateway = null;\n      EMoflonEdge ebgToNormalStep__target__normalStep = null;\n      EMoflonEdge __normalStep_actor_actor = null;\n      EMoflonEdge ebgToNormalStep__source__eventBasedGateway = null;\n      EMoflonEdge __flow_steps_normalStep = null;\n      EMoflonEdge process__flowElements__eventBasedGateway = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToFlow\"));\n\n         // ensure correct type and really bound of object inFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"normalStep\"));\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"processToActor\"));\n\n         // ensure correct type and really bound of object processToActor\n         JavaSDM.ensure ( _TmpObject instanceof ProcessToActor );\n         processToActor = (ProcessToActor) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object eventBasedGateway\n         eventBasedGateway = Bpmn2Factory.eINSTANCE.createEventBasedGateway();\n\n         // create object ebgToNormalStep\n         ebgToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // assign attribute eventBasedGateway\n         eventBasedGateway.setId ((java.lang.String)csp.getAttributeVariable(\"eventBasedGateway\",\"id\").getValue());\n         // assign attribute eventBasedGateway\n         eventBasedGateway.setName ((java.lang.String)csp.getAttributeVariable(\"eventBasedGateway\",\"name\").getValue());\n         // assign attribute eventBasedGateway\n         eventBasedGateway.setGatewayDirection ((bpmn2.GatewayDirection)csp.getAttributeVariable(\"eventBasedGateway\",\"gatewayDirection\").getValue());\n\n         // create link\n         ebgToNormalStep.setTarget( normalStep);\n\n\n         // create link\n         \tprocess.getFlowElements().add(eventBasedGateway); // add link\n\n\n         // create link\n         eventBasedGateway.getIncoming().add(inFlow);\n\n\n         // create link\n         ebgToNormalStep.setSource( eventBasedGateway);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ebgToNormalStep is really bound\n         JavaSDM.ensure ( ebgToNormalStep != null );\n         // check object eventBasedGateway is really bound\n         JavaSDM.ensure ( eventBasedGateway != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,normalStep,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,eventBasedGateway,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object ebgToNormalStep is really bound\n         JavaSDM.ensure ( ebgToNormalStep != null );\n         // check object eventBasedGateway is really bound\n         JavaSDM.ensure ( eventBasedGateway != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToFlow is really bound\n         JavaSDM.ensure ( inFlowToFlow != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object processToActor is really bound\n         JavaSDM.ensure ( processToActor != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check isomorphic binding between objects ebgToNormalStep and actor \n         JavaSDM.ensure ( !ebgToNormalStep.equals (actor) );\n\n         // check isomorphic binding between objects eventBasedGateway and actor \n         JavaSDM.ensure ( !eventBasedGateway.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects inFlow and actor \n         JavaSDM.ensure ( !inFlow.equals (actor) );\n\n         // check isomorphic binding between objects inFlowToFlow and actor \n         JavaSDM.ensure ( !inFlowToFlow.equals (actor) );\n\n         // check isomorphic binding between objects normalStep and actor \n         JavaSDM.ensure ( !normalStep.equals (actor) );\n\n         // check isomorphic binding between objects process and actor \n         JavaSDM.ensure ( !process.equals (actor) );\n\n         // check isomorphic binding between objects processToActor and actor \n         JavaSDM.ensure ( !processToActor.equals (actor) );\n\n         // check isomorphic binding between objects eventBasedGateway and ebgToNormalStep \n         JavaSDM.ensure ( !eventBasedGateway.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects flow and ebgToNormalStep \n         JavaSDM.ensure ( !flow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects inFlow and ebgToNormalStep \n         JavaSDM.ensure ( !inFlow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and ebgToNormalStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects normalStep and ebgToNormalStep \n         JavaSDM.ensure ( !normalStep.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects process and ebgToNormalStep \n         JavaSDM.ensure ( !process.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects processToActor and ebgToNormalStep \n         JavaSDM.ensure ( !processToActor.equals (ebgToNormalStep) );\n\n         // check isomorphic binding between objects flow and eventBasedGateway \n         JavaSDM.ensure ( !flow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlow and eventBasedGateway \n         JavaSDM.ensure ( !inFlow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlowToFlow and eventBasedGateway \n         JavaSDM.ensure ( !inFlowToFlow.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects normalStep and eventBasedGateway \n         JavaSDM.ensure ( !normalStep.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects process and eventBasedGateway \n         JavaSDM.ensure ( !process.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects processToActor and eventBasedGateway \n         JavaSDM.ensure ( !processToActor.equals (eventBasedGateway) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and flow \n         JavaSDM.ensure ( !inFlowToFlow.equals (flow) );\n\n         // check isomorphic binding between objects normalStep and flow \n         JavaSDM.ensure ( !normalStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects processToActor and flow \n         JavaSDM.ensure ( !processToActor.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and inFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects processToActor and inFlow \n         JavaSDM.ensure ( !processToActor.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlowToFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and inFlowToFlow \n         JavaSDM.ensure ( !process.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects processToActor and inFlowToFlow \n         JavaSDM.ensure ( !processToActor.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and normalStep \n         JavaSDM.ensure ( !process.equals (normalStep) );\n\n         // check isomorphic binding between objects processToActor and normalStep \n         JavaSDM.ensure ( !processToActor.equals (normalStep) );\n\n         // check isomorphic binding between objects processToActor and process \n         JavaSDM.ensure ( !processToActor.equals (process) );\n\n         // create object eventBasedGateway__incoming__inFlow\n         eventBasedGateway__incoming__inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object inFlow__targetRef__eventBasedGateway\n         inFlow__targetRef__eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ebgToNormalStep__target__normalStep\n         ebgToNormalStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __normalStep_actor_actor\n         __normalStep_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ebgToNormalStep__source__eventBasedGateway\n         ebgToNormalStep__source__eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_normalStep\n         __flow_steps_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object process__flowElements__eventBasedGateway\n         process__flowElements__eventBasedGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"EventBasedGatewayToStepCoreRule\");\n         // assign attribute process__flowElements__eventBasedGateway\n         process__flowElements__eventBasedGateway.setName (\"flowElements\");\n         // assign attribute inFlow__targetRef__eventBasedGateway\n         inFlow__targetRef__eventBasedGateway.setName (\"targetRef\");\n         // assign attribute eventBasedGateway__incoming__inFlow\n         eventBasedGateway__incoming__inFlow.setName (\"incoming\");\n         // assign attribute __normalStep_actor_actor\n         __normalStep_actor_actor.setName (\"actor\");\n         // assign attribute __flow_steps_normalStep\n         __flow_steps_normalStep.setName (\"steps\");\n         // assign attribute ebgToNormalStep__source__eventBasedGateway\n         ebgToNormalStep__source__eventBasedGateway.setName (\"source\");\n         // assign attribute ebgToNormalStep__target__normalStep\n         ebgToNormalStep__target__normalStep.setName (\"target\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,eventBasedGateway__incoming__inFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,inFlow__targetRef__eventBasedGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__normalStep_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ebgToNormalStep__source__eventBasedGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_normalStep,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,process__flowElements__eventBasedGateway,\"createdEdges\");\n\n         // create link\n         process__flowElements__eventBasedGateway.setSrc( process);\n\n\n         // create link\n         eventBasedGateway__incoming__inFlow.setTrg( inFlow);\n\n\n         // create link\n         inFlow__targetRef__eventBasedGateway.setSrc( inFlow);\n\n\n         // create link\n         process__flowElements__eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         eventBasedGateway__incoming__inFlow.setSrc( eventBasedGateway);\n\n\n         // create link\n         inFlow__targetRef__eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         ebgToNormalStep__source__eventBasedGateway.setTrg( eventBasedGateway);\n\n\n         // create link\n         __normalStep_actor_actor.setTrg( actor);\n\n\n         // create link\n         __flow_steps_normalStep.setTrg( normalStep);\n\n\n         // create link\n         ebgToNormalStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         __normalStep_actor_actor.setSrc( normalStep);\n\n\n         // create link\n         __flow_steps_normalStep.setSrc( flow);\n\n\n         // create link\n         ebgToNormalStep__target__normalStep.setSrc( ebgToNormalStep);\n\n\n         // create link\n         ebgToNormalStep__source__eventBasedGateway.setSrc( ebgToNormalStep);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,process,inFlow,eventBasedGateway,actor,processToActor,normalStep,flow,inFlowToFlow,ebgToNormalStep);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      Flow flow = null;\n      NormalStep normalStep = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __processToActor_source_process = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __inFlowToFlow_source_inFlow = null;\n      EMoflonEdge __normalStep_actor_actor = null;\n      EMoflonEdge __processToActor_target_actor = null;\n      EMoflonEdge __flow_steps_normalStep = null;\n      EMoflonEdge __inFlowToFlow_target_flow = null;\n      CSP csp = null;\n      Process process = null;\n      Iterator fujaba__IterActorToProcessToActor = null;\n      ProcessToActor processToActor = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"EventBasedGatewayToStepCoreRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n         _TmpObject = (match.getObject(\"normalStep\"));\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // iterate to-many link target from flow to inFlowToFlow\n         fujaba__Success = false;\n\n         fujaba__IterFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,SequenceFlowToUCFlow.class,\"target\")).iterator ();\n\n         while ( fujaba__IterFlowToInFlowToFlow.hasNext () )\n         {\n            try\n            {\n               inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterFlowToInFlowToFlow.next ();\n\n               // check object inFlowToFlow is really bound\n               JavaSDM.ensure ( inFlowToFlow != null );\n               // bind object\n               inFlow = inFlowToFlow.getSource ();\n\n               // check object inFlow is really bound\n               JavaSDM.ensure ( inFlow != null );\n\n               // iterate to-many link target from actor to processToActor\n               fujaba__Success = false;\n\n               fujaba__IterActorToProcessToActor = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ProcessToActor.class,\"target\")).iterator ();\n\n               while ( fujaba__IterActorToProcessToActor.hasNext () )\n               {\n                  try\n                  {\n                     processToActor = (ProcessToActor) fujaba__IterActorToProcessToActor.next ();\n\n                     // check object processToActor is really bound\n                     JavaSDM.ensure ( processToActor != null );\n                     // bind object\n                     process = processToActor.getSource ();\n\n                     // check object process is really bound\n                     JavaSDM.ensure ( process != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object inFlow is really bound\n                        JavaSDM.ensure ( inFlow != null );\n                        // check object inFlowToFlow is really bound\n                        JavaSDM.ensure ( inFlowToFlow != null );\n                        // check object normalStep is really bound\n                        JavaSDM.ensure ( normalStep != null );\n                        // check object process is really bound\n                        JavaSDM.ensure ( process != null );\n                        // check object processToActor is really bound\n                        JavaSDM.ensure ( processToActor != null );\n                        // check link actor from normalStep to actor\n                        JavaSDM.ensure (actor.equals (normalStep.getActor ()\n                        ));\n\n                        // check link flowElements from inFlow to process\n                        JavaSDM.ensure (process.equals (inFlow.eContainer()\n                        ));\n\n                        // check link source from inFlowToFlow to inFlow\n                        JavaSDM.ensure (inFlow.equals (inFlowToFlow.getSource ()\n                        ));\n\n                        // check link source from processToActor to process\n                        JavaSDM.ensure (process.equals (processToActor.getSource ()\n                        ));\n\n                        // check link steps from normalStep to flow\n                        JavaSDM.ensure (flow.equals (normalStep.eContainer()\n                        ));\n\n                        // check link target from inFlowToFlow to flow\n                        JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                        ));\n\n                        // check link target from processToActor to actor\n                        JavaSDM.ensure (actor.equals (processToActor.getTarget ()\n                        ));\n\n                        // create object __process_flowElements_inFlow\n                        __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __processToActor_source_process\n                        __processToActor_source_process = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object isApplicableMatch\n                        isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                        // create object __inFlowToFlow_source_inFlow\n                        __inFlowToFlow_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __normalStep_actor_actor\n                        __normalStep_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __processToActor_target_actor\n                        __processToActor_target_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __flow_steps_normalStep\n                        __flow_steps_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __inFlowToFlow_target_flow\n                        __inFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // assign attribute __process_flowElements_inFlow\n                        __process_flowElements_inFlow.setName (\"flowElements\");\n                        // assign attribute __processToActor_source_process\n                        __processToActor_source_process.setName (\"source\");\n                        // assign attribute __processToActor_target_actor\n                        __processToActor_target_actor.setName (\"target\");\n                        // assign attribute __normalStep_actor_actor\n                        __normalStep_actor_actor.setName (\"actor\");\n                        // assign attribute __flow_steps_normalStep\n                        __flow_steps_normalStep.setName (\"steps\");\n                        // assign attribute __inFlowToFlow_source_inFlow\n                        __inFlowToFlow_source_inFlow.setName (\"source\");\n                        // assign attribute __inFlowToFlow_target_flow\n                        __inFlowToFlow_target_flow.setName (\"target\");\n\n                        // create link\n                        __process_flowElements_inFlow.setSrc( process);\n\n\n                        // create link\n                        __processToActor_source_process.setTrg( process);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(process);\n\n\n                        // create link\n                        __inFlowToFlow_source_inFlow.setTrg( inFlow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                        // create link\n                        __process_flowElements_inFlow.setTrg( inFlow);\n\n\n                        // create link\n                        __normalStep_actor_actor.setTrg( actor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(actor);\n\n\n                        // create link\n                        __processToActor_target_actor.setTrg( actor);\n\n\n                        // create link\n                        __processToActor_target_actor.setSrc( processToActor);\n\n\n                        // create link\n                        __processToActor_source_process.setSrc( processToActor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(processToActor);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(normalStep);\n\n\n                        // create link\n                        __flow_steps_normalStep.setTrg( normalStep);\n\n\n                        // create link\n                        __normalStep_actor_actor.setSrc( normalStep);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(flow);\n\n\n                        // create link\n                        __inFlowToFlow_target_flow.setTrg( flow);\n\n\n                        // create link\n                        __flow_steps_normalStep.setSrc( flow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(inFlowToFlow);\n\n\n                        // create link\n                        __inFlowToFlow_target_flow.setSrc( inFlowToFlow);\n\n\n                        // create link\n                        __inFlowToFlow_source_inFlow.setSrc( inFlowToFlow);\n\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_normalStep,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__processToActor_source_process,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_inFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_source_inFlow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_target_flow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__processToActor_target_actor,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__normalStep_actor_actor,\"allContextElements\");\n                        // story node \'solve CSP\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,process,inFlow,actor,processToActor,normalStep,flow,inFlowToFlow));\n\n                           // ensure correct type and really bound of object csp\n                           JavaSDM.ensure ( _TmpObject instanceof CSP );\n                           csp = (CSP) _TmpObject;\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        // statement node \'check CSP\'\n                        fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                        if (fujaba__Success)\n                        {\n                           // story node \'add match to rule result\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object isApplicableMatch is really bound\n                              JavaSDM.ensure ( isApplicableMatch != null );\n                              // check object ruleresult is really bound\n                              JavaSDM.ensure ( ruleresult != null );\n                              // assign attribute ruleresult\n                              ruleresult.setSuccess (true);\n                              // assign attribute isApplicableMatch\n                              isApplicableMatch.setRuleName (\"EventBasedGatewayToStepCoreRule\");\n\n                              // create link\n                              isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"actor\", actor);\nmatch.registerObject(\"normalStep\", normalStep);\nmatch.registerObject(\"flow\", flow);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Actor actor,
			NormalStep normalStep, Flow flow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Actor actor,
			NormalStep normalStep, Flow flow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Diverging\");\r\n\r\n// Create attribute variables\r\nVariable var_normalStep_name = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.name\", true, csp);\r\nvar_normalStep_name.setValue(normalStep.getName());\r\nVariable var_normalStep_label = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.label\", true, csp);\r\nvar_normalStep_label.setValue(normalStep.getLabel());\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_eventBasedGateway_id = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.id\", csp);\r\nVariable var_eventBasedGateway_name = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.name\", csp);\r\nVariable var_eventBasedGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.gatewayDirection\", csp);\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqGatewayDirection eqGatewayDirection = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqGatewayDirection);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_eventBasedGateway_id,var_normalStep_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_eventBasedGateway_name,var_normalStep_label);\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_eventBasedGateway_gatewayDirection,literal0);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"processToActor\",processToActor);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, SequenceFlow inFlow, Actor actor,
			ProcessToActor processToActor, NormalStep normalStep, Flow flow,
			SequenceFlowToUCFlow inFlowToFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"eventBasedGateway\", eventBasedGateway);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"processToActor\", processToActor);\nruleresult.registerObject(\"normalStep\", normalStep);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"inFlowToFlow\", inFlowToFlow);\nruleresult.registerObject(\"ebgToNormalStep\", ebgToNormalStep);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject process,
			EObject inFlow, EObject eventBasedGateway, EObject actor,
			EObject processToActor, EObject normalStep, EObject flow,
			EObject inFlowToFlow, EObject ebgToNormalStep);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"normalStep\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_eventBasedGateway_flowElements_547050 = null;\n      Iterator fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_499708 = null;\n      SequenceFlow __DEC_eventBasedGateway_targetRef_499708 = null;\n      Match match = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      EventBasedGateway eventBasedGateway = null;\n      Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_flowElements.getTrg ();\n\n         // ensure correct type and really bound of object eventBasedGateway\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventBasedGateway = (EventBasedGateway) _TmpObject;\n\n         // check link flowElements from eventBasedGateway to process\n         JavaSDM.ensure (process.equals (eventBasedGateway.eContainer()\n         ));\n\n         // iterate to-many link flowElements from process to inFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToInFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n               // ensure correct type and really bound of object inFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               inFlow = (SequenceFlow) _TmpObject;\n               // check link incoming from inFlow to eventBasedGateway\n               JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n               ));\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_eventBasedGateway_flowElements_547050 = eventBasedGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) eventBasedGateway.eContainer() : null;\n\n                     // check object __DEC_eventBasedGateway_flowElements_547050 is really bound\n                     JavaSDM.ensure ( __DEC_eventBasedGateway_flowElements_547050 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_eventBasedGateway_flowElements_547050.getFlowElements().contains(eventBasedGateway));\n\n                     // check isomorphic binding between objects __DEC_eventBasedGateway_flowElements_547050 and process \n                     JavaSDM.ensure ( !__DEC_eventBasedGateway_flowElements_547050.equals (process) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // negative check for link flowNodeRefs from eventBasedGateway\n                  JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(eventBasedGateway,Lane.class,\"flowNodeRefs\") .size() == 0);\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link incoming from eventBasedGateway to __DEC_eventBasedGateway_targetRef_499708\n                     fujaba__Success = false;\n\n                     fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_499708 = new ArrayList(eventBasedGateway.getIncoming()).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_499708.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_eventBasedGateway_targetRef_499708 = (SequenceFlow) fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_499708.next ();\n\n                           // check object __DEC_eventBasedGateway_targetRef_499708 is really bound\n                           JavaSDM.ensure ( __DEC_eventBasedGateway_targetRef_499708 != null );\n                           // check isomorphic binding between objects __DEC_eventBasedGateway_targetRef_499708 and inFlow \n                           JavaSDM.ensure ( !__DEC_eventBasedGateway_targetRef_499708.equals (inFlow) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_flowElements is really bound\n                  JavaSDM.ensure ( _edge_flowElements != null );\n                  // check object eventBasedGateway is really bound\n                  JavaSDM.ensure ( eventBasedGateway != null );\n                  // check object inFlow is really bound\n                  JavaSDM.ensure ( inFlow != null );\n                  // check object process is really bound\n                  JavaSDM.ensure ( process != null );\n                  // check link flowElements from eventBasedGateway to process\n                  JavaSDM.ensure (process.equals (eventBasedGateway.eContainer()\n                  ));\n\n                  // check link flowElements from inFlow to process\n                  JavaSDM.ensure (process.equals (inFlow.eContainer()\n                  ));\n\n                  // check link incoming from inFlow to eventBasedGateway\n                  JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n                  ));\n\n                  // check link src from _edge_flowElements to process\n                  JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                  ));\n\n                  // check link trg from _edge_flowElements to eventBasedGateway\n                  JavaSDM.ensure (eventBasedGateway.equals (_edge_flowElements.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,eventBasedGateway);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_178(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_eventBasedGateway_flowElements_12378 = null;\n      Iterator fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_836450 = null;\n      SequenceFlow __DEC_eventBasedGateway_targetRef_836450 = null;\n      Match match = null;\n      Process process = null;\n      EventBasedGateway eventBasedGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object eventBasedGateway\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventBasedGateway = (EventBasedGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = eventBasedGateway.eContainer() instanceof Process ? (Process) eventBasedGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(eventBasedGateway));\n\n         // check link flowElements from inFlow to process\n         JavaSDM.ensure (process.equals (inFlow.eContainer()\n         ));\n\n         // check link incoming from inFlow to eventBasedGateway\n         JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_eventBasedGateway_flowElements_12378 = eventBasedGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) eventBasedGateway.eContainer() : null;\n\n               // check object __DEC_eventBasedGateway_flowElements_12378 is really bound\n               JavaSDM.ensure ( __DEC_eventBasedGateway_flowElements_12378 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_eventBasedGateway_flowElements_12378.getFlowElements().contains(eventBasedGateway));\n\n               // check isomorphic binding between objects __DEC_eventBasedGateway_flowElements_12378 and process \n               JavaSDM.ensure ( !__DEC_eventBasedGateway_flowElements_12378.equals (process) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // negative check for link flowNodeRefs from eventBasedGateway\n            JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(eventBasedGateway,Lane.class,\"flowNodeRefs\") .size() == 0);\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link incoming from eventBasedGateway to __DEC_eventBasedGateway_targetRef_836450\n               fujaba__Success = false;\n\n               fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_836450 = new ArrayList(eventBasedGateway.getIncoming()).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_836450.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_eventBasedGateway_targetRef_836450 = (SequenceFlow) fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_836450.next ();\n\n                     // check object __DEC_eventBasedGateway_targetRef_836450 is really bound\n                     JavaSDM.ensure ( __DEC_eventBasedGateway_targetRef_836450 != null );\n                     // check isomorphic binding between objects __DEC_eventBasedGateway_targetRef_836450 and inFlow \n                     JavaSDM.ensure ( !__DEC_eventBasedGateway_targetRef_836450.equals (inFlow) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_targetRef is really bound\n            JavaSDM.ensure ( _edge_targetRef != null );\n            // check object eventBasedGateway is really bound\n            JavaSDM.ensure ( eventBasedGateway != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check link flowElements from eventBasedGateway to process\n            JavaSDM.ensure (process.equals (eventBasedGateway.eContainer()\n            ));\n\n            // check link flowElements from inFlow to process\n            JavaSDM.ensure (process.equals (inFlow.eContainer()\n            ));\n\n            // check link incoming from inFlow to eventBasedGateway\n            JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n            ));\n\n            // check link src from _edge_targetRef to inFlow\n            JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n            ));\n\n            // check link trg from _edge_targetRef to eventBasedGateway\n            JavaSDM.ensure (eventBasedGateway.equals (_edge_targetRef.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,eventBasedGateway);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_179(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      FlowElementsContainer __DEC_eventBasedGateway_flowElements_68733 = null;\n      Iterator fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_214306 = null;\n      SequenceFlow __DEC_eventBasedGateway_targetRef_214306 = null;\n      Match match = null;\n      Iterator fujaba__IterEventBasedGatewayTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      SequenceFlow inFlow = null;\n      Process process = null;\n      EventBasedGateway eventBasedGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object eventBasedGateway\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventBasedGateway = (EventBasedGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = eventBasedGateway.eContainer() instanceof Process ? (Process) eventBasedGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof Process );\n         process = (Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(eventBasedGateway));\n\n         // bind object\n         _TmpObject = _edge_incoming.getTrg ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // check link flowElements from inFlow to process\n         JavaSDM.ensure (process.equals (inFlow.eContainer()\n         ));\n\n         // check link incoming from inFlow to eventBasedGateway\n         JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link trg from eventBasedGateway to _edge_targetRef\n         fujaba__Success = false;\n\n         fujaba__IterEventBasedGatewayTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(eventBasedGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n         while ( fujaba__IterEventBasedGatewayTo_edge_targetRef.hasNext () )\n         {\n            try\n            {\n               _edge_targetRef = (EMoflonEdge) fujaba__IterEventBasedGatewayTo_edge_targetRef.next ();\n\n               // check object _edge_targetRef is really bound\n               JavaSDM.ensure ( _edge_targetRef != null );\n               // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n               JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n               // check link src from _edge_targetRef to inFlow\n               JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n               ));\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_eventBasedGateway_flowElements_68733 = eventBasedGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) eventBasedGateway.eContainer() : null;\n\n                     // check object __DEC_eventBasedGateway_flowElements_68733 is really bound\n                     JavaSDM.ensure ( __DEC_eventBasedGateway_flowElements_68733 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_eventBasedGateway_flowElements_68733.getFlowElements().contains(eventBasedGateway));\n\n                     // check isomorphic binding between objects __DEC_eventBasedGateway_flowElements_68733 and process \n                     JavaSDM.ensure ( !__DEC_eventBasedGateway_flowElements_68733.equals (process) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // negative check for link flowNodeRefs from eventBasedGateway\n                  JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(eventBasedGateway,Lane.class,\"flowNodeRefs\") .size() == 0);\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link incoming from eventBasedGateway to __DEC_eventBasedGateway_targetRef_214306\n                     fujaba__Success = false;\n\n                     fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_214306 = new ArrayList(eventBasedGateway.getIncoming()).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_214306.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_eventBasedGateway_targetRef_214306 = (SequenceFlow) fujaba__IterEventBasedGatewayTo__DEC_eventBasedGateway_targetRef_214306.next ();\n\n                           // check object __DEC_eventBasedGateway_targetRef_214306 is really bound\n                           JavaSDM.ensure ( __DEC_eventBasedGateway_targetRef_214306 != null );\n                           // check isomorphic binding between objects __DEC_eventBasedGateway_targetRef_214306 and inFlow \n                           JavaSDM.ensure ( !__DEC_eventBasedGateway_targetRef_214306.equals (inFlow) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_incoming is really bound\n                  JavaSDM.ensure ( _edge_incoming != null );\n                  // check object _edge_targetRef is really bound\n                  JavaSDM.ensure ( _edge_targetRef != null );\n                  // check object eventBasedGateway is really bound\n                  JavaSDM.ensure ( eventBasedGateway != null );\n                  // check object inFlow is really bound\n                  JavaSDM.ensure ( inFlow != null );\n                  // check object process is really bound\n                  JavaSDM.ensure ( process != null );\n                  // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                  JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                  // check link flowElements from eventBasedGateway to process\n                  JavaSDM.ensure (process.equals (eventBasedGateway.eContainer()\n                  ));\n\n                  // check link flowElements from inFlow to process\n                  JavaSDM.ensure (process.equals (inFlow.eContainer()\n                  ));\n\n                  // check link incoming from inFlow to eventBasedGateway\n                  JavaSDM.ensure (eventBasedGateway.equals (inFlow.getTargetRef ()\n                  ));\n\n                  // check link src from _edge_incoming to eventBasedGateway\n                  JavaSDM.ensure (eventBasedGateway.equals (_edge_incoming.getSrc ()\n                  ));\n\n                  // check link src from _edge_targetRef to inFlow\n                  JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                  ));\n\n                  // check link trg from _edge_incoming to inFlow\n                  JavaSDM.ensure (inFlow.equals (_edge_incoming.getTrg ()\n                  ));\n\n                  // check link trg from _edge_targetRef to eventBasedGateway\n                  JavaSDM.ensure (eventBasedGateway.equals (_edge_targetRef.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,process,inFlow,eventBasedGateway);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_180(
			EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Flow __DEC_normalStep_steps_314930 = null;\n      Iterator fujaba__IterNormalStepTo__DEC_normalStep_next_833280 = null;\n      Step __DEC_normalStep_next_833280 = null;\n      Match match = null;\n      Actor actor = null;\n      Flow flow = null;\n      NormalStep normalStep = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n\n         // bind object\n         flow = normalStep.eContainer() instanceof Flow ? (Flow) normalStep.eContainer() : null;\n\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(normalStep));\n\n         // bind object\n         _TmpObject = _edge_actor.getTrg ();\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n\n         // check link actor from normalStep to actor\n         JavaSDM.ensure (actor.equals (normalStep.getActor ()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_normalStep_steps_314930 = normalStep.eContainer() instanceof Flow ? (Flow) normalStep.eContainer() : null;\n\n               // check object __DEC_normalStep_steps_314930 is really bound\n               JavaSDM.ensure ( __DEC_normalStep_steps_314930 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_normalStep_steps_314930.getSteps().contains(normalStep));\n\n               // check isomorphic binding between objects __DEC_normalStep_steps_314930 and flow \n               JavaSDM.ensure ( !__DEC_normalStep_steps_314930.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link next from normalStep to __DEC_normalStep_next_833280\n               fujaba__Success = false;\n\n               fujaba__IterNormalStepTo__DEC_normalStep_next_833280 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,Step.class,\"next\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterNormalStepTo__DEC_normalStep_next_833280.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_normalStep_next_833280 = (Step) fujaba__IterNormalStepTo__DEC_normalStep_next_833280.next ();\n\n                     // check object __DEC_normalStep_next_833280 is really bound\n                     JavaSDM.ensure ( __DEC_normalStep_next_833280 != null );\n                     // check isomorphic binding between objects __DEC_normalStep_next_833280 and normalStep \n                     JavaSDM.ensure ( !__DEC_normalStep_next_833280.equals (normalStep) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check link next from normalStep to normalStep\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,NormalStep.class,\"next\")\n            .contains (normalStep)));\n\n            // check link next from normalStep to normalStep\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,NormalStep.class,\"next\")\n            .contains (normalStep)));\n\n            // check object _edge_actor is really bound\n            JavaSDM.ensure ( _edge_actor != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object normalStep is really bound\n            JavaSDM.ensure ( normalStep != null );\n            // check link actor from normalStep to actor\n            JavaSDM.ensure (actor.equals (normalStep.getActor ()\n            ));\n\n            // check link src from _edge_actor to normalStep\n            JavaSDM.ensure (normalStep.equals (_edge_actor.getSrc ()\n            ));\n\n            // check link steps from normalStep to flow\n            JavaSDM.ensure (flow.equals (normalStep.eContainer()\n            ));\n\n            // check link trg from _edge_actor to actor\n            JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_BWD(match,actor,normalStep,flow);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_BWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_74(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Flow __DEC_normalStep_steps_316707 = null;\n      Iterator fujaba__IterNormalStepTo__DEC_normalStep_next_148261 = null;\n      Step __DEC_normalStep_next_148261 = null;\n      Match match = null;\n      Actor actor = null;\n      NormalStep normalStep = null;\n      Flow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         flow = (Flow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = normalStep.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link steps from normalStep to flow\n         JavaSDM.ensure (flow.equals (normalStep.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_normalStep_steps_316707 = normalStep.eContainer() instanceof Flow ? (Flow) normalStep.eContainer() : null;\n\n               // check object __DEC_normalStep_steps_316707 is really bound\n               JavaSDM.ensure ( __DEC_normalStep_steps_316707 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_normalStep_steps_316707.getSteps().contains(normalStep));\n\n               // check isomorphic binding between objects __DEC_normalStep_steps_316707 and flow \n               JavaSDM.ensure ( !__DEC_normalStep_steps_316707.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link next from normalStep to __DEC_normalStep_next_148261\n               fujaba__Success = false;\n\n               fujaba__IterNormalStepTo__DEC_normalStep_next_148261 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,Step.class,\"next\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterNormalStepTo__DEC_normalStep_next_148261.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_normalStep_next_148261 = (Step) fujaba__IterNormalStepTo__DEC_normalStep_next_148261.next ();\n\n                     // check object __DEC_normalStep_next_148261 is really bound\n                     JavaSDM.ensure ( __DEC_normalStep_next_148261 != null );\n                     // check isomorphic binding between objects __DEC_normalStep_next_148261 and normalStep \n                     JavaSDM.ensure ( !__DEC_normalStep_next_148261.equals (normalStep) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check link next from normalStep to normalStep\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,NormalStep.class,\"next\")\n            .contains (normalStep)));\n\n            // check link next from normalStep to normalStep\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(normalStep,NormalStep.class,\"next\")\n            .contains (normalStep)));\n\n            // check object _edge_steps is really bound\n            JavaSDM.ensure ( _edge_steps != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object normalStep is really bound\n            JavaSDM.ensure ( normalStep != null );\n            // check link actor from normalStep to actor\n            JavaSDM.ensure (actor.equals (normalStep.getActor ()\n            ));\n\n            // check link src from _edge_steps to flow\n            JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n            ));\n\n            // check link steps from normalStep to flow\n            JavaSDM.ensure (flow.equals (normalStep.eContainer()\n            ));\n\n            // check link trg from _edge_steps to normalStep\n            JavaSDM.ensure (normalStep.equals (_edge_steps.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_BWD(match,actor,normalStep,flow);\n            if (fujaba__Success)\n            {\n               // statement node \'\'\n               fujaba__Success = this.checkTypes_BWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_75(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EventBasedGateway eventBasedGateway = null;\n      FlowNodeToStep ebgToNormalStep = null;\n      NormalStep normalStep = null;\n      Actor actor = null;\n      Iterator fujaba__IterProcessToProcessToActor = null;\n      ProcessToActor processToActor = null;\n      Flow flow = null;\n      Process process = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterInFlowToFlowListToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      Iterator fujaba__IterRuleEntryContainerToInFlowToFlowList = null;\n      RuleEntryList inFlowToFlowList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to inFlowToFlowList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToInFlowToFlowList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToInFlowToFlowList.hasNext () )\n         {\n            try\n            {\n               inFlowToFlowList = (RuleEntryList) fujaba__IterRuleEntryContainerToInFlowToFlowList.next ();\n\n               // check object inFlowToFlowList is really bound\n               JavaSDM.ensure ( inFlowToFlowList != null );\n               // iterate to-many link entryObjects from inFlowToFlowList to inFlowToFlow\n               fujaba__Success = false;\n\n               fujaba__IterInFlowToFlowListToInFlowToFlow = new ArrayList(inFlowToFlowList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterInFlowToFlowListToInFlowToFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInFlowToFlowListToInFlowToFlow.next ();\n\n                     // ensure correct type and really bound of object inFlowToFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n                     inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n                     // bind object\n                     inFlow = inFlowToFlow.getSource ();\n\n                     // check object inFlow is really bound\n                     JavaSDM.ensure ( inFlow != null );\n\n                     // bind object\n                     _TmpObject = inFlow.eContainer() instanceof Process ? (Process) inFlow.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof Process );\n                     process = (Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(inFlow));\n\n                     // bind object\n                     flow = inFlowToFlow.getTarget ();\n\n                     // check object flow is really bound\n                     JavaSDM.ensure ( flow != null );\n\n                     // iterate to-many link source from process to processToActor\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToProcessToActor = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(process,ProcessToActor.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterProcessToProcessToActor.hasNext () )\n                     {\n                        try\n                        {\n                           processToActor = (ProcessToActor) fujaba__IterProcessToProcessToActor.next ();\n\n                           // check object processToActor is really bound\n                           JavaSDM.ensure ( processToActor != null );\n                           // bind object\n                           actor = processToActor.getTarget ();\n\n                           // check object actor is really bound\n                           JavaSDM.ensure ( actor != null );\n\n                           // story node \'solve CSP\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,process,inFlow,eventBasedGateway,actor,processToActor,normalStep,flow,inFlowToFlow,ebgToNormalStep,ruleResult));\n\n                              // ensure correct type and really bound of object csp\n                              JavaSDM.ensure ( _TmpObject instanceof CSP );\n                              csp = (CSP) _TmpObject;\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n                           // statement node \'check CSP\'\n                           fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                           if (fujaba__Success)\n                           {\n                              // story node \'perform\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object actor is really bound\n                                 JavaSDM.ensure ( actor != null );\n                                 // check object flow is really bound\n                                 JavaSDM.ensure ( flow != null );\n                                 // check object inFlow is really bound\n                                 JavaSDM.ensure ( inFlow != null );\n                                 // check object inFlowToFlow is really bound\n                                 JavaSDM.ensure ( inFlowToFlow != null );\n                                 // check object process is really bound\n                                 JavaSDM.ensure ( process != null );\n                                 // check object processToActor is really bound\n                                 JavaSDM.ensure ( processToActor != null );\n                                 // check object ruleResult is really bound\n                                 JavaSDM.ensure ( ruleResult != null );\n                                 // create object eventBasedGateway\n                                 eventBasedGateway = Bpmn2Factory.eINSTANCE.createEventBasedGateway();\n\n                                 // create object ebgToNormalStep\n                                 ebgToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n                                 // create object normalStep\n                                 normalStep = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n                                 // assign attribute eventBasedGateway\n                                 eventBasedGateway.setId ((java.lang.String)csp.getAttributeVariable(\"eventBasedGateway\",\"id\").getValue());\n                                 // assign attribute eventBasedGateway\n                                 eventBasedGateway.setName ((java.lang.String)csp.getAttributeVariable(\"eventBasedGateway\",\"name\").getValue());\n                                 // assign attribute eventBasedGateway\n                                 eventBasedGateway.setGatewayDirection ((bpmn2.GatewayDirection)csp.getAttributeVariable(\"eventBasedGateway\",\"gatewayDirection\").getValue());\n                                 // assign attribute normalStep\n                                 normalStep.setName ((java.lang.String)csp.getAttributeVariable(\"normalStep\",\"name\").getValue());\n                                 // assign attribute normalStep\n                                 normalStep.setLabel ((java.lang.String)csp.getAttributeVariable(\"normalStep\",\"label\").getValue());\n                                 // assign attribute ruleResult\n                                 ruleResult.setSuccess (true);\n\n                                 // create link\n                                 \tprocess.getFlowElements().add(eventBasedGateway); // add link\n\n\n                                 // create link\n                                 eventBasedGateway.getIncoming().add(inFlow);\n\n\n                                 // create link\n                                 ebgToNormalStep.setSource( eventBasedGateway);\n\n\n                                 // create link\n                                 ruleResult.getSourceObjects().add(eventBasedGateway);\n\n\n                                 // create link\n                                 normalStep.setActor( actor);\n\n\n                                 // create link\n                                 ebgToNormalStep.setTarget( normalStep);\n\n\n                                 // create link\n                                 ruleResult.getTargetObjects().add(normalStep);\n\n\n                                 // create link\n                                 flow.getSteps().add(normalStep);\n\n\n                                 // create link\n                                 ruleResult.getCorrObjects().add(ebgToNormalStep);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              return ruleResult;\n\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			SequenceFlowToUCFlow inFlowToFlowDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Diverging\");\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_eventBasedGateway_id = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.id\", csp);\r\nVariable var_normalStep_name = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.name\", csp);\r\nVariable var_eventBasedGateway_name = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.name\", csp);\r\nVariable var_normalStep_label = CSPFactoryHelper.eINSTANCE.createVariable(\"normalStep.label\", csp);\r\nVariable var_eventBasedGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"eventBasedGateway.gatewayDirection\", csp);\r\n\r\n// Create constraints\r\nEq_modelgenGatewayDirection eq_modelgenGatewayDirection = new Eq_modelgenGatewayDirection();Eq_modelgen eq_modelgen = new Eq_modelgen();Eq_modelgen eq_modelgen_0 = new Eq_modelgen();\r\n\r\ncsp.getConstraints().add(eq_modelgenGatewayDirection);\r\ncsp.getConstraints().add(eq_modelgen);\r\ncsp.getConstraints().add(eq_modelgen_0);\r\n\r\n// Solve CSP\r\neq_modelgenGatewayDirection.setRuleName(\"\");\r\neq_modelgenGatewayDirection.solve(var_eventBasedGateway_gatewayDirection,literal0);\r\neq_modelgen.setRuleName(\"\");\r\neq_modelgen.solve(var_eventBasedGateway_id,var_normalStep_name);\r\neq_modelgen_0.setRuleName(\"\");\r\neq_modelgen_0.solve(var_eventBasedGateway_name,var_normalStep_label);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"processToActor\",processToActor);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, SequenceFlow inFlow,
			EventBasedGateway eventBasedGateway, Actor actor,
			ProcessToActor processToActor, NormalStep normalStep, Flow flow,
			SequenceFlowToUCFlow inFlowToFlow, FlowNodeToStep ebgToNormalStep,
			ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // EventBasedGatewayToStepCoreRule
