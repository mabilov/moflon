/**
 */
package BpmnToUseCaseIntegration.Rules;

import BpmnToUseCaseIntegration.BpmnToUseCaseIntegrationFactory;
import BpmnToUseCaseIntegration.DefinitionsToPackage;
import BpmnToUseCaseIntegration.DocRootToUCModel;
import BpmnToUseCaseIntegration.EndEventToFlow;
import BpmnToUseCaseIntegration.FlowNodeToStep;
import BpmnToUseCaseIntegration.ICEToAltFlow;
import BpmnToUseCaseIntegration.LaneToActor;
import BpmnToUseCaseIntegration.ProcessToActor;
import BpmnToUseCaseIntegration.ProcessToUseCase;
import BpmnToUseCaseIntegration.SeqFlowToAltFlowAlt;
import BpmnToUseCaseIntegration.SequenceFlowToStep;
import BpmnToUseCaseIntegration.SequenceFlowToUCFlow;
import BpmnToUseCaseIntegration.StartEventToBasicFlow;

import TGGLanguage.csp.*;

import TGGLanguage.modelgenerator.RuleEntryContainer;
import TGGLanguage.modelgenerator.RuleEntryList;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.ModelgeneratorRuleResult;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.Step;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import bpmn2.Bpmn2Factory;
import bpmn2.Definitions;
import bpmn2.DocumentRoot;
import bpmn2.EndEvent;
import bpmn2.Event;
import bpmn2.EventBasedGateway;
import bpmn2.ExclusiveGateway;
import bpmn2.FlowElementsContainer;
import bpmn2.FlowNode;
import bpmn2.IntermediateCatchEvent;
import bpmn2.IntermediateThrowEvent;
import bpmn2.Lane;
import bpmn2.LaneSet;
import bpmn2.ParallelGateway;
import bpmn2.SequenceFlow;
import bpmn2.ServiceTask;
import bpmn2.StartEvent;
import bpmn2.Task;
import bpmn2.UserTask;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Exc Conv Gw After Event Gw Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see BpmnToUseCaseIntegration.Rules.RulesPackage#getExcConvGwAfterEventGwRule()
 * @model
 * @generated
 */
public interface ExcConvGwAfterEventGwRule extends AbstractRule,
		ExclusiveConvergingGatewayRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __divergeFlow_targetRef_ice = null;\n      EMoflonEdge __divergeFlow_sourceRef_eventGw = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __process_flowElements_ice = null;\n      EMoflonEdge __process_flowElements_eventGw = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __eventGw_outgoing_divergeFlow = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      EMoflonEdge __ice_incoming_divergeFlow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object eventGw is really bound\n         JavaSDM.ensure ( eventGw != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object ice is really bound\n         JavaSDM.ensure ( ice != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object eventGw is really bound\n            JavaSDM.ensure ( eventGw != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object ice is really bound\n            JavaSDM.ensure ( ice != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_outFlow\n            __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_outFlow\n            __process_flowElements_outFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_exConvGateway\n            __process_flowElements_exConvGateway.setName (\"flowElements\");\n            // assign attribute __inFlow_targetRef_exConvGateway\n            __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n            // assign attribute __exConvGateway_incoming_inFlow\n            __exConvGateway_incoming_inFlow.setName (\"incoming\");\n            // assign attribute __outFlow_sourceRef_exConvGateway\n            __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n            // assign attribute __exConvGateway_outgoing_outFlow\n            __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n            // assign attribute __lane_flowNodeRefs_exConvGateway\n            __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_incoming_inFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__lane_flowNodeRefs_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__exConvGateway_outgoing_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__outFlow_sourceRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,outFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__inFlow_targetRef_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,exConvGateway,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_exConvGateway,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_outFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            __process_flowElements_outFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setSrc( process);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n            // create link\n            __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n            // create link\n            __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __process_flowElements_outFlow.setTrg( outFlow);\n\n\n            // create link\n            __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n            // create link\n            __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object divergeFlow is really bound\n            JavaSDM.ensure ( divergeFlow != null );\n            // check object eventGw is really bound\n            JavaSDM.ensure ( eventGw != null );\n            // check object exConvGateway is really bound\n            JavaSDM.ensure ( exConvGateway != null );\n            // check object ice is really bound\n            JavaSDM.ensure ( ice != null );\n            // check object inFlow is really bound\n            JavaSDM.ensure ( inFlow != null );\n            // check object lane is really bound\n            JavaSDM.ensure ( lane != null );\n            // check object laneSet is really bound\n            JavaSDM.ensure ( laneSet != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object outFlow is really bound\n            JavaSDM.ensure ( outFlow != null );\n            // check object process is really bound\n            JavaSDM.ensure ( process != null );\n            // check isomorphic binding between objects inFlow and divergeFlow \n            JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and divergeFlow \n            JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n            // check isomorphic binding between objects outFlow and inFlow \n            JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n            // create object __divergeFlow_targetRef_ice\n            __divergeFlow_targetRef_ice = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __divergeFlow_sourceRef_eventGw\n            __divergeFlow_sourceRef_eventGw = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __laneSet_lanes_lane\n            __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_laneSets_laneSet\n            __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_ice\n            __process_flowElements_ice = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_eventGw\n            __process_flowElements_eventGw = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_inFlow\n            __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __eventGw_outgoing_divergeFlow\n            __eventGw_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __ice_incoming_divergeFlow\n            __ice_incoming_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __process_flowElements_eventGw\n            __process_flowElements_eventGw.setName (\"flowElements\");\n            // assign attribute __process_flowElements_divergeFlow\n            __process_flowElements_divergeFlow.setName (\"flowElements\");\n            // assign attribute __process_flowElements_ice\n            __process_flowElements_ice.setName (\"flowElements\");\n            // assign attribute __divergeFlow_sourceRef_eventGw\n            __divergeFlow_sourceRef_eventGw.setName (\"sourceRef\");\n            // assign attribute __eventGw_outgoing_divergeFlow\n            __eventGw_outgoing_divergeFlow.setName (\"outgoing\");\n            // assign attribute __divergeFlow_targetRef_ice\n            __divergeFlow_targetRef_ice.setName (\"targetRef\");\n            // assign attribute __ice_incoming_divergeFlow\n            __ice_incoming_divergeFlow.setName (\"incoming\");\n            // assign attribute __process_laneSets_laneSet\n            __process_laneSets_laneSet.setName (\"laneSets\");\n            // assign attribute __process_flowElements_inFlow\n            __process_flowElements_inFlow.setName (\"flowElements\");\n            // assign attribute __laneSet_lanes_lane\n            __laneSet_lanes_lane.setName (\"lanes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,lane,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,eventGw,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__divergeFlow_targetRef_ice,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__divergeFlow_sourceRef_eventGw,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__laneSet_lanes_lane,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,laneSet,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,inFlow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_laneSets_laneSet,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,process,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_ice,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_eventGw,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_inFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,ice,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__eventGw_outgoing_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__process_flowElements_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__ice_incoming_divergeFlow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,divergeFlow,\"contextNodes\");\n\n            // create link\n            __process_flowElements_inFlow.setSrc( process);\n\n\n            // create link\n            __process_flowElements_eventGw.setSrc( process);\n\n\n            // create link\n            __process_laneSets_laneSet.setSrc( process);\n\n\n            // create link\n            __process_flowElements_ice.setSrc( process);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setSrc( process);\n\n\n            // create link\n            __eventGw_outgoing_divergeFlow.setSrc( eventGw);\n\n\n            // create link\n            __divergeFlow_sourceRef_eventGw.setTrg( eventGw);\n\n\n            // create link\n            __process_flowElements_eventGw.setTrg( eventGw);\n\n\n            // create link\n            __ice_incoming_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __divergeFlow_targetRef_ice.setSrc( divergeFlow);\n\n\n            // create link\n            __eventGw_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n            // create link\n            __divergeFlow_sourceRef_eventGw.setSrc( divergeFlow);\n\n\n            // create link\n            __ice_incoming_divergeFlow.setSrc( ice);\n\n\n            // create link\n            __divergeFlow_targetRef_ice.setTrg( ice);\n\n\n            // create link\n            __process_flowElements_ice.setTrg( ice);\n\n\n            // create link\n            __process_flowElements_inFlow.setTrg( inFlow);\n\n\n            // create link\n            __laneSet_lanes_lane.setTrg( lane);\n\n\n            // create link\n            __laneSet_lanes_lane.setSrc( laneSet);\n\n\n            // create link\n            __process_laneSets_laneSet.setTrg( laneSet);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, bpmn2.Process process,
			EventBasedGateway eventGw, SequenceFlow divergeFlow,
			IntermediateCatchEvent ice, SequenceFlow inFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      AlternativeFlowAlternative alt = null;\n      SequenceFlow divergeFlow = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      EventBasedGateway eventGw = null;\n      FlowNodeToStep eventGwToNormalStep = null;\n      ExclusiveGateway exConvGateway = null;\n      AlternativeFlow flow = null;\n      IntermediateCatchEvent ice = null;\n      ICEToAltFlow iceToFlow = null;\n      SequenceFlow inFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      Flow initFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      NormalStep normalStep = null;\n      SequenceFlow outFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge outFlowToNormalStep__source__outFlow = null;\n      EMoflonEdge ecgwToStep__target__normalStep = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge outFlowToInitFlow__source__outFlow = null;\n      EMoflonEdge ecgwToStep__source__exConvGateway = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge outFlowToInitFlow__target__initFlow = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge outFlowToNormalStep__target__normalStep = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"divergeFlowToAlt\"));\n\n         // ensure correct type and really bound of object divergeFlowToAlt\n         JavaSDM.ensure ( _TmpObject instanceof SeqFlowToAltFlowAlt );\n         divergeFlowToAlt = (SeqFlowToAltFlowAlt) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"eventGw\"));\n\n         // ensure correct type and really bound of object eventGw\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventGw = (EventBasedGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"eventGwToNormalStep\"));\n\n         // ensure correct type and really bound of object eventGwToNormalStep\n         JavaSDM.ensure ( _TmpObject instanceof FlowNodeToStep );\n         eventGwToNormalStep = (FlowNodeToStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         flow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"ice\"));\n\n         // ensure correct type and really bound of object ice\n         JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n         ice = (IntermediateCatchEvent) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"iceToFlow\"));\n\n         // ensure correct type and really bound of object iceToFlow\n         JavaSDM.ensure ( _TmpObject instanceof ICEToAltFlow );\n         iceToFlow = (ICEToAltFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"inFlowToFlow\"));\n\n         // ensure correct type and really bound of object inFlowToFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlowToUCFlow );\n         inFlowToFlow = (SequenceFlowToUCFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"initFlow\"));\n\n         // ensure correct type and really bound of object initFlow\n         JavaSDM.ensure ( _TmpObject instanceof Flow );\n         initFlow = (Flow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"normalStep\"));\n\n         // ensure correct type and really bound of object normalStep\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         normalStep = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         if (!fujaba__Success)\n         {\n            fujaba__Success = true;\n            csp = null;\n         }\n         // create object ecgwToStep\n         ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n         // create object outFlowToNormalStep\n         outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n         // create object outFlowToInitFlow\n         outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n\n         // create link\n         ecgwToStep.setTarget( normalStep);\n\n\n         // create link\n         outFlowToNormalStep.setTarget( normalStep);\n\n\n         // create link\n         ecgwToStep.setSource( exConvGateway);\n\n\n         // create link\n         outFlowToInitFlow.setSource( outFlow);\n\n\n         // create link\n         outFlowToNormalStep.setSource( outFlow);\n\n\n         // create link\n         outFlowToInitFlow.setTarget( initFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,exConvGateway,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object divergeFlow is really bound\n         JavaSDM.ensure ( divergeFlow != null );\n         // check object divergeFlowToAlt is really bound\n         JavaSDM.ensure ( divergeFlowToAlt != null );\n         // check object ecgwToStep is really bound\n         JavaSDM.ensure ( ecgwToStep != null );\n         // check object eventGw is really bound\n         JavaSDM.ensure ( eventGw != null );\n         // check object eventGwToNormalStep is really bound\n         JavaSDM.ensure ( eventGwToNormalStep != null );\n         // check object exConvGateway is really bound\n         JavaSDM.ensure ( exConvGateway != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object ice is really bound\n         JavaSDM.ensure ( ice != null );\n         // check object iceToFlow is really bound\n         JavaSDM.ensure ( iceToFlow != null );\n         // check object inFlow is really bound\n         JavaSDM.ensure ( inFlow != null );\n         // check object inFlowToFlow is really bound\n         JavaSDM.ensure ( inFlowToFlow != null );\n         // check object initFlow is really bound\n         JavaSDM.ensure ( initFlow != null );\n         // check object lane is really bound\n         JavaSDM.ensure ( lane != null );\n         // check object laneSet is really bound\n         JavaSDM.ensure ( laneSet != null );\n         // check object normalStep is really bound\n         JavaSDM.ensure ( normalStep != null );\n         // check object outFlow is really bound\n         JavaSDM.ensure ( outFlow != null );\n         // check object outFlowToInitFlow is really bound\n         JavaSDM.ensure ( outFlowToInitFlow != null );\n         // check object outFlowToNormalStep is really bound\n         JavaSDM.ensure ( outFlowToNormalStep != null );\n         // check object process is really bound\n         JavaSDM.ensure ( process != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check isomorphic binding between objects divergeFlow and alt \n         JavaSDM.ensure ( !divergeFlow.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and alt \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (alt) );\n\n         // check isomorphic binding between objects ecgwToStep and alt \n         JavaSDM.ensure ( !ecgwToStep.equals (alt) );\n\n         // check isomorphic binding between objects eventGw and alt \n         JavaSDM.ensure ( !eventGw.equals (alt) );\n\n         // check isomorphic binding between objects eventGwToNormalStep and alt \n         JavaSDM.ensure ( !eventGwToNormalStep.equals (alt) );\n\n         // check isomorphic binding between objects exConvGateway and alt \n         JavaSDM.ensure ( !exConvGateway.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects ice and alt \n         JavaSDM.ensure ( !ice.equals (alt) );\n\n         // check isomorphic binding between objects iceToFlow and alt \n         JavaSDM.ensure ( !iceToFlow.equals (alt) );\n\n         // check isomorphic binding between objects inFlow and alt \n         JavaSDM.ensure ( !inFlow.equals (alt) );\n\n         // check isomorphic binding between objects inFlowToFlow and alt \n         JavaSDM.ensure ( !inFlowToFlow.equals (alt) );\n\n         // check isomorphic binding between objects initFlow and alt \n         JavaSDM.ensure ( !initFlow.equals (alt) );\n\n         // check isomorphic binding between objects lane and alt \n         JavaSDM.ensure ( !lane.equals (alt) );\n\n         // check isomorphic binding between objects laneSet and alt \n         JavaSDM.ensure ( !laneSet.equals (alt) );\n\n         // check isomorphic binding between objects normalStep and alt \n         JavaSDM.ensure ( !normalStep.equals (alt) );\n\n         // check isomorphic binding between objects outFlow and alt \n         JavaSDM.ensure ( !outFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and alt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (alt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and alt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (alt) );\n\n         // check isomorphic binding between objects process and alt \n         JavaSDM.ensure ( !process.equals (alt) );\n\n         // check isomorphic binding between objects divergeFlowToAlt and divergeFlow \n         JavaSDM.ensure ( !divergeFlowToAlt.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlow \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects eventGw and divergeFlow \n         JavaSDM.ensure ( !eventGw.equals (divergeFlow) );\n\n         // check isomorphic binding between objects eventGwToNormalStep and divergeFlow \n         JavaSDM.ensure ( !eventGwToNormalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlow \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlow) );\n\n         // check isomorphic binding between objects flow and divergeFlow \n         JavaSDM.ensure ( !flow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ice and divergeFlow \n         JavaSDM.ensure ( !ice.equals (divergeFlow) );\n\n         // check isomorphic binding between objects iceToFlow and divergeFlow \n         JavaSDM.ensure ( !iceToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects initFlow and divergeFlow \n         JavaSDM.ensure ( !initFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects lane and divergeFlow \n         JavaSDM.ensure ( !lane.equals (divergeFlow) );\n\n         // check isomorphic binding between objects laneSet and divergeFlow \n         JavaSDM.ensure ( !laneSet.equals (divergeFlow) );\n\n         // check isomorphic binding between objects normalStep and divergeFlow \n         JavaSDM.ensure ( !normalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlow) );\n\n         // check isomorphic binding between objects process and divergeFlow \n         JavaSDM.ensure ( !process.equals (divergeFlow) );\n\n         // check isomorphic binding between objects ecgwToStep and divergeFlowToAlt \n         JavaSDM.ensure ( !ecgwToStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects eventGw and divergeFlowToAlt \n         JavaSDM.ensure ( !eventGw.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects eventGwToNormalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !eventGwToNormalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects exConvGateway and divergeFlowToAlt \n         JavaSDM.ensure ( !exConvGateway.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects flow and divergeFlowToAlt \n         JavaSDM.ensure ( !flow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects ice and divergeFlowToAlt \n         JavaSDM.ensure ( !ice.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects iceToFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !iceToFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects inFlowToFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !inFlowToFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects initFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !initFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects lane and divergeFlowToAlt \n         JavaSDM.ensure ( !lane.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects laneSet and divergeFlowToAlt \n         JavaSDM.ensure ( !laneSet.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects normalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !normalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and divergeFlowToAlt \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects process and divergeFlowToAlt \n         JavaSDM.ensure ( !process.equals (divergeFlowToAlt) );\n\n         // check isomorphic binding between objects eventGw and ecgwToStep \n         JavaSDM.ensure ( !eventGw.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects eventGwToNormalStep and ecgwToStep \n         JavaSDM.ensure ( !eventGwToNormalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects exConvGateway and ecgwToStep \n         JavaSDM.ensure ( !exConvGateway.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects flow and ecgwToStep \n         JavaSDM.ensure ( !flow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects ice and ecgwToStep \n         JavaSDM.ensure ( !ice.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects iceToFlow and ecgwToStep \n         JavaSDM.ensure ( !iceToFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlow and ecgwToStep \n         JavaSDM.ensure ( !inFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and ecgwToStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects initFlow and ecgwToStep \n         JavaSDM.ensure ( !initFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects lane and ecgwToStep \n         JavaSDM.ensure ( !lane.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects laneSet and ecgwToStep \n         JavaSDM.ensure ( !laneSet.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects normalStep and ecgwToStep \n         JavaSDM.ensure ( !normalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and ecgwToStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and ecgwToStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects process and ecgwToStep \n         JavaSDM.ensure ( !process.equals (ecgwToStep) );\n\n         // check isomorphic binding between objects eventGwToNormalStep and eventGw \n         JavaSDM.ensure ( !eventGwToNormalStep.equals (eventGw) );\n\n         // check isomorphic binding between objects exConvGateway and eventGw \n         JavaSDM.ensure ( !exConvGateway.equals (eventGw) );\n\n         // check isomorphic binding between objects flow and eventGw \n         JavaSDM.ensure ( !flow.equals (eventGw) );\n\n         // check isomorphic binding between objects ice and eventGw \n         JavaSDM.ensure ( !ice.equals (eventGw) );\n\n         // check isomorphic binding between objects iceToFlow and eventGw \n         JavaSDM.ensure ( !iceToFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects inFlow and eventGw \n         JavaSDM.ensure ( !inFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects inFlowToFlow and eventGw \n         JavaSDM.ensure ( !inFlowToFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects initFlow and eventGw \n         JavaSDM.ensure ( !initFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects lane and eventGw \n         JavaSDM.ensure ( !lane.equals (eventGw) );\n\n         // check isomorphic binding between objects laneSet and eventGw \n         JavaSDM.ensure ( !laneSet.equals (eventGw) );\n\n         // check isomorphic binding between objects normalStep and eventGw \n         JavaSDM.ensure ( !normalStep.equals (eventGw) );\n\n         // check isomorphic binding between objects outFlow and eventGw \n         JavaSDM.ensure ( !outFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and eventGw \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (eventGw) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and eventGw \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (eventGw) );\n\n         // check isomorphic binding between objects process and eventGw \n         JavaSDM.ensure ( !process.equals (eventGw) );\n\n         // check isomorphic binding between objects exConvGateway and eventGwToNormalStep \n         JavaSDM.ensure ( !exConvGateway.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects flow and eventGwToNormalStep \n         JavaSDM.ensure ( !flow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects ice and eventGwToNormalStep \n         JavaSDM.ensure ( !ice.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects iceToFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !iceToFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects inFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !inFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects inFlowToFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !inFlowToFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects initFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !initFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects lane and eventGwToNormalStep \n         JavaSDM.ensure ( !lane.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects laneSet and eventGwToNormalStep \n         JavaSDM.ensure ( !laneSet.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects normalStep and eventGwToNormalStep \n         JavaSDM.ensure ( !normalStep.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects outFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !outFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and eventGwToNormalStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and eventGwToNormalStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects process and eventGwToNormalStep \n         JavaSDM.ensure ( !process.equals (eventGwToNormalStep) );\n\n         // check isomorphic binding between objects flow and exConvGateway \n         JavaSDM.ensure ( !flow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects ice and exConvGateway \n         JavaSDM.ensure ( !ice.equals (exConvGateway) );\n\n         // check isomorphic binding between objects iceToFlow and exConvGateway \n         JavaSDM.ensure ( !iceToFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlow and exConvGateway \n         JavaSDM.ensure ( !inFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects inFlowToFlow and exConvGateway \n         JavaSDM.ensure ( !inFlowToFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects initFlow and exConvGateway \n         JavaSDM.ensure ( !initFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects lane and exConvGateway \n         JavaSDM.ensure ( !lane.equals (exConvGateway) );\n\n         // check isomorphic binding between objects laneSet and exConvGateway \n         JavaSDM.ensure ( !laneSet.equals (exConvGateway) );\n\n         // check isomorphic binding between objects normalStep and exConvGateway \n         JavaSDM.ensure ( !normalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlow and exConvGateway \n         JavaSDM.ensure ( !outFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and exConvGateway \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (exConvGateway) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and exConvGateway \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (exConvGateway) );\n\n         // check isomorphic binding between objects process and exConvGateway \n         JavaSDM.ensure ( !process.equals (exConvGateway) );\n\n         // check isomorphic binding between objects ice and flow \n         JavaSDM.ensure ( !ice.equals (flow) );\n\n         // check isomorphic binding between objects iceToFlow and flow \n         JavaSDM.ensure ( !iceToFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlow and flow \n         JavaSDM.ensure ( !inFlow.equals (flow) );\n\n         // check isomorphic binding between objects inFlowToFlow and flow \n         JavaSDM.ensure ( !inFlowToFlow.equals (flow) );\n\n         // check isomorphic binding between objects initFlow and flow \n         JavaSDM.ensure ( !initFlow.equals (flow) );\n\n         // check isomorphic binding between objects lane and flow \n         JavaSDM.ensure ( !lane.equals (flow) );\n\n         // check isomorphic binding between objects laneSet and flow \n         JavaSDM.ensure ( !laneSet.equals (flow) );\n\n         // check isomorphic binding between objects normalStep and flow \n         JavaSDM.ensure ( !normalStep.equals (flow) );\n\n         // check isomorphic binding between objects outFlow and flow \n         JavaSDM.ensure ( !outFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and flow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (flow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and flow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (flow) );\n\n         // check isomorphic binding between objects process and flow \n         JavaSDM.ensure ( !process.equals (flow) );\n\n         // check isomorphic binding between objects iceToFlow and ice \n         JavaSDM.ensure ( !iceToFlow.equals (ice) );\n\n         // check isomorphic binding between objects inFlow and ice \n         JavaSDM.ensure ( !inFlow.equals (ice) );\n\n         // check isomorphic binding between objects inFlowToFlow and ice \n         JavaSDM.ensure ( !inFlowToFlow.equals (ice) );\n\n         // check isomorphic binding between objects initFlow and ice \n         JavaSDM.ensure ( !initFlow.equals (ice) );\n\n         // check isomorphic binding between objects lane and ice \n         JavaSDM.ensure ( !lane.equals (ice) );\n\n         // check isomorphic binding between objects laneSet and ice \n         JavaSDM.ensure ( !laneSet.equals (ice) );\n\n         // check isomorphic binding between objects normalStep and ice \n         JavaSDM.ensure ( !normalStep.equals (ice) );\n\n         // check isomorphic binding between objects outFlow and ice \n         JavaSDM.ensure ( !outFlow.equals (ice) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and ice \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (ice) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and ice \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (ice) );\n\n         // check isomorphic binding between objects process and ice \n         JavaSDM.ensure ( !process.equals (ice) );\n\n         // check isomorphic binding between objects inFlow and iceToFlow \n         JavaSDM.ensure ( !inFlow.equals (iceToFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and iceToFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (iceToFlow) );\n\n         // check isomorphic binding between objects initFlow and iceToFlow \n         JavaSDM.ensure ( !initFlow.equals (iceToFlow) );\n\n         // check isomorphic binding between objects lane and iceToFlow \n         JavaSDM.ensure ( !lane.equals (iceToFlow) );\n\n         // check isomorphic binding between objects laneSet and iceToFlow \n         JavaSDM.ensure ( !laneSet.equals (iceToFlow) );\n\n         // check isomorphic binding between objects normalStep and iceToFlow \n         JavaSDM.ensure ( !normalStep.equals (iceToFlow) );\n\n         // check isomorphic binding between objects outFlow and iceToFlow \n         JavaSDM.ensure ( !outFlow.equals (iceToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and iceToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (iceToFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and iceToFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (iceToFlow) );\n\n         // check isomorphic binding between objects process and iceToFlow \n         JavaSDM.ensure ( !process.equals (iceToFlow) );\n\n         // check isomorphic binding between objects inFlowToFlow and inFlow \n         JavaSDM.ensure ( !inFlowToFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects lane and inFlow \n         JavaSDM.ensure ( !lane.equals (inFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlow) );\n\n         // check isomorphic binding between objects process and inFlow \n         JavaSDM.ensure ( !process.equals (inFlow) );\n\n         // check isomorphic binding between objects initFlow and inFlowToFlow \n         JavaSDM.ensure ( !initFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects lane and inFlowToFlow \n         JavaSDM.ensure ( !lane.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects laneSet and inFlowToFlow \n         JavaSDM.ensure ( !laneSet.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects normalStep and inFlowToFlow \n         JavaSDM.ensure ( !normalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and inFlowToFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects process and inFlowToFlow \n         JavaSDM.ensure ( !process.equals (inFlowToFlow) );\n\n         // check isomorphic binding between objects lane and initFlow \n         JavaSDM.ensure ( !lane.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and initFlow \n         JavaSDM.ensure ( !laneSet.equals (initFlow) );\n\n         // check isomorphic binding between objects normalStep and initFlow \n         JavaSDM.ensure ( !normalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlow and initFlow \n         JavaSDM.ensure ( !outFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and initFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (initFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and initFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (initFlow) );\n\n         // check isomorphic binding between objects process and initFlow \n         JavaSDM.ensure ( !process.equals (initFlow) );\n\n         // check isomorphic binding between objects laneSet and lane \n         JavaSDM.ensure ( !laneSet.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and lane \n         JavaSDM.ensure ( !normalStep.equals (lane) );\n\n         // check isomorphic binding between objects outFlow and lane \n         JavaSDM.ensure ( !outFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and lane \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (lane) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and lane \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (lane) );\n\n         // check isomorphic binding between objects process and lane \n         JavaSDM.ensure ( !process.equals (lane) );\n\n         // check isomorphic binding between objects normalStep and laneSet \n         JavaSDM.ensure ( !normalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and laneSet \n         JavaSDM.ensure ( !outFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and laneSet \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and laneSet \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (laneSet) );\n\n         // check isomorphic binding between objects process and laneSet \n         JavaSDM.ensure ( !process.equals (laneSet) );\n\n         // check isomorphic binding between objects outFlow and normalStep \n         JavaSDM.ensure ( !outFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and normalStep \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and normalStep \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (normalStep) );\n\n         // check isomorphic binding between objects process and normalStep \n         JavaSDM.ensure ( !process.equals (normalStep) );\n\n         // check isomorphic binding between objects outFlowToInitFlow and outFlow \n         JavaSDM.ensure ( !outFlowToInitFlow.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlow) );\n\n         // check isomorphic binding between objects process and outFlow \n         JavaSDM.ensure ( !process.equals (outFlow) );\n\n         // check isomorphic binding between objects outFlowToNormalStep and outFlowToInitFlow \n         JavaSDM.ensure ( !outFlowToNormalStep.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToInitFlow \n         JavaSDM.ensure ( !process.equals (outFlowToInitFlow) );\n\n         // check isomorphic binding between objects process and outFlowToNormalStep \n         JavaSDM.ensure ( !process.equals (outFlowToNormalStep) );\n\n         // create object outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __process_flowElements_outFlow\n         __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"ExcConvGwAfterEventGwRule\");\n         // assign attribute __process_flowElements_outFlow\n         __process_flowElements_outFlow.setName (\"flowElements\");\n         // assign attribute __process_flowElements_exConvGateway\n         __process_flowElements_exConvGateway.setName (\"flowElements\");\n         // assign attribute __inFlow_targetRef_exConvGateway\n         __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n         // assign attribute __exConvGateway_incoming_inFlow\n         __exConvGateway_incoming_inFlow.setName (\"incoming\");\n         // assign attribute __outFlow_sourceRef_exConvGateway\n         __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n         // assign attribute __exConvGateway_outgoing_outFlow\n         __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n         // assign attribute ecgwToStep__source__exConvGateway\n         ecgwToStep__source__exConvGateway.setName (\"source\");\n         // assign attribute ecgwToStep__target__normalStep\n         ecgwToStep__target__normalStep.setName (\"target\");\n         // assign attribute outFlowToInitFlow__source__outFlow\n         outFlowToInitFlow__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToInitFlow__target__initFlow\n         outFlowToInitFlow__target__initFlow.setName (\"target\");\n         // assign attribute outFlowToNormalStep__source__outFlow\n         outFlowToNormalStep__source__outFlow.setName (\"source\");\n         // assign attribute outFlowToNormalStep__target__normalStep\n         outFlowToNormalStep__target__normalStep.setName (\"target\");\n         // assign attribute __lane_flowNodeRefs_exConvGateway\n         __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_incoming_inFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__source__outFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,ecgwToStep__source__exConvGateway,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__inFlow_targetRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToInitFlow__target__initFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__outFlow_sourceRef_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__lane_flowNodeRefs_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,outFlowToNormalStep__target__normalStep,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_exConvGateway,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__process_flowElements_outFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__exConvGateway_outgoing_outFlow,\"translatedEdges\");\n\n         // create link\n         __process_flowElements_outFlow.setSrc( process);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setSrc( process);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setTrg( normalStep);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n         // create link\n         __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n         // create link\n         __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n         // create link\n         __process_flowElements_outFlow.setTrg( outFlow);\n\n\n         // create link\n         __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setTrg( outFlow);\n\n\n         // create link\n         __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n         // create link\n         ecgwToStep__target__normalStep.setSrc( ecgwToStep);\n\n\n         // create link\n         ecgwToStep__source__exConvGateway.setSrc( ecgwToStep);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setTrg( initFlow);\n\n\n         // create link\n         outFlowToInitFlow__source__outFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToInitFlow__target__initFlow.setSrc( outFlowToInitFlow);\n\n\n         // create link\n         outFlowToNormalStep__target__normalStep.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         outFlowToNormalStep__source__outFlow.setSrc( outFlowToNormalStep);\n\n\n         // create link\n         __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,process,eventGw,divergeFlow,ice,normalStep,eventGwToNormalStep,alt,divergeFlowToAlt,flow,iceToFlow,inFlow,exConvGateway,outFlow,inFlowToFlow,ecgwToStep,initFlow,outFlowToInitFlow,outFlowToNormalStep,lane,laneSet);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      SequenceFlow divergeFlow = null;\n      EventBasedGateway eventGw = null;\n      ExclusiveGateway exConvGateway = null;\n      IntermediateCatchEvent ice = null;\n      SequenceFlow inFlow = null;\n      Lane lane = null;\n      LaneSet laneSet = null;\n      SequenceFlow outFlow = null;\n      bpmn2.Process process = null;\n      EMoflonEdge __process_flowElements_inFlow = null;\n      EMoflonEdge __process_flowElements_ice = null;\n      EMoflonEdge __process_flowElements_eventGw = null;\n      EMoflonEdge __process_laneSets_laneSet = null;\n      EMoflonEdge __process_flowElements_divergeFlow = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __process_flowElements_outFlow = null;\n      EMoflonEdge __process_flowElements_exConvGateway = null;\n      EMoflonEdge __eventGw_outgoing_divergeFlow = null;\n      EMoflonEdge __divergeFlow_sourceRef_eventGw = null;\n      EMoflonEdge __eventGwToNormalStep_source_eventGw = null;\n      EMoflonEdge __divergeFlow_targetRef_ice = null;\n      EMoflonEdge __divergeFlowToAlt_source_divergeFlow = null;\n      EMoflonEdge __ice_incoming_divergeFlow = null;\n      EMoflonEdge __iceToFlow_source_ice = null;\n      EMoflonEdge __initFlow_steps_normalStep = null;\n      EMoflonEdge __eventGwToNormalStep_target_normalStep = null;\n      EMoflonEdge __divergeFlowToAlt_target_alt = null;\n      EMoflonEdge __inFlowToFlow_target_flow = null;\n      EMoflonEdge __iceToFlow_target_flow = null;\n      EMoflonEdge __exConvGateway_incoming_inFlow = null;\n      EMoflonEdge __inFlowToFlow_source_inFlow = null;\n      EMoflonEdge __inFlow_targetRef_exConvGateway = null;\n      EMoflonEdge __outFlow_sourceRef_exConvGateway = null;\n      EMoflonEdge __lane_flowNodeRefs_exConvGateway = null;\n      EMoflonEdge __exConvGateway_outgoing_outFlow = null;\n      EMoflonEdge __laneSet_lanes_lane = null;\n      CSP csp = null;\n      Flow initFlow = null;\n      AlternativeFlow flow = null;\n      Iterator fujaba__IterIceToIceToFlow = null;\n      ICEToAltFlow iceToFlow = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterEventGwToEventGwToNormalStep = null;\n      FlowNodeToStep eventGwToNormalStep = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"ExcConvGwAfterEventGwRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"divergeFlow\"));\n\n         // ensure correct type and really bound of object divergeFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         divergeFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"eventGw\"));\n\n         // ensure correct type and really bound of object eventGw\n         JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n         eventGw = (EventBasedGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"exConvGateway\"));\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n         _TmpObject = (match.getObject(\"ice\"));\n\n         // ensure correct type and really bound of object ice\n         JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n         ice = (IntermediateCatchEvent) _TmpObject;\n         _TmpObject = (match.getObject(\"inFlow\"));\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"lane\"));\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n         _TmpObject = (match.getObject(\"laneSet\"));\n\n         // ensure correct type and really bound of object laneSet\n         JavaSDM.ensure ( _TmpObject instanceof LaneSet );\n         laneSet = (LaneSet) _TmpObject;\n         _TmpObject = (match.getObject(\"outFlow\"));\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"process\"));\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects inFlow and divergeFlow \n         JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and divergeFlow \n         JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n         // check isomorphic binding between objects outFlow and inFlow \n         JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n         // iterate to-many link source from divergeFlow to divergeFlowToAlt\n         fujaba__Success = false;\n\n         fujaba__IterDivergeFlowToDivergeFlowToAlt = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SeqFlowToAltFlowAlt.class,\"source\")).iterator ();\n\n         while ( fujaba__IterDivergeFlowToDivergeFlowToAlt.hasNext () )\n         {\n            try\n            {\n               divergeFlowToAlt = (SeqFlowToAltFlowAlt) fujaba__IterDivergeFlowToDivergeFlowToAlt.next ();\n\n               // check object divergeFlowToAlt is really bound\n               JavaSDM.ensure ( divergeFlowToAlt != null );\n               // bind object\n               alt = divergeFlowToAlt.getTarget ();\n\n               // check object alt is really bound\n               JavaSDM.ensure ( alt != null );\n\n               // iterate to-many link source from eventGw to eventGwToNormalStep\n               fujaba__Success = false;\n\n               fujaba__IterEventGwToEventGwToNormalStep = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(eventGw,FlowNodeToStep.class,\"source\")).iterator ();\n\n               while ( fujaba__IterEventGwToEventGwToNormalStep.hasNext () )\n               {\n                  try\n                  {\n                     eventGwToNormalStep = (FlowNodeToStep) fujaba__IterEventGwToEventGwToNormalStep.next ();\n\n                     // check object eventGwToNormalStep is really bound\n                     JavaSDM.ensure ( eventGwToNormalStep != null );\n                     // bind object\n                     _TmpObject = eventGwToNormalStep.getTarget ();\n\n                     // ensure correct type and really bound of object normalStep\n                     JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                     normalStep = (NormalStep) _TmpObject;\n\n                     // iterate to-many link source from inFlow to inFlowToFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n                     {\n                        try\n                        {\n                           inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n                           // check object inFlowToFlow is really bound\n                           JavaSDM.ensure ( inFlowToFlow != null );\n                           // iterate to-many link source from ice to iceToFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterIceToIceToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(ice,ICEToAltFlow.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterIceToIceToFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 iceToFlow = (ICEToAltFlow) fujaba__IterIceToIceToFlow.next ();\n\n                                 // check object iceToFlow is really bound\n                                 JavaSDM.ensure ( iceToFlow != null );\n                                 // bind object\n                                 flow = iceToFlow.getTarget ();\n\n                                 // check object flow is really bound\n                                 JavaSDM.ensure ( flow != null );\n\n                                 // check link target from inFlowToFlow to flow\n                                 JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                 ));\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object alt is really bound\n                                    JavaSDM.ensure ( alt != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object divergeFlowToAlt is really bound\n                                    JavaSDM.ensure ( divergeFlowToAlt != null );\n                                    // check object eventGw is really bound\n                                    JavaSDM.ensure ( eventGw != null );\n                                    // check object eventGwToNormalStep is really bound\n                                    JavaSDM.ensure ( eventGwToNormalStep != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object ice is really bound\n                                    JavaSDM.ensure ( ice != null );\n                                    // check object iceToFlow is really bound\n                                    JavaSDM.ensure ( iceToFlow != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object inFlowToFlow is really bound\n                                    JavaSDM.ensure ( inFlowToFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object normalStep is really bound\n                                    JavaSDM.ensure ( normalStep != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from eventGw to process\n                                    JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from ice to process\n                                    JavaSDM.ensure (process.equals (ice.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to ice\n                                    JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                    ));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to eventGw\n                                    JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link source from divergeFlowToAlt to divergeFlow\n                                    JavaSDM.ensure (divergeFlow.equals (divergeFlowToAlt.getSource ()\n                                    ));\n\n                                    // check link source from eventGwToNormalStep to eventGw\n                                    JavaSDM.ensure (eventGw.equals (eventGwToNormalStep.getSource ()\n                                    ));\n\n                                    // check link source from iceToFlow to ice\n                                    JavaSDM.ensure (ice.equals (iceToFlow.getSource ()\n                                    ));\n\n                                    // check link source from inFlowToFlow to inFlow\n                                    JavaSDM.ensure (inFlow.equals (inFlowToFlow.getSource ()\n                                    ));\n\n                                    // bind object\n                                    initFlow = normalStep.eContainer() instanceof Flow ? (Flow) normalStep.eContainer() : null;\n\n                                    // check object initFlow is really bound\n                                    JavaSDM.ensure ( initFlow != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(initFlow.getSteps().contains(normalStep));\n\n                                    // check isomorphic binding between objects initFlow and flow \n                                    JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                    // check link target from divergeFlowToAlt to alt\n                                    JavaSDM.ensure (alt.equals (divergeFlowToAlt.getTarget ()\n                                    ));\n\n                                    // check link target from eventGwToNormalStep to normalStep\n                                    JavaSDM.ensure (normalStep.equals (eventGwToNormalStep.getTarget ()\n                                    ));\n\n                                    // check link target from iceToFlow to flow\n                                    JavaSDM.ensure (flow.equals (iceToFlow.getTarget ()\n                                    ));\n\n                                    // check link target from inFlowToFlow to flow\n                                    JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object __process_flowElements_inFlow\n                                    __process_flowElements_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_ice\n                                    __process_flowElements_ice = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_eventGw\n                                    __process_flowElements_eventGw = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_laneSets_laneSet\n                                    __process_laneSets_laneSet = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_divergeFlow\n                                    __process_flowElements_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __process_flowElements_outFlow\n                                    __process_flowElements_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __process_flowElements_exConvGateway\n                                    __process_flowElements_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __eventGw_outgoing_divergeFlow\n                                    __eventGw_outgoing_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlow_sourceRef_eventGw\n                                    __divergeFlow_sourceRef_eventGw = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __eventGwToNormalStep_source_eventGw\n                                    __eventGwToNormalStep_source_eventGw = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlow_targetRef_ice\n                                    __divergeFlow_targetRef_ice = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlowToAlt_source_divergeFlow\n                                    __divergeFlowToAlt_source_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __ice_incoming_divergeFlow\n                                    __ice_incoming_divergeFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __iceToFlow_source_ice\n                                    __iceToFlow_source_ice = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __initFlow_steps_normalStep\n                                    __initFlow_steps_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __eventGwToNormalStep_target_normalStep\n                                    __eventGwToNormalStep_target_normalStep = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __divergeFlowToAlt_target_alt\n                                    __divergeFlowToAlt_target_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToFlow_target_flow\n                                    __inFlowToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __iceToFlow_target_flow\n                                    __iceToFlow_target_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __exConvGateway_incoming_inFlow\n                                    __exConvGateway_incoming_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlowToFlow_source_inFlow\n                                    __inFlowToFlow_source_inFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __inFlow_targetRef_exConvGateway\n                                    __inFlow_targetRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __outFlow_sourceRef_exConvGateway\n                                    __outFlow_sourceRef_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __lane_flowNodeRefs_exConvGateway\n                                    __lane_flowNodeRefs_exConvGateway = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __exConvGateway_outgoing_outFlow\n                                    __exConvGateway_outgoing_outFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __laneSet_lanes_lane\n                                    __laneSet_lanes_lane = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __process_flowElements_eventGw\n                                    __process_flowElements_eventGw.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_divergeFlow\n                                    __process_flowElements_divergeFlow.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_ice\n                                    __process_flowElements_ice.setName (\"flowElements\");\n                                    // assign attribute __divergeFlow_sourceRef_eventGw\n                                    __divergeFlow_sourceRef_eventGw.setName (\"sourceRef\");\n                                    // assign attribute __eventGw_outgoing_divergeFlow\n                                    __eventGw_outgoing_divergeFlow.setName (\"outgoing\");\n                                    // assign attribute __divergeFlow_targetRef_ice\n                                    __divergeFlow_targetRef_ice.setName (\"targetRef\");\n                                    // assign attribute __ice_incoming_divergeFlow\n                                    __ice_incoming_divergeFlow.setName (\"incoming\");\n                                    // assign attribute __eventGwToNormalStep_source_eventGw\n                                    __eventGwToNormalStep_source_eventGw.setName (\"source\");\n                                    // assign attribute __eventGwToNormalStep_target_normalStep\n                                    __eventGwToNormalStep_target_normalStep.setName (\"target\");\n                                    // assign attribute __divergeFlowToAlt_source_divergeFlow\n                                    __divergeFlowToAlt_source_divergeFlow.setName (\"source\");\n                                    // assign attribute __divergeFlowToAlt_target_alt\n                                    __divergeFlowToAlt_target_alt.setName (\"target\");\n                                    // assign attribute __iceToFlow_source_ice\n                                    __iceToFlow_source_ice.setName (\"source\");\n                                    // assign attribute __iceToFlow_target_flow\n                                    __iceToFlow_target_flow.setName (\"target\");\n                                    // assign attribute __process_flowElements_outFlow\n                                    __process_flowElements_outFlow.setName (\"flowElements\");\n                                    // assign attribute __process_laneSets_laneSet\n                                    __process_laneSets_laneSet.setName (\"laneSets\");\n                                    // assign attribute __process_flowElements_inFlow\n                                    __process_flowElements_inFlow.setName (\"flowElements\");\n                                    // assign attribute __process_flowElements_exConvGateway\n                                    __process_flowElements_exConvGateway.setName (\"flowElements\");\n                                    // assign attribute __inFlow_targetRef_exConvGateway\n                                    __inFlow_targetRef_exConvGateway.setName (\"targetRef\");\n                                    // assign attribute __exConvGateway_incoming_inFlow\n                                    __exConvGateway_incoming_inFlow.setName (\"incoming\");\n                                    // assign attribute __outFlow_sourceRef_exConvGateway\n                                    __outFlow_sourceRef_exConvGateway.setName (\"sourceRef\");\n                                    // assign attribute __exConvGateway_outgoing_outFlow\n                                    __exConvGateway_outgoing_outFlow.setName (\"outgoing\");\n                                    // assign attribute __inFlowToFlow_source_inFlow\n                                    __inFlowToFlow_source_inFlow.setName (\"source\");\n                                    // assign attribute __inFlowToFlow_target_flow\n                                    __inFlowToFlow_target_flow.setName (\"target\");\n                                    // assign attribute __initFlow_steps_normalStep\n                                    __initFlow_steps_normalStep.setName (\"steps\");\n                                    // assign attribute __lane_flowNodeRefs_exConvGateway\n                                    __lane_flowNodeRefs_exConvGateway.setName (\"flowNodeRefs\");\n                                    // assign attribute __laneSet_lanes_lane\n                                    __laneSet_lanes_lane.setName (\"lanes\");\n\n                                    // create link\n                                    __process_flowElements_inFlow.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_ice.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_eventGw.setSrc( process);\n\n\n                                    // create link\n                                    __process_laneSets_laneSet.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_divergeFlow.setSrc( process);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(process);\n\n\n                                    // create link\n                                    __process_flowElements_outFlow.setSrc( process);\n\n\n                                    // create link\n                                    __process_flowElements_exConvGateway.setSrc( process);\n\n\n                                    // create link\n                                    __eventGw_outgoing_divergeFlow.setSrc( eventGw);\n\n\n                                    // create link\n                                    __divergeFlow_sourceRef_eventGw.setTrg( eventGw);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(eventGw);\n\n\n                                    // create link\n                                    __process_flowElements_eventGw.setTrg( eventGw);\n\n\n                                    // create link\n                                    __eventGwToNormalStep_source_eventGw.setTrg( eventGw);\n\n\n                                    // create link\n                                    __divergeFlow_targetRef_ice.setSrc( divergeFlow);\n\n\n                                    // create link\n                                    __process_flowElements_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    __divergeFlowToAlt_source_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    __ice_incoming_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(divergeFlow);\n\n\n                                    // create link\n                                    __eventGw_outgoing_divergeFlow.setTrg( divergeFlow);\n\n\n                                    // create link\n                                    __divergeFlow_sourceRef_eventGw.setSrc( divergeFlow);\n\n\n                                    // create link\n                                    __process_flowElements_ice.setTrg( ice);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(ice);\n\n\n                                    // create link\n                                    __iceToFlow_source_ice.setTrg( ice);\n\n\n                                    // create link\n                                    __ice_incoming_divergeFlow.setSrc( ice);\n\n\n                                    // create link\n                                    __divergeFlow_targetRef_ice.setTrg( ice);\n\n\n                                    // create link\n                                    __initFlow_steps_normalStep.setTrg( normalStep);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(normalStep);\n\n\n                                    // create link\n                                    __eventGwToNormalStep_target_normalStep.setTrg( normalStep);\n\n\n                                    // create link\n                                    __eventGwToNormalStep_source_eventGw.setSrc( eventGwToNormalStep);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(eventGwToNormalStep);\n\n\n                                    // create link\n                                    __eventGwToNormalStep_target_normalStep.setSrc( eventGwToNormalStep);\n\n\n                                    // create link\n                                    __divergeFlowToAlt_target_alt.setTrg( alt);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(alt);\n\n\n                                    // create link\n                                    __divergeFlowToAlt_source_divergeFlow.setSrc( divergeFlowToAlt);\n\n\n                                    // create link\n                                    __divergeFlowToAlt_target_alt.setSrc( divergeFlowToAlt);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(divergeFlowToAlt);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    __inFlowToFlow_target_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __iceToFlow_target_flow.setTrg( flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(iceToFlow);\n\n\n                                    // create link\n                                    __iceToFlow_target_flow.setSrc( iceToFlow);\n\n\n                                    // create link\n                                    __iceToFlow_source_ice.setSrc( iceToFlow);\n\n\n                                    // create link\n                                    __exConvGateway_incoming_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(inFlow);\n\n\n                                    // create link\n                                    __inFlowToFlow_source_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    __inFlow_targetRef_exConvGateway.setSrc( inFlow);\n\n\n                                    // create link\n                                    __process_flowElements_inFlow.setTrg( inFlow);\n\n\n                                    // create link\n                                    __outFlow_sourceRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                    // create link\n                                    __process_flowElements_exConvGateway.setTrg( exConvGateway);\n\n\n                                    // create link\n                                    __lane_flowNodeRefs_exConvGateway.setTrg( exConvGateway);\n\n\n                                    // create link\n                                    __exConvGateway_outgoing_outFlow.setSrc( exConvGateway);\n\n\n                                    // create link\n                                    __inFlow_targetRef_exConvGateway.setTrg( exConvGateway);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(exConvGateway);\n\n\n                                    // create link\n                                    __exConvGateway_incoming_inFlow.setSrc( exConvGateway);\n\n\n                                    // create link\n                                    __process_flowElements_outFlow.setTrg( outFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(outFlow);\n\n\n                                    // create link\n                                    __outFlow_sourceRef_exConvGateway.setSrc( outFlow);\n\n\n                                    // create link\n                                    __exConvGateway_outgoing_outFlow.setTrg( outFlow);\n\n\n                                    // create link\n                                    __inFlowToFlow_target_flow.setSrc( inFlowToFlow);\n\n\n                                    // create link\n                                    __inFlowToFlow_source_inFlow.setSrc( inFlowToFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(inFlowToFlow);\n\n\n                                    // create link\n                                    __initFlow_steps_normalStep.setSrc( initFlow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(initFlow);\n\n\n                                    // create link\n                                    __laneSet_lanes_lane.setTrg( lane);\n\n\n                                    // create link\n                                    __lane_flowNodeRefs_exConvGateway.setSrc( lane);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(lane);\n\n\n                                    // create link\n                                    __process_laneSets_laneSet.setTrg( laneSet);\n\n\n                                    // create link\n                                    __laneSet_lanes_lane.setSrc( laneSet);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(laneSet);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_source_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__eventGwToNormalStep_source_eventGw,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_laneSets_laneSet,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__laneSet_lanes_lane,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__lane_flowNodeRefs_exConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_eventGw,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlow_targetRef_exConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlowToAlt_target_alt,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_ice,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_source_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_exConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_outgoing_outFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__eventGwToNormalStep_target_normalStep,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__eventGw_outgoing_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__inFlowToFlow_target_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__ice_incoming_divergeFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__outFlow_sourceRef_exConvGateway,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__iceToFlow_source_ice,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlow_sourceRef_eventGw,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__exConvGateway_incoming_inFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__divergeFlow_targetRef_ice,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__iceToFlow_target_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__initFlow_steps_normalStep,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__process_flowElements_outFlow,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,process,eventGw,divergeFlow,ice,normalStep,eventGwToNormalStep,alt,divergeFlowToAlt,flow,iceToFlow,inFlow,exConvGateway,outFlow,inFlowToFlow,initFlow,lane,laneSet));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"ExcConvGwAfterEventGwRule\");\n\n                                          // create link\n                                          isApplicableMatch.setIsApplicableRuleResult( ruleresult);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"process\", process);\nmatch.registerObject(\"eventGw\", eventGw);\nmatch.registerObject(\"divergeFlow\", divergeFlow);\nmatch.registerObject(\"ice\", ice);\nmatch.registerObject(\"inFlow\", inFlow);\nmatch.registerObject(\"exConvGateway\", exConvGateway);\nmatch.registerObject(\"outFlow\", outFlow);\nmatch.registerObject(\"lane\", lane);\nmatch.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, bpmn2.Process process,
			EventBasedGateway eventGw, SequenceFlow divergeFlow,
			IntermediateCatchEvent ice, SequenceFlow inFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Converging\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", true, csp);\r\nvar_exConvGateway_gatewayDirection.setValue(exConvGateway.getGatewayDirection());\r\nvar_exConvGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exConvGateway_gatewayDirection,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, bpmn2.Process process,
			EventBasedGateway eventGw, SequenceFlow divergeFlow,
			IntermediateCatchEvent ice, SequenceFlow inFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"eventGw\",eventGw);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"ice\",ice);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"eventGwToNormalStep\",eventGwToNormalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"iceToFlow\",iceToFlow);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"exConvGateway\",exConvGateway);\r\nisApplicableMatch.registerObject(\"outFlow\",outFlow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, EventBasedGateway eventGw,
			SequenceFlow divergeFlow, IntermediateCatchEvent ice,
			NormalStep normalStep, FlowNodeToStep eventGwToNormalStep,
			AlternativeFlowAlternative alt,
			SeqFlowToAltFlowAlt divergeFlowToAlt, AlternativeFlow flow,
			ICEToAltFlow iceToFlow, SequenceFlow inFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow,
			SequenceFlowToUCFlow inFlowToFlow, Flow initFlow, Lane lane,
			LaneSet laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"process\", process);\nruleresult.registerObject(\"eventGw\", eventGw);\nruleresult.registerObject(\"divergeFlow\", divergeFlow);\nruleresult.registerObject(\"ice\", ice);\nruleresult.registerObject(\"normalStep\", normalStep);\nruleresult.registerObject(\"eventGwToNormalStep\", eventGwToNormalStep);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"divergeFlowToAlt\", divergeFlowToAlt);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"iceToFlow\", iceToFlow);\nruleresult.registerObject(\"inFlow\", inFlow);\nruleresult.registerObject(\"exConvGateway\", exConvGateway);\nruleresult.registerObject(\"outFlow\", outFlow);\nruleresult.registerObject(\"inFlowToFlow\", inFlowToFlow);\nruleresult.registerObject(\"ecgwToStep\", ecgwToStep);\nruleresult.registerObject(\"initFlow\", initFlow);\nruleresult.registerObject(\"outFlowToInitFlow\", outFlowToInitFlow);\nruleresult.registerObject(\"outFlowToNormalStep\", outFlowToNormalStep);\nruleresult.registerObject(\"lane\", lane);\nruleresult.registerObject(\"laneSet\", laneSet);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject process,
			EObject eventGw, EObject divergeFlow, EObject ice,
			EObject normalStep, EObject eventGwToNormalStep, EObject alt,
			EObject divergeFlowToAlt, EObject flow, EObject iceToFlow,
			EObject inFlow, EObject exConvGateway, EObject outFlow,
			EObject inFlowToFlow, EObject ecgwToStep, EObject initFlow,
			EObject outFlowToInitFlow, EObject outFlowToNormalStep,
			EObject lane, EObject laneSet);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"exConvGateway\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getExclusiveGateway()) && match.getObject(\"outFlow\").eClass().equals(bpmn2.Bpmn2Package.eINSTANCE.getSequenceFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_690215 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_861985 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_138537 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_63069 = null;\n      ExclusiveGateway __DEC_outFlow_default_63069 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_416629 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_416629 = null;\n      Match match = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToEventGw = null;\n      EventBasedGateway eventGw = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToIce = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToExConvGateway = null;\n      ExclusiveGateway exConvGateway = null;\n      bpmn2.Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // iterate to-many link flowElements from process to exConvGateway\n         fujaba__Success = false;\n\n         fujaba__IterProcessToExConvGateway = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToExConvGateway.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToExConvGateway.next ();\n\n               // ensure correct type and really bound of object exConvGateway\n               JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n               exConvGateway = (ExclusiveGateway) _TmpObject;\n               // iterate to-many link flowElements from process to ice\n               fujaba__Success = false;\n\n               fujaba__IterProcessToIce = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToIce.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToIce.next ();\n\n                     // ensure correct type and really bound of object ice\n                     JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                     ice = (IntermediateCatchEvent) _TmpObject;\n                     // bind object\n                     _TmpObject = _edge_flowElements.getTrg ();\n\n                     // ensure correct type and really bound of object outFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     outFlow = (SequenceFlow) _TmpObject;\n\n                     // check link flowElements from outFlow to process\n                     JavaSDM.ensure (process.equals (outFlow.eContainer()\n                     ));\n\n                     // check link outgoing from outFlow to exConvGateway\n                     JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link flowElements from process to divergeFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                           // ensure correct type and really bound of object divergeFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           divergeFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects outFlow and divergeFlow \n                           JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                           // check link incoming from divergeFlow to ice\n                           JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to eventGw\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToEventGw = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToEventGw.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToEventGw.next ();\n\n                                 // ensure correct type and really bound of object eventGw\n                                 JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                                 eventGw = (EventBasedGateway) _TmpObject;\n                                 // check link outgoing from divergeFlow to eventGw\n                                 JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                 ));\n\n                                 // iterate to-many link flowElements from process to inFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                                 while ( fujaba__IterProcessToInFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                                       // ensure correct type and really bound of object inFlow\n                                       JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                       inFlow = (SequenceFlow) _TmpObject;\n                                       // check isomorphic binding between objects inFlow and divergeFlow \n                                       JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link incoming from inFlow to exConvGateway\n                                       JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                       ));\n\n                                       // iterate to-many link flowNodeRefs from exConvGateway to lane\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                                       while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                                             // check object lane is really bound\n                                             JavaSDM.ensure ( lane != null );\n                                             // iterate to-many link laneSets from process to laneSet\n                                             fujaba__Success = false;\n\n                                             fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                             while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                                   // check object laneSet is really bound\n                                                   JavaSDM.ensure ( laneSet != null );\n                                                   // check link lanes from lane to laneSet\n                                                   JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_default_690215 = exConvGateway.getDefault ();\n\n                                                         // check object __DEC_exConvGateway_default_690215 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_default_690215 != null );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_690215 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_690215.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_690215 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_690215.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_690215 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_690215.equals (outFlow) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_flowElements_861985 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                         // check object __DEC_exConvGateway_flowElements_861985 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_flowElements_861985 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_exConvGateway_flowElements_861985.getFlowElements().contains(exConvGateway));\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_flowElements_861985 and process \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_861985.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_outFlow_flowElements_138537 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                         // check object __DEC_outFlow_flowElements_138537 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_flowElements_138537 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_outFlow_flowElements_138537.getFlowElements().contains(outFlow));\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_flowElements_138537 and process \n                                                         JavaSDM.ensure ( !__DEC_outFlow_flowElements_138537.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link default from outFlow to __DEC_outFlow_default_63069\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterOutFlowTo__DEC_outFlow_default_63069 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_63069.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_outFlow_default_63069 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_63069.next ();\n\n                                                               // check object __DEC_outFlow_default_63069 is really bound\n                                                               JavaSDM.ensure ( __DEC_outFlow_default_63069 != null );\n                                                               // check isomorphic binding between objects __DEC_outFlow_default_63069 and exConvGateway \n                                                               JavaSDM.ensure ( !__DEC_outFlow_default_63069.equals (exConvGateway) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_416629\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_416629 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_416629.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_exConvGateway_targetRef_416629 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_416629.next ();\n\n                                                               // check object __DEC_exConvGateway_targetRef_416629 is really bound\n                                                               JavaSDM.ensure ( __DEC_exConvGateway_targetRef_416629 != null );\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_416629 and divergeFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_416629.equals (divergeFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_416629 and inFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_416629.equals (inFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_416629 and outFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_416629.equals (outFlow) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check object _edge_flowElements is really bound\n                                                      JavaSDM.ensure ( _edge_flowElements != null );\n                                                      // check object divergeFlow is really bound\n                                                      JavaSDM.ensure ( divergeFlow != null );\n                                                      // check object eventGw is really bound\n                                                      JavaSDM.ensure ( eventGw != null );\n                                                      // check object exConvGateway is really bound\n                                                      JavaSDM.ensure ( exConvGateway != null );\n                                                      // check object ice is really bound\n                                                      JavaSDM.ensure ( ice != null );\n                                                      // check object inFlow is really bound\n                                                      JavaSDM.ensure ( inFlow != null );\n                                                      // check object lane is really bound\n                                                      JavaSDM.ensure ( lane != null );\n                                                      // check object laneSet is really bound\n                                                      JavaSDM.ensure ( laneSet != null );\n                                                      // check object outFlow is really bound\n                                                      JavaSDM.ensure ( outFlow != null );\n                                                      // check object process is really bound\n                                                      JavaSDM.ensure ( process != null );\n                                                      // check isomorphic binding between objects inFlow and divergeFlow \n                                                      JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and divergeFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and inFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                      // check link default from exConvGateway to divergeFlow\n                                                      JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to inFlow\n                                                      JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to outFlow\n                                                      JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link flowElements from divergeFlow to process\n                                                      JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from eventGw to process\n                                                      JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from exConvGateway to process\n                                                      JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from ice to process\n                                                      JavaSDM.ensure (process.equals (ice.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from inFlow to process\n                                                      JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from outFlow to process\n                                                      JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                      ));\n\n                                                      // check link incoming from inFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to ice\n                                                      JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link incoming from outFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link laneSets from laneSet to process\n                                                      JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                      ));\n\n                                                      // check link lanes from lane to laneSet\n                                                      JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                      ));\n\n                                                      // check link outgoing from divergeFlow to eventGw\n                                                      JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link outgoing from outFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link src from _edge_flowElements to process\n                                                      JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_flowElements to outFlow\n                                                      JavaSDM.ensure (outFlow.equals (_edge_flowElements.getTrg ()\n                                                      ));\n\n                                                      // check link flowNodeRefs from lane to exConvGateway\n                                                      JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'\'\n                                                         fujaba__Success = this.checkTypes_FWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_94(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_995767 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_707578 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_829429 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_616883 = null;\n      ExclusiveGateway __DEC_outFlow_default_616883 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_770839 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_770839 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToIce = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToEventGw = null;\n      EventBasedGateway eventGw = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      ExclusiveGateway exConvGateway = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      bpmn2.Process process = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowElements is really bound\n         JavaSDM.ensure ( _edge_flowElements != null );\n         // bind object\n         _TmpObject = _edge_flowElements.getSrc ();\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // iterate to-many link laneSets from process to laneSet\n         fujaba__Success = false;\n\n         fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n         while ( fujaba__IterProcessToLaneSet.hasNext () )\n         {\n            try\n            {\n               laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n               // check object laneSet is really bound\n               JavaSDM.ensure ( laneSet != null );\n               // bind object\n               _TmpObject = _edge_flowElements.getTrg ();\n\n               // ensure correct type and really bound of object exConvGateway\n               JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n               exConvGateway = (ExclusiveGateway) _TmpObject;\n\n               // check link flowElements from exConvGateway to process\n               JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // iterate to-many link flowElements from process to eventGw\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToEventGw = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToEventGw.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToEventGw.next ();\n\n                           // ensure correct type and really bound of object eventGw\n                           JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                           eventGw = (EventBasedGateway) _TmpObject;\n                           // check link outgoing from divergeFlow to eventGw\n                           JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to ice\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToIce = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToIce.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToIce.next ();\n\n                                 // ensure correct type and really bound of object ice\n                                 JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                                 ice = (IntermediateCatchEvent) _TmpObject;\n                                 // check link incoming from divergeFlow to ice\n                                 JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                 ));\n\n                                 // iterate to-many link flowElements from process to inFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                                 while ( fujaba__IterProcessToInFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                                       // ensure correct type and really bound of object inFlow\n                                       JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                       inFlow = (SequenceFlow) _TmpObject;\n                                       // check isomorphic binding between objects inFlow and divergeFlow \n                                       JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                       // check link incoming from inFlow to exConvGateway\n                                       JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                       ));\n\n                                       // iterate to-many link flowElements from process to outFlow\n                                       fujaba__Success = false;\n\n                                       fujaba__IterProcessToOutFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                                       while ( fujaba__IterProcessToOutFlow.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterProcessToOutFlow.next ();\n\n                                             // ensure correct type and really bound of object outFlow\n                                             JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                             outFlow = (SequenceFlow) _TmpObject;\n                                             // check isomorphic binding between objects outFlow and divergeFlow \n                                             JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects outFlow and inFlow \n                                             JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                             // check link outgoing from outFlow to exConvGateway\n                                             JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                             ));\n\n                                             // iterate to-many link flowNodeRefs from exConvGateway to lane\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n                                             while ( fujaba__IterExConvGatewayToLane.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n                                                   // check object lane is really bound\n                                                   JavaSDM.ensure ( lane != null );\n                                                   // check link lanes from lane to laneSet\n                                                   JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_default_995767 = exConvGateway.getDefault ();\n\n                                                         // check object __DEC_exConvGateway_default_995767 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_default_995767 != null );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_995767 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_995767.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_995767 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_995767.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_995767 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_995767.equals (outFlow) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_flowElements_707578 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                         // check object __DEC_exConvGateway_flowElements_707578 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_flowElements_707578 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_exConvGateway_flowElements_707578.getFlowElements().contains(exConvGateway));\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_flowElements_707578 and process \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_707578.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_outFlow_flowElements_829429 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                         // check object __DEC_outFlow_flowElements_829429 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_flowElements_829429 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_outFlow_flowElements_829429.getFlowElements().contains(outFlow));\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_flowElements_829429 and process \n                                                         JavaSDM.ensure ( !__DEC_outFlow_flowElements_829429.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link default from outFlow to __DEC_outFlow_default_616883\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterOutFlowTo__DEC_outFlow_default_616883 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_616883.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_outFlow_default_616883 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_616883.next ();\n\n                                                               // check object __DEC_outFlow_default_616883 is really bound\n                                                               JavaSDM.ensure ( __DEC_outFlow_default_616883 != null );\n                                                               // check isomorphic binding between objects __DEC_outFlow_default_616883 and exConvGateway \n                                                               JavaSDM.ensure ( !__DEC_outFlow_default_616883.equals (exConvGateway) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_770839\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_770839 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_770839.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_exConvGateway_targetRef_770839 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_770839.next ();\n\n                                                               // check object __DEC_exConvGateway_targetRef_770839 is really bound\n                                                               JavaSDM.ensure ( __DEC_exConvGateway_targetRef_770839 != null );\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_770839 and divergeFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_770839.equals (divergeFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_770839 and inFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_770839.equals (inFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_770839 and outFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_770839.equals (outFlow) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check object _edge_flowElements is really bound\n                                                      JavaSDM.ensure ( _edge_flowElements != null );\n                                                      // check object divergeFlow is really bound\n                                                      JavaSDM.ensure ( divergeFlow != null );\n                                                      // check object eventGw is really bound\n                                                      JavaSDM.ensure ( eventGw != null );\n                                                      // check object exConvGateway is really bound\n                                                      JavaSDM.ensure ( exConvGateway != null );\n                                                      // check object ice is really bound\n                                                      JavaSDM.ensure ( ice != null );\n                                                      // check object inFlow is really bound\n                                                      JavaSDM.ensure ( inFlow != null );\n                                                      // check object lane is really bound\n                                                      JavaSDM.ensure ( lane != null );\n                                                      // check object laneSet is really bound\n                                                      JavaSDM.ensure ( laneSet != null );\n                                                      // check object outFlow is really bound\n                                                      JavaSDM.ensure ( outFlow != null );\n                                                      // check object process is really bound\n                                                      JavaSDM.ensure ( process != null );\n                                                      // check isomorphic binding between objects inFlow and divergeFlow \n                                                      JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and divergeFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and inFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                      // check link default from exConvGateway to divergeFlow\n                                                      JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to inFlow\n                                                      JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to outFlow\n                                                      JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link flowElements from divergeFlow to process\n                                                      JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from eventGw to process\n                                                      JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from exConvGateway to process\n                                                      JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from ice to process\n                                                      JavaSDM.ensure (process.equals (ice.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from inFlow to process\n                                                      JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from outFlow to process\n                                                      JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                      ));\n\n                                                      // check link incoming from inFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to ice\n                                                      JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link incoming from outFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link laneSets from laneSet to process\n                                                      JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                      ));\n\n                                                      // check link lanes from lane to laneSet\n                                                      JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                      ));\n\n                                                      // check link outgoing from divergeFlow to eventGw\n                                                      JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link outgoing from outFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link src from _edge_flowElements to process\n                                                      JavaSDM.ensure (process.equals (_edge_flowElements.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_flowElements to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (_edge_flowElements.getTrg ()\n                                                      ));\n\n                                                      // check link flowNodeRefs from lane to exConvGateway\n                                                      JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'\'\n                                                         fujaba__Success = this.checkTypes_FWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_95(
			EMoflonEdge _edge_flowElements);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_877199 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_273284 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_151341 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_673800 = null;\n      ExclusiveGateway __DEC_outFlow_default_673800 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_446020 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_446020 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      EventBasedGateway eventGw = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_targetRef is really bound\n         JavaSDM.ensure ( _edge_targetRef != null );\n         // bind object\n         _TmpObject = _edge_targetRef.getSrc ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_targetRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link incoming from inFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // check link flowElements from inFlow to process\n               JavaSDM.ensure (process.equals (inFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and divergeFlow \n                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                     // bind object\n                     _TmpObject = divergeFlow.getTargetRef ();\n\n                     // ensure correct type and really bound of object ice\n                     JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                     ice = (IntermediateCatchEvent) _TmpObject;\n\n                     // check link flowElements from ice to process\n                     JavaSDM.ensure (process.equals (ice.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = divergeFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object eventGw\n                     JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                     eventGw = (EventBasedGateway) _TmpObject;\n\n                     // check link flowElements from eventGw to process\n                     JavaSDM.ensure (process.equals (eventGw.eContainer()\n                     ));\n\n                     // iterate to-many link laneSets from process to laneSet\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                     while ( fujaba__IterProcessToLaneSet.hasNext () )\n                     {\n                        try\n                        {\n                           laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                           // check object laneSet is really bound\n                           JavaSDM.ensure ( laneSet != null );\n                           // check link lanes from lane to laneSet\n                           JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                           ));\n\n                           // iterate to-many link outgoing from exConvGateway to outFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                           while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                 // check object outFlow is really bound\n                                 JavaSDM.ensure ( outFlow != null );\n                                 // check isomorphic binding between objects outFlow and divergeFlow \n                                 JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                 // check isomorphic binding between objects outFlow and inFlow \n                                 JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                 // check link flowElements from outFlow to process\n                                 JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_877199 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_877199 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_877199 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_877199 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_877199.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_877199 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_877199.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_877199 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_877199.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_273284 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_273284 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_273284 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_273284.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_273284 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_273284.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_151341 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_151341 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_151341 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_151341.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_151341 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_151341.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_673800\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_673800 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_673800.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_673800 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_673800.next ();\n\n                                             // check object __DEC_outFlow_default_673800 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_673800 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_673800 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_673800.equals (exConvGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_446020\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_446020 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_446020.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_446020 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_446020.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_446020 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_446020 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_446020 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_446020.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_446020 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_446020.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_446020 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_446020.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_targetRef is really bound\n                                    JavaSDM.ensure ( _edge_targetRef != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object eventGw is really bound\n                                    JavaSDM.ensure ( eventGw != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object ice is really bound\n                                    JavaSDM.ensure ( ice != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from eventGw to process\n                                    JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from ice to process\n                                    JavaSDM.ensure (process.equals (ice.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to ice\n                                    JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to eventGw\n                                    JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_targetRef to inFlow\n                                    JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_targetRef to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_96(
			EMoflonEdge _edge_targetRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_244419 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_954435 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_187385 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_340752 = null;\n      ExclusiveGateway __DEC_outFlow_default_340752 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_277820 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_277820 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayTo_edge_targetRef = null;\n      EMoflonEdge _edge_targetRef = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToIce = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToEventGw = null;\n      EventBasedGateway eventGw = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow inFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_incoming is really bound\n         JavaSDM.ensure ( _edge_incoming != null );\n         // bind object\n         _TmpObject = _edge_incoming.getTrg ();\n\n         // ensure correct type and really bound of object inFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         inFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_incoming.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link incoming from inFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // check link flowElements from inFlow to process\n               JavaSDM.ensure (process.equals (inFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects inFlow and divergeFlow \n                     JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                     // iterate to-many link flowElements from process to eventGw\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToEventGw = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToEventGw.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToEventGw.next ();\n\n                           // ensure correct type and really bound of object eventGw\n                           JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                           eventGw = (EventBasedGateway) _TmpObject;\n                           // check link outgoing from divergeFlow to eventGw\n                           JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                           ));\n\n                           // iterate to-many link flowElements from process to ice\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToIce = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToIce.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToIce.next ();\n\n                                 // ensure correct type and really bound of object ice\n                                 JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                                 ice = (IntermediateCatchEvent) _TmpObject;\n                                 // check link incoming from divergeFlow to ice\n                                 JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                 ));\n\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // check link lanes from lane to laneSet\n                                       JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                       ));\n\n                                       // iterate to-many link outgoing from exConvGateway to outFlow\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                       while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                             // check object outFlow is really bound\n                                             JavaSDM.ensure ( outFlow != null );\n                                             // check isomorphic binding between objects outFlow and divergeFlow \n                                             JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects outFlow and inFlow \n                                             JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                             // check link flowElements from outFlow to process\n                                             JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                             ));\n\n                                             // iterate to-many link trg from exConvGateway to _edge_targetRef\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo_edge_targetRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                             while ( fujaba__IterExConvGatewayTo_edge_targetRef.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _edge_targetRef = (EMoflonEdge) fujaba__IterExConvGatewayTo_edge_targetRef.next ();\n\n                                                   // check object _edge_targetRef is really bound\n                                                   JavaSDM.ensure ( _edge_targetRef != null );\n                                                   // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                                   JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                                   // check link src from _edge_targetRef to inFlow\n                                                   JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_default_244419 = exConvGateway.getDefault ();\n\n                                                         // check object __DEC_exConvGateway_default_244419 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_default_244419 != null );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_244419 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_244419.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_244419 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_244419.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_default_244419 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_default_244419.equals (outFlow) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_exConvGateway_flowElements_954435 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                         // check object __DEC_exConvGateway_flowElements_954435 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_flowElements_954435 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_exConvGateway_flowElements_954435.getFlowElements().contains(exConvGateway));\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_flowElements_954435 and process \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_954435.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_outFlow_flowElements_187385 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                         // check object __DEC_outFlow_flowElements_187385 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_flowElements_187385 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_outFlow_flowElements_187385.getFlowElements().contains(outFlow));\n\n                                                         // check isomorphic binding between objects __DEC_outFlow_flowElements_187385 and process \n                                                         JavaSDM.ensure ( !__DEC_outFlow_flowElements_187385.equals (process) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link default from outFlow to __DEC_outFlow_default_340752\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterOutFlowTo__DEC_outFlow_default_340752 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_340752.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_outFlow_default_340752 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_340752.next ();\n\n                                                               // check object __DEC_outFlow_default_340752 is really bound\n                                                               JavaSDM.ensure ( __DEC_outFlow_default_340752 != null );\n                                                               // check isomorphic binding between objects __DEC_outFlow_default_340752 and exConvGateway \n                                                               JavaSDM.ensure ( !__DEC_outFlow_default_340752.equals (exConvGateway) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_277820\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_277820 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                         while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_277820.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               __DEC_exConvGateway_targetRef_277820 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_277820.next ();\n\n                                                               // check object __DEC_exConvGateway_targetRef_277820 is really bound\n                                                               JavaSDM.ensure ( __DEC_exConvGateway_targetRef_277820 != null );\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_277820 and divergeFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_277820.equals (divergeFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_277820 and inFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_277820.equals (inFlow) );\n\n                                                               // check isomorphic binding between objects __DEC_exConvGateway_targetRef_277820 and outFlow \n                                                               JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_277820.equals (outFlow) );\n\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check object _edge_incoming is really bound\n                                                      JavaSDM.ensure ( _edge_incoming != null );\n                                                      // check object _edge_targetRef is really bound\n                                                      JavaSDM.ensure ( _edge_targetRef != null );\n                                                      // check object divergeFlow is really bound\n                                                      JavaSDM.ensure ( divergeFlow != null );\n                                                      // check object eventGw is really bound\n                                                      JavaSDM.ensure ( eventGw != null );\n                                                      // check object exConvGateway is really bound\n                                                      JavaSDM.ensure ( exConvGateway != null );\n                                                      // check object ice is really bound\n                                                      JavaSDM.ensure ( ice != null );\n                                                      // check object inFlow is really bound\n                                                      JavaSDM.ensure ( inFlow != null );\n                                                      // check object lane is really bound\n                                                      JavaSDM.ensure ( lane != null );\n                                                      // check object laneSet is really bound\n                                                      JavaSDM.ensure ( laneSet != null );\n                                                      // check object outFlow is really bound\n                                                      JavaSDM.ensure ( outFlow != null );\n                                                      // check object process is really bound\n                                                      JavaSDM.ensure ( process != null );\n                                                      // check isomorphic binding between objects _edge_targetRef and _edge_incoming \n                                                      JavaSDM.ensure ( !_edge_targetRef.equals (_edge_incoming) );\n\n                                                      // check isomorphic binding between objects inFlow and divergeFlow \n                                                      JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and divergeFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                      // check isomorphic binding between objects outFlow and inFlow \n                                                      JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                      // check link default from exConvGateway to divergeFlow\n                                                      JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to inFlow\n                                                      JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link default from exConvGateway to outFlow\n                                                      JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                      )));\n\n                                                      // check link flowElements from divergeFlow to process\n                                                      JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from eventGw to process\n                                                      JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from exConvGateway to process\n                                                      JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from ice to process\n                                                      JavaSDM.ensure (process.equals (ice.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from inFlow to process\n                                                      JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                      ));\n\n                                                      // check link flowElements from outFlow to process\n                                                      JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                      ));\n\n                                                      // check link incoming from inFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to ice\n                                                      JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                                      ));\n\n                                                      // check link incoming from divergeFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link incoming from outFlow to exConvGateway\n                                                      JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                      )));\n\n                                                      // check link laneSets from laneSet to process\n                                                      JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                      ));\n\n                                                      // check link lanes from lane to laneSet\n                                                      JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                      ));\n\n                                                      // check link outgoing from divergeFlow to eventGw\n                                                      JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link outgoing from outFlow to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                      ));\n\n                                                      // check link src from _edge_incoming to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (_edge_incoming.getSrc ()\n                                                      ));\n\n                                                      // check link src from _edge_targetRef to inFlow\n                                                      JavaSDM.ensure (inFlow.equals (_edge_targetRef.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_incoming to inFlow\n                                                      JavaSDM.ensure (inFlow.equals (_edge_incoming.getTrg ()\n                                                      ));\n\n                                                      // check link trg from _edge_targetRef to exConvGateway\n                                                      JavaSDM.ensure (exConvGateway.equals (_edge_targetRef.getTrg ()\n                                                      ));\n\n                                                      // check link flowNodeRefs from lane to exConvGateway\n                                                      JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'\'\n                                                         fujaba__Success = this.checkTypes_FWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_97(EMoflonEdge _edge_incoming);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_80214 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_762845 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_157069 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_91984 = null;\n      ExclusiveGateway __DEC_outFlow_default_91984 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_227091 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_227091 = null;\n      Match match = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      EventBasedGateway eventGw = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      Iterator fujaba__IterExConvGatewayToLane = null;\n      Lane lane = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sourceRef is really bound\n         JavaSDM.ensure ( _edge_sourceRef != null );\n         // bind object\n         _TmpObject = _edge_sourceRef.getSrc ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_sourceRef.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // check link outgoing from outFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowNodeRefs from exConvGateway to lane\n         fujaba__Success = false;\n\n         fujaba__IterExConvGatewayToLane = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(exConvGateway,Lane.class,\"flowNodeRefs\")).iterator ();\n\n         while ( fujaba__IterExConvGatewayToLane.hasNext () )\n         {\n            try\n            {\n               lane = (Lane) fujaba__IterExConvGatewayToLane.next ();\n\n               // check object lane is really bound\n               JavaSDM.ensure ( lane != null );\n               // bind object\n               _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n               // ensure correct type and really bound of object process\n               JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n               process = (bpmn2.Process) _TmpObject;\n\n               // check if contained via correct reference\n               JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n               // check link flowElements from outFlow to process\n               JavaSDM.ensure (process.equals (outFlow.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to divergeFlow\n               fujaba__Success = false;\n\n               fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n                     // ensure correct type and really bound of object divergeFlow\n                     JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                     divergeFlow = (SequenceFlow) _TmpObject;\n                     // check isomorphic binding between objects outFlow and divergeFlow \n                     JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                     // bind object\n                     _TmpObject = divergeFlow.getTargetRef ();\n\n                     // ensure correct type and really bound of object ice\n                     JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                     ice = (IntermediateCatchEvent) _TmpObject;\n\n                     // check link flowElements from ice to process\n                     JavaSDM.ensure (process.equals (ice.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = divergeFlow.getSourceRef ();\n\n                     // ensure correct type and really bound of object eventGw\n                     JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                     eventGw = (EventBasedGateway) _TmpObject;\n\n                     // check link flowElements from eventGw to process\n                     JavaSDM.ensure (process.equals (eventGw.eContainer()\n                     ));\n\n                     // iterate to-many link incoming from exConvGateway to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                           // check object inFlow is really bound\n                           JavaSDM.ensure ( inFlow != null );\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check isomorphic binding between objects outFlow and inFlow \n                           JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                           // check link flowElements from inFlow to process\n                           JavaSDM.ensure (process.equals (inFlow.eContainer()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_default_80214 = exConvGateway.getDefault ();\n\n                                       // check object __DEC_exConvGateway_default_80214 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_default_80214 != null );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_80214 and divergeFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_80214.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_80214 and inFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_80214.equals (inFlow) );\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_default_80214 and outFlow \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_default_80214.equals (outFlow) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_exConvGateway_flowElements_762845 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                       // check object __DEC_exConvGateway_flowElements_762845 is really bound\n                                       JavaSDM.ensure ( __DEC_exConvGateway_flowElements_762845 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_exConvGateway_flowElements_762845.getFlowElements().contains(exConvGateway));\n\n                                       // check isomorphic binding between objects __DEC_exConvGateway_flowElements_762845 and process \n                                       JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_762845.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_outFlow_flowElements_157069 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                       // check object __DEC_outFlow_flowElements_157069 is really bound\n                                       JavaSDM.ensure ( __DEC_outFlow_flowElements_157069 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_outFlow_flowElements_157069.getFlowElements().contains(outFlow));\n\n                                       // check isomorphic binding between objects __DEC_outFlow_flowElements_157069 and process \n                                       JavaSDM.ensure ( !__DEC_outFlow_flowElements_157069.equals (process) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link default from outFlow to __DEC_outFlow_default_91984\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo__DEC_outFlow_default_91984 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_91984.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_outFlow_default_91984 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_91984.next ();\n\n                                             // check object __DEC_outFlow_default_91984 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_default_91984 != null );\n                                             // check isomorphic binding between objects __DEC_outFlow_default_91984 and exConvGateway \n                                             JavaSDM.ensure ( !__DEC_outFlow_default_91984.equals (exConvGateway) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_227091\n                                       fujaba__Success = false;\n\n                                       fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_227091 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_227091.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_exConvGateway_targetRef_227091 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_227091.next ();\n\n                                             // check object __DEC_exConvGateway_targetRef_227091 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_targetRef_227091 != null );\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_227091 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_227091.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_227091 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_227091.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_targetRef_227091 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_227091.equals (outFlow) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check object _edge_sourceRef is really bound\n                                    JavaSDM.ensure ( _edge_sourceRef != null );\n                                    // check object divergeFlow is really bound\n                                    JavaSDM.ensure ( divergeFlow != null );\n                                    // check object eventGw is really bound\n                                    JavaSDM.ensure ( eventGw != null );\n                                    // check object exConvGateway is really bound\n                                    JavaSDM.ensure ( exConvGateway != null );\n                                    // check object ice is really bound\n                                    JavaSDM.ensure ( ice != null );\n                                    // check object inFlow is really bound\n                                    JavaSDM.ensure ( inFlow != null );\n                                    // check object lane is really bound\n                                    JavaSDM.ensure ( lane != null );\n                                    // check object laneSet is really bound\n                                    JavaSDM.ensure ( laneSet != null );\n                                    // check object outFlow is really bound\n                                    JavaSDM.ensure ( outFlow != null );\n                                    // check object process is really bound\n                                    JavaSDM.ensure ( process != null );\n                                    // check isomorphic binding between objects inFlow and divergeFlow \n                                    JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and divergeFlow \n                                    JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                    // check isomorphic binding between objects outFlow and inFlow \n                                    JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                    // check link default from exConvGateway to divergeFlow\n                                    JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to inFlow\n                                    JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link default from exConvGateway to outFlow\n                                    JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                    )));\n\n                                    // check link flowElements from divergeFlow to process\n                                    JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from eventGw to process\n                                    JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                    ));\n\n                                    // check link flowElements from exConvGateway to process\n                                    JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                    ));\n\n                                    // check link flowElements from ice to process\n                                    JavaSDM.ensure (process.equals (ice.eContainer()\n                                    ));\n\n                                    // check link flowElements from inFlow to process\n                                    JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                    ));\n\n                                    // check link flowElements from outFlow to process\n                                    JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                    ));\n\n                                    // check link incoming from inFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to ice\n                                    JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                    ));\n\n                                    // check link incoming from divergeFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                    )));\n\n                                    // check link incoming from outFlow to exConvGateway\n                                    JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                    )));\n\n                                    // check link laneSets from laneSet to process\n                                    JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                    ));\n\n                                    // check link lanes from lane to laneSet\n                                    JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                    ));\n\n                                    // check link outgoing from divergeFlow to eventGw\n                                    JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                    ));\n\n                                    // check link outgoing from outFlow to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                    ));\n\n                                    // check link src from _edge_sourceRef to outFlow\n                                    JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sourceRef to exConvGateway\n                                    JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                    ));\n\n                                    // check link flowNodeRefs from lane to exConvGateway\n                                    JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'\'\n                                       fujaba__Success = this.checkTypes_FWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_98(
			EMoflonEdge _edge_sourceRef);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_331285 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_490466 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_686453 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_704017 = null;\n      ExclusiveGateway __DEC_outFlow_default_704017 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_273841 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_273841 = null;\n      Match match = null;\n      Iterator fujaba__IterOutFlowTo_edge_sourceRef = null;\n      EMoflonEdge _edge_sourceRef = null;\n      Iterator fujaba__IterLaneSetToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToEventGw = null;\n      EventBasedGateway eventGw = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      SequenceFlow outFlow = null;\n      ExclusiveGateway exConvGateway = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_outgoing is really bound\n         JavaSDM.ensure ( _edge_outgoing != null );\n         // bind object\n         _TmpObject = _edge_outgoing.getSrc ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_outgoing.getTrg ();\n\n         // ensure correct type and really bound of object outFlow\n         JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n         outFlow = (SequenceFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = outFlow.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) outFlow.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(outFlow));\n\n         // check link flowElements from exConvGateway to process\n         JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n         ));\n\n         // check link outgoing from outFlow to exConvGateway\n         JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n         ));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // check isomorphic binding between objects outFlow and divergeFlow \n               JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n               // bind object\n               _TmpObject = divergeFlow.getTargetRef ();\n\n               // ensure correct type and really bound of object ice\n               JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n               ice = (IntermediateCatchEvent) _TmpObject;\n\n               // check link flowElements from ice to process\n               JavaSDM.ensure (process.equals (ice.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to eventGw\n               fujaba__Success = false;\n\n               fujaba__IterProcessToEventGw = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToEventGw.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToEventGw.next ();\n\n                     // ensure correct type and really bound of object eventGw\n                     JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                     eventGw = (EventBasedGateway) _TmpObject;\n                     // check link outgoing from divergeFlow to eventGw\n                     JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link flowElements from process to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                           // ensure correct type and really bound of object inFlow\n                           JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                           inFlow = (SequenceFlow) _TmpObject;\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check isomorphic binding between objects outFlow and inFlow \n                           JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                           // check link incoming from inFlow to exConvGateway\n                           JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // iterate to-many link lanes from laneSet to lane\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLaneSetToLane = new ArrayList(laneSet.getLanes()).iterator ();\n\n                                 while ( fujaba__IterLaneSetToLane.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       lane = (Lane) fujaba__IterLaneSetToLane.next ();\n\n                                       // check object lane is really bound\n                                       JavaSDM.ensure ( lane != null );\n                                       // check link flowNodeRefs from lane to exConvGateway\n                                       JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                       // iterate to-many link src from outFlow to _edge_sourceRef\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOutFlowTo_edge_sourceRef = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterOutFlowTo_edge_sourceRef.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_sourceRef = (EMoflonEdge) fujaba__IterOutFlowTo_edge_sourceRef.next ();\n\n                                             // check object _edge_sourceRef is really bound\n                                             JavaSDM.ensure ( _edge_sourceRef != null );\n                                             // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                             JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                             // check link trg from _edge_sourceRef to exConvGateway\n                                             JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_default_331285 = exConvGateway.getDefault ();\n\n                                                   // check object __DEC_exConvGateway_default_331285 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_default_331285 != null );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_331285 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_331285.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_331285 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_331285.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_default_331285 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_default_331285.equals (outFlow) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_exConvGateway_flowElements_490466 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                                   // check object __DEC_exConvGateway_flowElements_490466 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_flowElements_490466 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_exConvGateway_flowElements_490466.getFlowElements().contains(exConvGateway));\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_flowElements_490466 and process \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_490466.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_outFlow_flowElements_686453 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                                   // check object __DEC_outFlow_flowElements_686453 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_flowElements_686453 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_outFlow_flowElements_686453.getFlowElements().contains(outFlow));\n\n                                                   // check isomorphic binding between objects __DEC_outFlow_flowElements_686453 and process \n                                                   JavaSDM.ensure ( !__DEC_outFlow_flowElements_686453.equals (process) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link default from outFlow to __DEC_outFlow_default_704017\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterOutFlowTo__DEC_outFlow_default_704017 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_704017.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_outFlow_default_704017 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_704017.next ();\n\n                                                         // check object __DEC_outFlow_default_704017 is really bound\n                                                         JavaSDM.ensure ( __DEC_outFlow_default_704017 != null );\n                                                         // check isomorphic binding between objects __DEC_outFlow_default_704017 and exConvGateway \n                                                         JavaSDM.ensure ( !__DEC_outFlow_default_704017.equals (exConvGateway) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_273841\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_273841 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_273841.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_exConvGateway_targetRef_273841 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_273841.next ();\n\n                                                         // check object __DEC_exConvGateway_targetRef_273841 is really bound\n                                                         JavaSDM.ensure ( __DEC_exConvGateway_targetRef_273841 != null );\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_273841 and divergeFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_273841.equals (divergeFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_273841 and inFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_273841.equals (inFlow) );\n\n                                                         // check isomorphic binding between objects __DEC_exConvGateway_targetRef_273841 and outFlow \n                                                         JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_273841.equals (outFlow) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check object _edge_outgoing is really bound\n                                                JavaSDM.ensure ( _edge_outgoing != null );\n                                                // check object _edge_sourceRef is really bound\n                                                JavaSDM.ensure ( _edge_sourceRef != null );\n                                                // check object divergeFlow is really bound\n                                                JavaSDM.ensure ( divergeFlow != null );\n                                                // check object eventGw is really bound\n                                                JavaSDM.ensure ( eventGw != null );\n                                                // check object exConvGateway is really bound\n                                                JavaSDM.ensure ( exConvGateway != null );\n                                                // check object ice is really bound\n                                                JavaSDM.ensure ( ice != null );\n                                                // check object inFlow is really bound\n                                                JavaSDM.ensure ( inFlow != null );\n                                                // check object lane is really bound\n                                                JavaSDM.ensure ( lane != null );\n                                                // check object laneSet is really bound\n                                                JavaSDM.ensure ( laneSet != null );\n                                                // check object outFlow is really bound\n                                                JavaSDM.ensure ( outFlow != null );\n                                                // check object process is really bound\n                                                JavaSDM.ensure ( process != null );\n                                                // check isomorphic binding between objects _edge_sourceRef and _edge_outgoing \n                                                JavaSDM.ensure ( !_edge_sourceRef.equals (_edge_outgoing) );\n\n                                                // check isomorphic binding between objects inFlow and divergeFlow \n                                                JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and divergeFlow \n                                                JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                                // check isomorphic binding between objects outFlow and inFlow \n                                                JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                                // check link default from exConvGateway to divergeFlow\n                                                JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to inFlow\n                                                JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link default from exConvGateway to outFlow\n                                                JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                                )));\n\n                                                // check link flowElements from divergeFlow to process\n                                                JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from eventGw to process\n                                                JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                                ));\n\n                                                // check link flowElements from exConvGateway to process\n                                                JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                                ));\n\n                                                // check link flowElements from ice to process\n                                                JavaSDM.ensure (process.equals (ice.eContainer()\n                                                ));\n\n                                                // check link flowElements from inFlow to process\n                                                JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                                ));\n\n                                                // check link flowElements from outFlow to process\n                                                JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                                ));\n\n                                                // check link incoming from inFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                                ));\n\n                                                // check link incoming from divergeFlow to ice\n                                                JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                                ));\n\n                                                // check link incoming from divergeFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                                )));\n\n                                                // check link incoming from outFlow to exConvGateway\n                                                JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                                )));\n\n                                                // check link laneSets from laneSet to process\n                                                JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                                ));\n\n                                                // check link lanes from lane to laneSet\n                                                JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                                ));\n\n                                                // check link outgoing from divergeFlow to eventGw\n                                                JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                                ));\n\n                                                // check link outgoing from outFlow to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                                ));\n\n                                                // check link src from _edge_outgoing to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_outgoing.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_sourceRef to outFlow\n                                                JavaSDM.ensure (outFlow.equals (_edge_sourceRef.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_outgoing to outFlow\n                                                JavaSDM.ensure (outFlow.equals (_edge_outgoing.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_sourceRef to exConvGateway\n                                                JavaSDM.ensure (exConvGateway.equals (_edge_sourceRef.getTrg ()\n                                                ));\n\n                                                // check link flowNodeRefs from lane to exConvGateway\n                                                JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'\'\n                                                   fujaba__Success = this.checkTypes_FWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_99(EMoflonEdge _edge_outgoing);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      SequenceFlow __DEC_exConvGateway_default_70755 = null;\n      FlowElementsContainer __DEC_exConvGateway_flowElements_221254 = null;\n      FlowElementsContainer __DEC_outFlow_flowElements_242635 = null;\n      Iterator fujaba__IterOutFlowTo__DEC_outFlow_default_480466 = null;\n      ExclusiveGateway __DEC_outFlow_default_480466 = null;\n      Iterator fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_722753 = null;\n      SequenceFlow __DEC_exConvGateway_targetRef_722753 = null;\n      Match match = null;\n      Iterator fujaba__IterExConvGatewayToOutFlow = null;\n      SequenceFlow outFlow = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterExConvGatewayToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToEventGw = null;\n      EventBasedGateway eventGw = null;\n      IntermediateCatchEvent ice = null;\n      Iterator fujaba__IterProcessToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      bpmn2.Process process = null;\n      ExclusiveGateway exConvGateway = null;\n      Lane lane = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_flowNodeRefs is really bound\n         JavaSDM.ensure ( _edge_flowNodeRefs != null );\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getSrc ();\n\n         // ensure correct type and really bound of object lane\n         JavaSDM.ensure ( _TmpObject instanceof Lane );\n         lane = (Lane) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_flowNodeRefs.getTrg ();\n\n         // ensure correct type and really bound of object exConvGateway\n         JavaSDM.ensure ( _TmpObject instanceof ExclusiveGateway );\n         exConvGateway = (ExclusiveGateway) _TmpObject;\n\n         // bind object\n         _TmpObject = exConvGateway.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) exConvGateway.eContainer() : null;\n\n         // ensure correct type and really bound of object process\n         JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n         process = (bpmn2.Process) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(process.getFlowElements().contains(exConvGateway));\n\n         // check link flowNodeRefs from lane to exConvGateway\n         JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n         // iterate to-many link flowElements from process to divergeFlow\n         fujaba__Success = false;\n\n         fujaba__IterProcessToDivergeFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n         while ( fujaba__IterProcessToDivergeFlow.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterProcessToDivergeFlow.next ();\n\n               // ensure correct type and really bound of object divergeFlow\n               JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n               divergeFlow = (SequenceFlow) _TmpObject;\n               // bind object\n               _TmpObject = divergeFlow.getTargetRef ();\n\n               // ensure correct type and really bound of object ice\n               JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n               ice = (IntermediateCatchEvent) _TmpObject;\n\n               // check link flowElements from ice to process\n               JavaSDM.ensure (process.equals (ice.eContainer()\n               ));\n\n               // iterate to-many link flowElements from process to eventGw\n               fujaba__Success = false;\n\n               fujaba__IterProcessToEventGw = new ArrayList(process.getFlowElements()).iterator ();\n\n               while ( fujaba__IterProcessToEventGw.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterProcessToEventGw.next ();\n\n                     // ensure correct type and really bound of object eventGw\n                     JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                     eventGw = (EventBasedGateway) _TmpObject;\n                     // check link outgoing from divergeFlow to eventGw\n                     JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                     ));\n\n                     // iterate to-many link incoming from exConvGateway to inFlow\n                     fujaba__Success = false;\n\n                     fujaba__IterExConvGatewayToInFlow = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                     while ( fujaba__IterExConvGatewayToInFlow.hasNext () )\n                     {\n                        try\n                        {\n                           inFlow = (SequenceFlow) fujaba__IterExConvGatewayToInFlow.next ();\n\n                           // check object inFlow is really bound\n                           JavaSDM.ensure ( inFlow != null );\n                           // check isomorphic binding between objects inFlow and divergeFlow \n                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                           // check link flowElements from inFlow to process\n                           JavaSDM.ensure (process.equals (inFlow.eContainer()\n                           ));\n\n                           // iterate to-many link laneSets from process to laneSet\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                           while ( fujaba__IterProcessToLaneSet.hasNext () )\n                           {\n                              try\n                              {\n                                 laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                 // check object laneSet is really bound\n                                 JavaSDM.ensure ( laneSet != null );\n                                 // check link lanes from lane to laneSet\n                                 JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                 ));\n\n                                 // iterate to-many link outgoing from exConvGateway to outFlow\n                                 fujaba__Success = false;\n\n                                 fujaba__IterExConvGatewayToOutFlow = new ArrayList(exConvGateway.getOutgoing()).iterator ();\n\n                                 while ( fujaba__IterExConvGatewayToOutFlow.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       outFlow = (SequenceFlow) fujaba__IterExConvGatewayToOutFlow.next ();\n\n                                       // check object outFlow is really bound\n                                       JavaSDM.ensure ( outFlow != null );\n                                       // check isomorphic binding between objects outFlow and divergeFlow \n                                       JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                       // check isomorphic binding between objects outFlow and inFlow \n                                       JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                       // check link flowElements from outFlow to process\n                                       JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_default_70755 = exConvGateway.getDefault ();\n\n                                             // check object __DEC_exConvGateway_default_70755 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_default_70755 != null );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_70755 and divergeFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_70755.equals (divergeFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_70755 and inFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_70755.equals (inFlow) );\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_default_70755 and outFlow \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_default_70755.equals (outFlow) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_exConvGateway_flowElements_221254 = exConvGateway.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) exConvGateway.eContainer() : null;\n\n                                             // check object __DEC_exConvGateway_flowElements_221254 is really bound\n                                             JavaSDM.ensure ( __DEC_exConvGateway_flowElements_221254 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_exConvGateway_flowElements_221254.getFlowElements().contains(exConvGateway));\n\n                                             // check isomorphic binding between objects __DEC_exConvGateway_flowElements_221254 and process \n                                             JavaSDM.ensure ( !__DEC_exConvGateway_flowElements_221254.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_outFlow_flowElements_242635 = outFlow.eContainer() instanceof FlowElementsContainer ? (FlowElementsContainer) outFlow.eContainer() : null;\n\n                                             // check object __DEC_outFlow_flowElements_242635 is really bound\n                                             JavaSDM.ensure ( __DEC_outFlow_flowElements_242635 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_outFlow_flowElements_242635.getFlowElements().contains(outFlow));\n\n                                             // check isomorphic binding between objects __DEC_outFlow_flowElements_242635 and process \n                                             JavaSDM.ensure ( !__DEC_outFlow_flowElements_242635.equals (process) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link default from outFlow to __DEC_outFlow_default_480466\n                                             fujaba__Success = false;\n\n                                             fujaba__IterOutFlowTo__DEC_outFlow_default_480466 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(outFlow,ExclusiveGateway.class,\"default\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterOutFlowTo__DEC_outFlow_default_480466.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_outFlow_default_480466 = (ExclusiveGateway) fujaba__IterOutFlowTo__DEC_outFlow_default_480466.next ();\n\n                                                   // check object __DEC_outFlow_default_480466 is really bound\n                                                   JavaSDM.ensure ( __DEC_outFlow_default_480466 != null );\n                                                   // check isomorphic binding between objects __DEC_outFlow_default_480466 and exConvGateway \n                                                   JavaSDM.ensure ( !__DEC_outFlow_default_480466.equals (exConvGateway) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link incoming from exConvGateway to __DEC_exConvGateway_targetRef_722753\n                                             fujaba__Success = false;\n\n                                             fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_722753 = new ArrayList(exConvGateway.getIncoming()).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_722753.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_exConvGateway_targetRef_722753 = (SequenceFlow) fujaba__IterExConvGatewayTo__DEC_exConvGateway_targetRef_722753.next ();\n\n                                                   // check object __DEC_exConvGateway_targetRef_722753 is really bound\n                                                   JavaSDM.ensure ( __DEC_exConvGateway_targetRef_722753 != null );\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_722753 and divergeFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_722753.equals (divergeFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_722753 and inFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_722753.equals (inFlow) );\n\n                                                   // check isomorphic binding between objects __DEC_exConvGateway_targetRef_722753 and outFlow \n                                                   JavaSDM.ensure ( !__DEC_exConvGateway_targetRef_722753.equals (outFlow) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check object _edge_flowNodeRefs is really bound\n                                          JavaSDM.ensure ( _edge_flowNodeRefs != null );\n                                          // check object divergeFlow is really bound\n                                          JavaSDM.ensure ( divergeFlow != null );\n                                          // check object eventGw is really bound\n                                          JavaSDM.ensure ( eventGw != null );\n                                          // check object exConvGateway is really bound\n                                          JavaSDM.ensure ( exConvGateway != null );\n                                          // check object ice is really bound\n                                          JavaSDM.ensure ( ice != null );\n                                          // check object inFlow is really bound\n                                          JavaSDM.ensure ( inFlow != null );\n                                          // check object lane is really bound\n                                          JavaSDM.ensure ( lane != null );\n                                          // check object laneSet is really bound\n                                          JavaSDM.ensure ( laneSet != null );\n                                          // check object outFlow is really bound\n                                          JavaSDM.ensure ( outFlow != null );\n                                          // check object process is really bound\n                                          JavaSDM.ensure ( process != null );\n                                          // check isomorphic binding between objects inFlow and divergeFlow \n                                          JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and divergeFlow \n                                          JavaSDM.ensure ( !outFlow.equals (divergeFlow) );\n\n                                          // check isomorphic binding between objects outFlow and inFlow \n                                          JavaSDM.ensure ( !outFlow.equals (inFlow) );\n\n                                          // check link default from exConvGateway to divergeFlow\n                                          JavaSDM.ensure (!(divergeFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to inFlow\n                                          JavaSDM.ensure (!(inFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link default from exConvGateway to outFlow\n                                          JavaSDM.ensure (!(outFlow.equals (exConvGateway.getDefault ()\n                                          )));\n\n                                          // check link flowElements from divergeFlow to process\n                                          JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from eventGw to process\n                                          JavaSDM.ensure (process.equals (eventGw.eContainer()\n                                          ));\n\n                                          // check link flowElements from exConvGateway to process\n                                          JavaSDM.ensure (process.equals (exConvGateway.eContainer()\n                                          ));\n\n                                          // check link flowElements from ice to process\n                                          JavaSDM.ensure (process.equals (ice.eContainer()\n                                          ));\n\n                                          // check link flowElements from inFlow to process\n                                          JavaSDM.ensure (process.equals (inFlow.eContainer()\n                                          ));\n\n                                          // check link flowElements from outFlow to process\n                                          JavaSDM.ensure (process.equals (outFlow.eContainer()\n                                          ));\n\n                                          // check link incoming from inFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (inFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to ice\n                                          JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                          ));\n\n                                          // check link incoming from divergeFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (divergeFlow.getTargetRef ()\n                                          )));\n\n                                          // check link incoming from outFlow to exConvGateway\n                                          JavaSDM.ensure (!(exConvGateway.equals (outFlow.getTargetRef ()\n                                          )));\n\n                                          // check link laneSets from laneSet to process\n                                          JavaSDM.ensure (process.equals (laneSet.eContainer()\n                                          ));\n\n                                          // check link lanes from lane to laneSet\n                                          JavaSDM.ensure (laneSet.equals (lane.eContainer()\n                                          ));\n\n                                          // check link outgoing from divergeFlow to eventGw\n                                          JavaSDM.ensure (eventGw.equals (divergeFlow.getSourceRef ()\n                                          ));\n\n                                          // check link outgoing from outFlow to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (outFlow.getSourceRef ()\n                                          ));\n\n                                          // check link src from _edge_flowNodeRefs to lane\n                                          JavaSDM.ensure (lane.equals (_edge_flowNodeRefs.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_flowNodeRefs to exConvGateway\n                                          JavaSDM.ensure (exConvGateway.equals (_edge_flowNodeRefs.getTrg ()\n                                          ));\n\n                                          // check link flowNodeRefs from lane to exConvGateway\n                                          JavaSDM.ensure (lane.getFlowNodeRefs ().contains (exConvGateway));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_FWD(match,process,eventGw,divergeFlow,ice,inFlow,exConvGateway,outFlow,lane,laneSet);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'\'\n                                             fujaba__Success = this.checkTypes_FWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_100(
			EMoflonEdge _edge_flowNodeRefs);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      ModelgeneratorRuleResult ruleResult = null;\n      IsApplicableMatch isApplicableMatch = null;\n      Object _TmpObject = null;\n      CSP csp = null;\n      ExclusiveGateway exConvGateway = null;\n      SequenceFlow outFlow = null;\n      FlowNodeToStep ecgwToStep = null;\n      SequenceFlowToStep outFlowToNormalStep = null;\n      SequenceFlowToUCFlow outFlowToInitFlow = null;\n      AlternativeFlow flow = null;\n      Iterator fujaba__IterIceToIceToFlow = null;\n      ICEToAltFlow iceToFlow = null;\n      Iterator fujaba__IterInFlowToInFlowToFlow = null;\n      SequenceFlowToUCFlow inFlowToFlow = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterDivergeFlowToDivergeFlowToAlt = null;\n      SeqFlowToAltFlowAlt divergeFlowToAlt = null;\n      Iterator fujaba__IterEventGwToDivergeFlow = null;\n      SequenceFlow divergeFlow = null;\n      Iterator fujaba__IterLaneSetToLane = null;\n      Lane lane = null;\n      Iterator fujaba__IterProcessToLaneSet = null;\n      LaneSet laneSet = null;\n      Iterator fujaba__IterProcessToInFlow = null;\n      SequenceFlow inFlow = null;\n      Iterator fujaba__IterProcessToIce = null;\n      IntermediateCatchEvent ice = null;\n      bpmn2.Process process = null;\n      EventBasedGateway eventGw = null;\n      Flow initFlow = null;\n      NormalStep normalStep = null;\n      Iterator fujaba__IterEventGwToNormalStepListToEventGwToNormalStep = null;\n      FlowNodeToStep eventGwToNormalStep = null;\n      Iterator fujaba__IterRuleEntryContainerToEventGwToNormalStepList = null;\n      RuleEntryList eventGwToNormalStepList = null;\n\n      // story node \'create result\'\n      try \n      {\n         fujaba__Success = false; \n\n         // create object ruleResult\n         ruleResult = TGGRuntimeFactory.eINSTANCE.createModelgeneratorRuleResult();\n\n         // create object isApplicableMatch\n         isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n         // assign attribute ruleResult\n         ruleResult.setSuccess (false);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'is applicable core\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object ruleEntryContainer is really bound\n         JavaSDM.ensure ( ruleEntryContainer != null );\n         // iterate to-many link ruleEntryList from ruleEntryContainer to eventGwToNormalStepList\n         fujaba__Success = false;\n\n         fujaba__IterRuleEntryContainerToEventGwToNormalStepList = new ArrayList(ruleEntryContainer.getRuleEntryList()).iterator ();\n\n         while ( fujaba__IterRuleEntryContainerToEventGwToNormalStepList.hasNext () )\n         {\n            try\n            {\n               eventGwToNormalStepList = (RuleEntryList) fujaba__IterRuleEntryContainerToEventGwToNormalStepList.next ();\n\n               // check object eventGwToNormalStepList is really bound\n               JavaSDM.ensure ( eventGwToNormalStepList != null );\n               // iterate to-many link entryObjects from eventGwToNormalStepList to eventGwToNormalStep\n               fujaba__Success = false;\n\n               fujaba__IterEventGwToNormalStepListToEventGwToNormalStep = new ArrayList(eventGwToNormalStepList.getEntryObjects()).iterator ();\n\n               while ( fujaba__IterEventGwToNormalStepListToEventGwToNormalStep.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterEventGwToNormalStepListToEventGwToNormalStep.next ();\n\n                     // ensure correct type and really bound of object eventGwToNormalStep\n                     JavaSDM.ensure ( _TmpObject instanceof FlowNodeToStep );\n                     eventGwToNormalStep = (FlowNodeToStep) _TmpObject;\n                     // bind object\n                     _TmpObject = eventGwToNormalStep.getTarget ();\n\n                     // ensure correct type and really bound of object normalStep\n                     JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n                     normalStep = (NormalStep) _TmpObject;\n\n                     // bind object\n                     initFlow = normalStep.eContainer() instanceof Flow ? (Flow) normalStep.eContainer() : null;\n\n                     // check object initFlow is really bound\n                     JavaSDM.ensure ( initFlow != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(initFlow.getSteps().contains(normalStep));\n\n                     // bind object\n                     _TmpObject = eventGwToNormalStep.getSource ();\n\n                     // ensure correct type and really bound of object eventGw\n                     JavaSDM.ensure ( _TmpObject instanceof EventBasedGateway );\n                     eventGw = (EventBasedGateway) _TmpObject;\n\n                     // bind object\n                     _TmpObject = eventGw.eContainer() instanceof bpmn2.Process ? (bpmn2.Process) eventGw.eContainer() : null;\n\n                     // ensure correct type and really bound of object process\n                     JavaSDM.ensure ( _TmpObject instanceof bpmn2.Process );\n                     process = (bpmn2.Process) _TmpObject;\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(process.getFlowElements().contains(eventGw));\n\n                     // iterate to-many link flowElements from process to ice\n                     fujaba__Success = false;\n\n                     fujaba__IterProcessToIce = new ArrayList(process.getFlowElements()).iterator ();\n\n                     while ( fujaba__IterProcessToIce.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterProcessToIce.next ();\n\n                           // ensure correct type and really bound of object ice\n                           JavaSDM.ensure ( _TmpObject instanceof IntermediateCatchEvent );\n                           ice = (IntermediateCatchEvent) _TmpObject;\n                           // iterate to-many link flowElements from process to inFlow\n                           fujaba__Success = false;\n\n                           fujaba__IterProcessToInFlow = new ArrayList(process.getFlowElements()).iterator ();\n\n                           while ( fujaba__IterProcessToInFlow.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterProcessToInFlow.next ();\n\n                                 // ensure correct type and really bound of object inFlow\n                                 JavaSDM.ensure ( _TmpObject instanceof SequenceFlow );\n                                 inFlow = (SequenceFlow) _TmpObject;\n                                 // iterate to-many link laneSets from process to laneSet\n                                 fujaba__Success = false;\n\n                                 fujaba__IterProcessToLaneSet = new ArrayList(process.getLaneSets()).iterator ();\n\n                                 while ( fujaba__IterProcessToLaneSet.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       laneSet = (LaneSet) fujaba__IterProcessToLaneSet.next ();\n\n                                       // check object laneSet is really bound\n                                       JavaSDM.ensure ( laneSet != null );\n                                       // iterate to-many link lanes from laneSet to lane\n                                       fujaba__Success = false;\n\n                                       fujaba__IterLaneSetToLane = new ArrayList(laneSet.getLanes()).iterator ();\n\n                                       while ( fujaba__IterLaneSetToLane.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             lane = (Lane) fujaba__IterLaneSetToLane.next ();\n\n                                             // check object lane is really bound\n                                             JavaSDM.ensure ( lane != null );\n                                             // iterate to-many link outgoing from eventGw to divergeFlow\n                                             fujaba__Success = false;\n\n                                             fujaba__IterEventGwToDivergeFlow = new ArrayList(eventGw.getOutgoing()).iterator ();\n\n                                             while ( fujaba__IterEventGwToDivergeFlow.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   divergeFlow = (SequenceFlow) fujaba__IterEventGwToDivergeFlow.next ();\n\n                                                   // check object divergeFlow is really bound\n                                                   JavaSDM.ensure ( divergeFlow != null );\n                                                   // check isomorphic binding between objects inFlow and divergeFlow \n                                                   JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                   // check link flowElements from divergeFlow to process\n                                                   JavaSDM.ensure (process.equals (divergeFlow.eContainer()\n                                                   ));\n\n                                                   // check link incoming from divergeFlow to ice\n                                                   JavaSDM.ensure (ice.equals (divergeFlow.getTargetRef ()\n                                                   ));\n\n                                                   // iterate to-many link source from divergeFlow to divergeFlowToAlt\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterDivergeFlowToDivergeFlowToAlt = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(divergeFlow,SeqFlowToAltFlowAlt.class,\"source\")).iterator ();\n\n                                                   while ( fujaba__IterDivergeFlowToDivergeFlowToAlt.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         divergeFlowToAlt = (SeqFlowToAltFlowAlt) fujaba__IterDivergeFlowToDivergeFlowToAlt.next ();\n\n                                                         // check object divergeFlowToAlt is really bound\n                                                         JavaSDM.ensure ( divergeFlowToAlt != null );\n                                                         // bind object\n                                                         alt = divergeFlowToAlt.getTarget ();\n\n                                                         // check object alt is really bound\n                                                         JavaSDM.ensure ( alt != null );\n\n                                                         // iterate to-many link source from inFlow to inFlowToFlow\n                                                         fujaba__Success = false;\n\n                                                         fujaba__IterInFlowToInFlowToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(inFlow,SequenceFlowToUCFlow.class,\"source\")).iterator ();\n\n                                                         while ( fujaba__IterInFlowToInFlowToFlow.hasNext () )\n                                                         {\n                                                            try\n                                                            {\n                                                               inFlowToFlow = (SequenceFlowToUCFlow) fujaba__IterInFlowToInFlowToFlow.next ();\n\n                                                               // check object inFlowToFlow is really bound\n                                                               JavaSDM.ensure ( inFlowToFlow != null );\n                                                               // iterate to-many link source from ice to iceToFlow\n                                                               fujaba__Success = false;\n\n                                                               fujaba__IterIceToIceToFlow = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(ice,ICEToAltFlow.class,\"source\")).iterator ();\n\n                                                               while ( fujaba__IterIceToIceToFlow.hasNext () )\n                                                               {\n                                                                  try\n                                                                  {\n                                                                     iceToFlow = (ICEToAltFlow) fujaba__IterIceToIceToFlow.next ();\n\n                                                                     // check object iceToFlow is really bound\n                                                                     JavaSDM.ensure ( iceToFlow != null );\n                                                                     // bind object\n                                                                     flow = iceToFlow.getTarget ();\n\n                                                                     // check object flow is really bound\n                                                                     JavaSDM.ensure ( flow != null );\n\n                                                                     // check isomorphic binding between objects initFlow and flow \n                                                                     JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                                                     // check link target from inFlowToFlow to flow\n                                                                     JavaSDM.ensure (flow.equals (inFlowToFlow.getTarget ()\n                                                                     ));\n\n                                                                     // story node \'solve CSP\'\n                                                                     try \n                                                                     {\n                                                                        fujaba__Success = false; \n\n                                                                        _TmpObject = (this.generateModel_solveCsp_BWD(isApplicableMatch,process,eventGw,divergeFlow,ice,normalStep,eventGwToNormalStep,alt,divergeFlowToAlt,flow,iceToFlow,inFlow,exConvGateway,outFlow,inFlowToFlow,ecgwToStep,initFlow,outFlowToInitFlow,outFlowToNormalStep,lane,laneSet,ruleResult));\n\n                                                                        // ensure correct type and really bound of object csp\n                                                                        JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                                                        csp = (CSP) _TmpObject;\n                                                                        fujaba__Success = true;\n                                                                     }\n                                                                     catch ( JavaSDMException fujaba__InternalException )\n                                                                     {\n                                                                        fujaba__Success = false;\n                                                                     }\n\n                                                                     // statement node \'check CSP\'\n                                                                     fujaba__Success = this.generateModel_checkCsp_BWD(csp);\n                                                                     if (fujaba__Success)\n                                                                     {\n                                                                        // story node \'perform\'\n                                                                        try \n                                                                        {\n                                                                           fujaba__Success = false; \n\n                                                                           // check object alt is really bound\n                                                                           JavaSDM.ensure ( alt != null );\n                                                                           // check object divergeFlow is really bound\n                                                                           JavaSDM.ensure ( divergeFlow != null );\n                                                                           // check object divergeFlowToAlt is really bound\n                                                                           JavaSDM.ensure ( divergeFlowToAlt != null );\n                                                                           // check object eventGw is really bound\n                                                                           JavaSDM.ensure ( eventGw != null );\n                                                                           // check object eventGwToNormalStep is really bound\n                                                                           JavaSDM.ensure ( eventGwToNormalStep != null );\n                                                                           // check object flow is really bound\n                                                                           JavaSDM.ensure ( flow != null );\n                                                                           // check object ice is really bound\n                                                                           JavaSDM.ensure ( ice != null );\n                                                                           // check object iceToFlow is really bound\n                                                                           JavaSDM.ensure ( iceToFlow != null );\n                                                                           // check object inFlow is really bound\n                                                                           JavaSDM.ensure ( inFlow != null );\n                                                                           // check object inFlowToFlow is really bound\n                                                                           JavaSDM.ensure ( inFlowToFlow != null );\n                                                                           // check object initFlow is really bound\n                                                                           JavaSDM.ensure ( initFlow != null );\n                                                                           // check object lane is really bound\n                                                                           JavaSDM.ensure ( lane != null );\n                                                                           // check object laneSet is really bound\n                                                                           JavaSDM.ensure ( laneSet != null );\n                                                                           // check object normalStep is really bound\n                                                                           JavaSDM.ensure ( normalStep != null );\n                                                                           // check object process is really bound\n                                                                           JavaSDM.ensure ( process != null );\n                                                                           // check object ruleResult is really bound\n                                                                           JavaSDM.ensure ( ruleResult != null );\n                                                                           // check isomorphic binding between objects inFlow and divergeFlow \n                                                                           JavaSDM.ensure ( !inFlow.equals (divergeFlow) );\n\n                                                                           // check isomorphic binding between objects initFlow and flow \n                                                                           JavaSDM.ensure ( !initFlow.equals (flow) );\n\n                                                                           // create object exConvGateway\n                                                                           exConvGateway = Bpmn2Factory.eINSTANCE.createExclusiveGateway();\n\n                                                                           // create object outFlow\n                                                                           outFlow = Bpmn2Factory.eINSTANCE.createSequenceFlow();\n\n                                                                           // create object ecgwToStep\n                                                                           ecgwToStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createFlowNodeToStep();\n\n                                                                           // create object outFlowToNormalStep\n                                                                           outFlowToNormalStep = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToStep();\n\n                                                                           // create object outFlowToInitFlow\n                                                                           outFlowToInitFlow = BpmnToUseCaseIntegrationFactory.eINSTANCE.createSequenceFlowToUCFlow();\n\n                                                                           // assign attribute exConvGateway\n                                                                           exConvGateway.setGatewayDirection ((bpmn2.GatewayDirection)csp.getAttributeVariable(\"exConvGateway\",\"gatewayDirection\").getValue());\n                                                                           // assign attribute ruleResult\n                                                                           ruleResult.setSuccess (true);\n\n                                                                           // create link\n                                                                           \tprocess.getFlowElements().add(exConvGateway); // add link\n\n\n                                                                           // create link\n                                                                           \tprocess.getFlowElements().add(outFlow); // add link\n\n\n                                                                           // create link\n                                                                           ecgwToStep.setTarget( normalStep);\n\n\n                                                                           // create link\n                                                                           outFlowToNormalStep.setTarget( normalStep);\n\n\n                                                                           // create link\n                                                                           exConvGateway.getIncoming().add(inFlow);\n\n\n                                                                           // create link\n                                                                           outFlow.setSourceRef( exConvGateway);\n\n\n                                                                           // create link\n                                                                           lane.getFlowNodeRefs().add(exConvGateway);\n\n\n                                                                           // create link\n                                                                           ruleResult.getSourceObjects().add(exConvGateway);\n\n\n                                                                           // create link\n                                                                           ecgwToStep.setSource( exConvGateway);\n\n\n                                                                           // create link\n                                                                           ruleResult.getSourceObjects().add(outFlow);\n\n\n                                                                           // create link\n                                                                           outFlowToNormalStep.setSource( outFlow);\n\n\n                                                                           // create link\n                                                                           outFlowToInitFlow.setSource( outFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(ecgwToStep);\n\n\n                                                                           // create link\n                                                                           outFlowToInitFlow.setTarget( initFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(outFlowToInitFlow);\n\n\n                                                                           // create link\n                                                                           ruleResult.getCorrObjects().add(outFlowToNormalStep);\n\n                                                                           fujaba__Success = true;\n                                                                        }\n                                                                        catch ( JavaSDMException fujaba__InternalException )\n                                                                        {\n                                                                           fujaba__Success = false;\n                                                                        }\n\n                                                                        return ruleResult;\n\n                                                                     }\n\n\n                                                                     fujaba__Success = true;\n                                                                  }\n                                                                  catch ( JavaSDMException fujaba__InternalException )\n                                                                  {\n                                                                     fujaba__Success = false;\n                                                                  }\n                                                               }\n                                                               JavaSDM.ensure (fujaba__Success);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n                                                         }\n                                                         JavaSDM.ensure (fujaba__Success);\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleResult;'"
	 * @generated
	 */
	ModelgeneratorRuleResult generateModel(
			RuleEntryContainer ruleEntryContainer,
			FlowNodeToStep eventGwToNormalStepDummyParameter);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"Converging\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_exConvGateway_gatewayDirection = CSPFactoryHelper.eINSTANCE.createVariable(\"exConvGateway.gatewayDirection\", csp);\r\nvar_exConvGateway_gatewayDirection.setType(\"EObject\");\r\n\r\n// Create constraints\r\nEqGatewayDirection eqGatewayDirection = new EqGatewayDirection();\r\n\r\ncsp.getConstraints().add(eqGatewayDirection);\r\n\r\n// Solve CSP\r\neqGatewayDirection.setRuleName(\"\");\r\neqGatewayDirection.solve(var_exConvGateway_gatewayDirection,literal0);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"process\",process);\r\nisApplicableMatch.registerObject(\"eventGw\",eventGw);\r\nisApplicableMatch.registerObject(\"divergeFlow\",divergeFlow);\r\nisApplicableMatch.registerObject(\"ice\",ice);\r\nisApplicableMatch.registerObject(\"normalStep\",normalStep);\r\nisApplicableMatch.registerObject(\"eventGwToNormalStep\",eventGwToNormalStep);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"divergeFlowToAlt\",divergeFlowToAlt);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"iceToFlow\",iceToFlow);\r\nisApplicableMatch.registerObject(\"inFlow\",inFlow);\r\nisApplicableMatch.registerObject(\"inFlowToFlow\",inFlowToFlow);\r\nisApplicableMatch.registerObject(\"initFlow\",initFlow);\r\nisApplicableMatch.registerObject(\"lane\",lane);\r\nisApplicableMatch.registerObject(\"laneSet\",laneSet);\r\nreturn csp;'"
	 * @generated
	 */
	CSP generateModel_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			bpmn2.Process process, EventBasedGateway eventGw,
			SequenceFlow divergeFlow, IntermediateCatchEvent ice,
			NormalStep normalStep, FlowNodeToStep eventGwToNormalStep,
			AlternativeFlowAlternative alt,
			SeqFlowToAltFlowAlt divergeFlowToAlt, AlternativeFlow flow,
			ICEToAltFlow iceToFlow, SequenceFlow inFlow,
			ExclusiveGateway exConvGateway, SequenceFlow outFlow,
			SequenceFlowToUCFlow inFlowToFlow, FlowNodeToStep ecgwToStep,
			Flow initFlow, SequenceFlowToUCFlow outFlowToInitFlow,
			SequenceFlowToStep outFlowToNormalStep, Lane lane, LaneSet laneSet,
			ModelgeneratorRuleResult ruleResult);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean generateModel_checkCsp_BWD(CSP csp);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // ExcConvGwAfterEventGwRule
